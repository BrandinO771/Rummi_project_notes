
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
ERROR - THIS CODE  APPENDED 13 TWICE TO SAME GROUP -- 
THERE WERE 11 GROUPS ON THE BOARD AND MAYBE IT JUST GLITCHED AS IT TAKES ALONG TIME TO CONSOLE PRINT AND EVAL ALL THESE GROUPS

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

ai_moves_decider10.js:926 tiles to play are  
(2) [{…}, {…}]
0: {div_id: "div_container.27", addTilesMethod: "append", sort_meth: "asc", grp_type: "straight", tiles_to_play: Array(1)}
1: {div_id: "div_container.27", addTilesMethod: "append", sort_meth: "asc", grp_type: "straight", tiles_to_play: Array(1)}
length: 2
__proto__: Array(0)
ai_moves_decider10.js:927  VERY END OF SCRIPT 
rumi_brain11_test5.js:451 here is ai_groups_put_on_gameboard  
(2) [{…}, {…}]
rumi_brain11_test5.js:452 here is the return obj , temp_obj_holder , from AiMovesDecider() 
{updated_ai_list: Array(7), ai_tiles_to_play: Array(2)}
rumi_brain11_test5.js:465 NEAR TOP OF assessAiMoves() AND ..... 
rumi_brain11_test5.js:467 total_ai_grps_to_play =  2 , ai_grps_played_ct =  0
rumi_brain11_test5.js:487  assessAiMoves() curr obj is straight and append 
rumi_brain11_test5.js:494 append_new_tile_to_existing_slot 5.slot.div_container.27 append_to_this_container_id div_container.27
rumi_brain11_test5.js:495 LINE 439 CALLING MAKE TILES APPEND
rumi_brain11_test5.js:552 calling async AiCreateNewGroup()
rumi_brain11_test5.js:638 makeNew == no typeof(makeNew) string
rumi_brain11_test5.js:639 AiCreateNewGroup receiving this  
["diamond-13-1"]
rumi_brain11_test5.js:644 AiCreateNewGroup This is the length of tile list is 1
rumi_brain11_test5.js:778 line 702  length of list is =  1 Now Calling makeStuffDelayer(); 
rumi_brain11_test5.js:767  i = 0  calling makeAiTilesAndSlots( list_of_tiles[i]  ); diamond-13-1
rumi_brain11_test5.js:663  makeAiTilesAndSlots(tile_id) receiving  diamond-13-1
rumi_brain11_test5.js:718 inside makeAiTileAndSLots and makeNew ==, no i=  0 append_new_tile_to_existing_slot 5.slot.div_container.27 tile_id = diamond-13-1
make_tile_graphic.js:11  makeTileGraphic() tileId =  diamond-13-1 append_to_id = 5.slot.div_container.27
rumi_brain11_test5.js:854 first_empty_slot found =  5 num =  6 new_slot_id =  6.slot.div_container.27
rumi_brain11_test5.js:859 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:885 << APPENDING >>- SLOT ID =  6.slot.div_container.27
rumi_brain11_test5.js:894 SLOT MADE , i =  1
rumi_brain11_test5.js:770 line 697 now calling  makeStuffDelayer(); i =  1
rumi_brain11_test5.js:786 this is < i > = 1
rumi_brain11_test5.js:498 LINE 444 MAKE TILES APPEND INITIAL THREAD COMPLETE !!! 
rumi2.html:23 [Violation] 'click' handler took 154ms
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  1  Date.now()=  1613361521307
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 1 length_of_list =  1
rumi_brain11_test5.js:750 making another tile undefined
rumi_brain11_test5.js:761  ----------BOTTOM of makeStuffDelayer()-----  i =  2  Date.now()=  1613361521308
make_tile_graphic.js:70 APPENDING TILE <  diamond-13-1 > to slot id < 5.slot.div_container.27 >
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  2  Date.now()=  1613361522108
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 2 length_of_list =  1
rumi_brain11_test5.js:757 FINISHED MAKING ONE BATCH OF AI TILES
rumi_brain11_test5.js:555 HERE IS THE R E S U L T from AiCreateNewGroup() true
rumi_brain11_test5.js:561 LINE 442 MAKE TILES COMPLETE !!! 
rumi_brain11_test5.js:562 DO I CALL assessAiMoves() AGAIN ?? ai_grps_played_ct = 1 total_ai_grps_to_play = 2
rumi_brain11_test5.js:451 here is ai_groups_put_on_gameboard  
(2) [{…}, {…}]
0:
addTilesMethod: "append"
div_id: "div_container.27"
grp_type: "straight"
sort_meth: "asc"
tiles_to_play: ["diamond-13-1"]
__proto__: Object
1:
addTilesMethod: "append"
div_id: "div_container.27"
grp_type: "straight"
sort_meth: "asc"
tiles_to_play: ["diamond-13-1"]
__proto__: Object
length: 2
__proto__: Array(0)
rumi_brain11_test5.js:452 here is the return obj , temp_obj_holder , from AiMovesDecider() 
{updated_ai_list: Array(7), ai_tiles_to_play: Array(2)}
rumi_brain11_test5.js:465 NEAR TOP OF assessAiMoves() AND ..... 
rumi_brain11_test5.js:467 total_ai_grps_to_play =  2 , ai_grps_played_ct =  1
rumi_brain11_test5.js:487  assessAiMoves() curr obj is straight and append 
rumi_brain11_test5.js:494 append_new_tile_to_existing_slot 6.slot.div_container.27 append_to_this_container_id div_container.27
rumi_brain11_test5.js:495 LINE 439 CALLING MAKE TILES APPEND
rumi_brain11_test5.js:552 calling async AiCreateNewGroup()
rumi_brain11_test5.js:638 makeNew == no typeof(makeNew) string
rumi_brain11_test5.js:639 AiCreateNewGroup receiving this  
["diamond-13-1"]
rumi_brain11_test5.js:644 AiCreateNewGroup This is the length of tile list is 1
rumi_brain11_test5.js:778 line 702  length of list is =  1 Now Calling makeStuffDelayer(); 
rumi_brain11_test5.js:767  i = 0  calling makeAiTilesAndSlots( list_of_tiles[i]  ); diamond-13-1
rumi_brain11_test5.js:663  makeAiTilesAndSlots(tile_id) receiving  diamond-13-1
rumi_brain11_test5.js:718 inside makeAiTileAndSLots and makeNew ==, no i=  0 append_new_tile_to_existing_slot 6.slot.div_container.27 tile_id = diamond-13-1
make_tile_graphic.js:11  makeTileGraphic() tileId =  diamond-13-1 append_to_id = 6.slot.div_container.27
rumi_brain11_test5.js:854 first_empty_slot found =  6 num =  7 new_slot_id =  7.slot.div_container.27
rumi_brain11_test5.js:859 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:885 << APPENDING >>- SLOT ID =  7.slot.div_container.27
rumi_brain11_test5.js:894 SLOT MADE , i =  1
rumi_brain11_test5.js:770 line 697 now calling  makeStuffDelayer(); i =  1
rumi_brain11_test5.js:786 this is < i > = 1
rumi_brain11_test5.js:498 LINE 444 MAKE TILES APPEND INITIAL THREAD COMPLETE !!! 
rumi_brain11_test5.js:566 promise returned tiles made !! 
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  1  Date.now()=  1613361522910
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 1 length_of_list =  1
rumi_brain11_test5.js:750 making another tile undefined
rumi_brain11_test5.js:761  ----------BOTTOM of makeStuffDelayer()-----  i =  2  Date.now()=  1613361522911
make_tile_graphic.js:70 APPENDING TILE <  diamond-13-1 > to slot id < 6.slot.div_container.27 >
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  2  Date.now()=  1613361523711
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 2 length_of_list =  1
rumi_brain11_test5.js:757 FINISHED MAKING ONE BATCH OF AI TILES
rumi_brain11_test5.js:555 HERE IS THE R E S U L T from AiCreateNewGroup() true
rumi_brain11_test5.js:561 LINE 442 MAKE TILES COMPLETE !!! 
rumi_brain11_test5.js:562 DO I CALL assessAiMoves() AGAIN ?? ai_grps_played_ct = 2 total_ai_grps_to_play = 2
rumi_brain11_test5.js:566 promise returned tiles made !! 
﻿
​
ai_moves_decider10.js:926 tiles to play are  
(2) [{…}, {…}]
0: {div_id: "div_container.27", addTilesMethod: "append", sort_meth: "asc", grp_type: "straight", tiles_to_play: Array(1)}
1: {div_id: "div_container.27", addTilesMethod: "append", sort_meth: "asc", grp_type: "straight", tiles_to_play: Array(1)}
length: 2
__proto__: Array(0)
ai_moves_decider10.js:927  VERY END OF SCRIPT 
rumi_brain11_test5.js:451 here is ai_groups_put_on_gameboard  
(2) [{…}, {…}]
rumi_brain11_test5.js:452 here is the return obj , temp_obj_holder , from AiMovesDecider() 
{updated_ai_list: Array(7), ai_tiles_to_play: Array(2)}
rumi_brain11_test5.js:465 NEAR TOP OF assessAiMoves() AND ..... 
rumi_brain11_test5.js:467 total_ai_grps_to_play =  2 , ai_grps_played_ct =  0
rumi_brain11_test5.js:487  assessAiMoves() curr obj is straight and append 
rumi_brain11_test5.js:494 append_new_tile_to_existing_slot 5.slot.div_container.27 append_to_this_container_id div_container.27
rumi_brain11_test5.js:495 LINE 439 CALLING MAKE TILES APPEND
rumi_brain11_test5.js:552 calling async AiCreateNewGroup()
rumi_brain11_test5.js:638 makeNew == no typeof(makeNew) string
rumi_brain11_test5.js:639 AiCreateNewGroup receiving this  
["diamond-13-1"]
rumi_brain11_test5.js:644 AiCreateNewGroup This is the length of tile list is 1
rumi_brain11_test5.js:778 line 702  length of list is =  1 Now Calling makeStuffDelayer(); 
rumi_brain11_test5.js:767  i = 0  calling makeAiTilesAndSlots( list_of_tiles[i]  ); diamond-13-1
rumi_brain11_test5.js:663  makeAiTilesAndSlots(tile_id) receiving  diamond-13-1
rumi_brain11_test5.js:718 inside makeAiTileAndSLots and makeNew ==, no i=  0 append_new_tile_to_existing_slot 5.slot.div_container.27 tile_id = diamond-13-1
make_tile_graphic.js:11  makeTileGraphic() tileId =  diamond-13-1 append_to_id = 5.slot.div_container.27
rumi_brain11_test5.js:854 first_empty_slot found =  5 num =  6 new_slot_id =  6.slot.div_container.27
rumi_brain11_test5.js:859 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:885 << APPENDING >>- SLOT ID =  6.slot.div_container.27
rumi_brain11_test5.js:894 SLOT MADE , i =  1
rumi_brain11_test5.js:770 line 697 now calling  makeStuffDelayer(); i =  1
rumi_brain11_test5.js:786 this is < i > = 1
rumi_brain11_test5.js:498 LINE 444 MAKE TILES APPEND INITIAL THREAD COMPLETE !!! 
rumi2.html:23 [Violation] 'click' handler took 154ms
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  1  Date.now()=  1613361521307
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 1 length_of_list =  1
rumi_brain11_test5.js:750 making another tile undefined
rumi_brain11_test5.js:761  ----------BOTTOM of makeStuffDelayer()-----  i =  2  Date.now()=  1613361521308
make_tile_graphic.js:70 APPENDING TILE <  diamond-13-1 > to slot id < 5.slot.div_container.27 >
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  2  Date.now()=  1613361522108
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 2 length_of_list =  1
rumi_brain11_test5.js:757 FINISHED MAKING ONE BATCH OF AI TILES
rumi_brain11_test5.js:555 HERE IS THE R E S U L T from AiCreateNewGroup() true
rumi_brain11_test5.js:561 LINE 442 MAKE TILES COMPLETE !!! 
rumi_brain11_test5.js:562 DO I CALL assessAiMoves() AGAIN ?? ai_grps_played_ct = 1 total_ai_grps_to_play = 2
rumi_brain11_test5.js:451 here is ai_groups_put_on_gameboard  
(2) [{…}, {…}]
0:
addTilesMethod: "append"
div_id: "div_container.27"
grp_type: "straight"
sort_meth: "asc"
tiles_to_play: ["diamond-13-1"]
__proto__: Object
1:
addTilesMethod: "append"
div_id: "div_container.27"
grp_type: "straight"
sort_meth: "asc"
tiles_to_play: ["diamond-13-1"]
__proto__: Object
length: 2
__proto__: Array(0)
rumi_brain11_test5.js:452 here is the return obj , temp_obj_holder , from AiMovesDecider() 
{updated_ai_list: Array(7), ai_tiles_to_play: Array(2)}
rumi_brain11_test5.js:465 NEAR TOP OF assessAiMoves() AND ..... 
rumi_brain11_test5.js:467 total_ai_grps_to_play =  2 , ai_grps_played_ct =  1
rumi_brain11_test5.js:487  assessAiMoves() curr obj is straight and append 
rumi_brain11_test5.js:494 append_new_tile_to_existing_slot 6.slot.div_container.27 append_to_this_container_id div_container.27
rumi_brain11_test5.js:495 LINE 439 CALLING MAKE TILES APPEND
rumi_brain11_test5.js:552 calling async AiCreateNewGroup()
rumi_brain11_test5.js:638 makeNew == no typeof(makeNew) string
rumi_brain11_test5.js:639 AiCreateNewGroup receiving this  
["diamond-13-1"]
rumi_brain11_test5.js:644 AiCreateNewGroup This is the length of tile list is 1
rumi_brain11_test5.js:778 line 702  length of list is =  1 Now Calling makeStuffDelayer(); 
rumi_brain11_test5.js:767  i = 0  calling makeAiTilesAndSlots( list_of_tiles[i]  ); diamond-13-1
rumi_brain11_test5.js:663  makeAiTilesAndSlots(tile_id) receiving  diamond-13-1
rumi_brain11_test5.js:718 inside makeAiTileAndSLots and makeNew ==, no i=  0 append_new_tile_to_existing_slot 6.slot.div_container.27 tile_id = diamond-13-1
make_tile_graphic.js:11  makeTileGraphic() tileId =  diamond-13-1 append_to_id = 6.slot.div_container.27
rumi_brain11_test5.js:854 first_empty_slot found =  6 num =  7 new_slot_id =  7.slot.div_container.27
rumi_brain11_test5.js:859 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:885 << APPENDING >>- SLOT ID =  7.slot.div_container.27
rumi_brain11_test5.js:894 SLOT MADE , i =  1
rumi_brain11_test5.js:770 line 697 now calling  makeStuffDelayer(); i =  1
rumi_brain11_test5.js:786 this is < i > = 1
rumi_brain11_test5.js:498 LINE 444 MAKE TILES APPEND INITIAL THREAD COMPLETE !!! 
rumi_brain11_test5.js:566 promise returned tiles made !! 
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  1  Date.now()=  1613361522910
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 1 length_of_list =  1
rumi_brain11_test5.js:750 making another tile undefined
rumi_brain11_test5.js:761  ----------BOTTOM of makeStuffDelayer()-----  i =  2  Date.now()=  1613361522911
make_tile_graphic.js:70 APPENDING TILE <  diamond-13-1 > to slot id < 6.slot.div_container.27 >
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  2  Date.now()=  1613361523711
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 2 length_of_list =  1
rumi_brain11_test5.js:757 FINISHED MAKING ONE BATCH OF AI TILES
rumi_brain11_test5.js:555 HERE IS THE R E S U L T from AiCreateNewGroup() true
rumi_brain11_test5.js:561 LINE 442 MAKE TILES COMPLETE !!! 
rumi_brain11_test5.js:562 DO I CALL assessAiMoves() AGAIN ?? ai_grps_played_ct = 2 total_ai_grps_to_play = 2
rumi_brain11_test5.js:566 promise returned tiles made !! 
﻿
​
ai_moves_decider10.js:926 tiles to play are  
(2) [{…}, {…}]
0: {div_id: "div_container.27", addTilesMethod: "append", sort_meth: "asc", grp_type: "straight", tiles_to_play: Array(1)}
1: {div_id: "div_container.27", addTilesMethod: "append", sort_meth: "asc", grp_type: "straight", tiles_to_play: Array(1)}
length: 2
__proto__: Array(0)
ai_moves_decider10.js:927  VERY END OF SCRIPT 
rumi_brain11_test5.js:451 here is ai_groups_put_on_gameboard  
(2) [{…}, {…}]
rumi_brain11_test5.js:452 here is the return obj , temp_obj_holder , from AiMovesDecider() 
{updated_ai_list: Array(7), ai_tiles_to_play: Array(2)}
rumi_brain11_test5.js:465 NEAR TOP OF assessAiMoves() AND ..... 
rumi_brain11_test5.js:467 total_ai_grps_to_play =  2 , ai_grps_played_ct =  0
rumi_brain11_test5.js:487  assessAiMoves() curr obj is straight and append 
rumi_brain11_test5.js:494 append_new_tile_to_existing_slot 5.slot.div_container.27 append_to_this_container_id div_container.27
rumi_brain11_test5.js:495 LINE 439 CALLING MAKE TILES APPEND
rumi_brain11_test5.js:552 calling async AiCreateNewGroup()
rumi_brain11_test5.js:638 makeNew == no typeof(makeNew) string
rumi_brain11_test5.js:639 AiCreateNewGroup receiving this  
["diamond-13-1"]
rumi_brain11_test5.js:644 AiCreateNewGroup This is the length of tile list is 1
rumi_brain11_test5.js:778 line 702  length of list is =  1 Now Calling makeStuffDelayer(); 
rumi_brain11_test5.js:767  i = 0  calling makeAiTilesAndSlots( list_of_tiles[i]  ); diamond-13-1
rumi_brain11_test5.js:663  makeAiTilesAndSlots(tile_id) receiving  diamond-13-1
rumi_brain11_test5.js:718 inside makeAiTileAndSLots and makeNew ==, no i=  0 append_new_tile_to_existing_slot 5.slot.div_container.27 tile_id = diamond-13-1
make_tile_graphic.js:11  makeTileGraphic() tileId =  diamond-13-1 append_to_id = 5.slot.div_container.27
rumi_brain11_test5.js:854 first_empty_slot found =  5 num =  6 new_slot_id =  6.slot.div_container.27
rumi_brain11_test5.js:859 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:885 << APPENDING >>- SLOT ID =  6.slot.div_container.27
rumi_brain11_test5.js:894 SLOT MADE , i =  1
rumi_brain11_test5.js:770 line 697 now calling  makeStuffDelayer(); i =  1
rumi_brain11_test5.js:786 this is < i > = 1
rumi_brain11_test5.js:498 LINE 444 MAKE TILES APPEND INITIAL THREAD COMPLETE !!! 
rumi2.html:23 [Violation] 'click' handler took 154ms
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  1  Date.now()=  1613361521307
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 1 length_of_list =  1
rumi_brain11_test5.js:750 making another tile undefined
rumi_brain11_test5.js:761  ----------BOTTOM of makeStuffDelayer()-----  i =  2  Date.now()=  1613361521308
make_tile_graphic.js:70 APPENDING TILE <  diamond-13-1 > to slot id < 5.slot.div_container.27 >
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  2  Date.now()=  1613361522108
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 2 length_of_list =  1
rumi_brain11_test5.js:757 FINISHED MAKING ONE BATCH OF AI TILES
rumi_brain11_test5.js:555 HERE IS THE R E S U L T from AiCreateNewGroup() true
rumi_brain11_test5.js:561 LINE 442 MAKE TILES COMPLETE !!! 
rumi_brain11_test5.js:562 DO I CALL assessAiMoves() AGAIN ?? ai_grps_played_ct = 1 total_ai_grps_to_play = 2
rumi_brain11_test5.js:451 here is ai_groups_put_on_gameboard  
(2) [{…}, {…}]
0:
addTilesMethod: "append"
div_id: "div_container.27"
grp_type: "straight"
sort_meth: "asc"
tiles_to_play: ["diamond-13-1"]
__proto__: Object
1:
addTilesMethod: "append"
div_id: "div_container.27"
grp_type: "straight"
sort_meth: "asc"
tiles_to_play: ["diamond-13-1"]
__proto__: Object
length: 2
__proto__: Array(0)
rumi_brain11_test5.js:452 here is the return obj , temp_obj_holder , from AiMovesDecider() 
{updated_ai_list: Array(7), ai_tiles_to_play: Array(2)}
rumi_brain11_test5.js:465 NEAR TOP OF assessAiMoves() AND ..... 
rumi_brain11_test5.js:467 total_ai_grps_to_play =  2 , ai_grps_played_ct =  1
rumi_brain11_test5.js:487  assessAiMoves() curr obj is straight and append 
rumi_brain11_test5.js:494 append_new_tile_to_existing_slot 6.slot.div_container.27 append_to_this_container_id div_container.27
rumi_brain11_test5.js:495 LINE 439 CALLING MAKE TILES APPEND
rumi_brain11_test5.js:552 calling async AiCreateNewGroup()
rumi_brain11_test5.js:638 makeNew == no typeof(makeNew) string
rumi_brain11_test5.js:639 AiCreateNewGroup receiving this  
["diamond-13-1"]
rumi_brain11_test5.js:644 AiCreateNewGroup This is the length of tile list is 1
rumi_brain11_test5.js:778 line 702  length of list is =  1 Now Calling makeStuffDelayer(); 
rumi_brain11_test5.js:767  i = 0  calling makeAiTilesAndSlots( list_of_tiles[i]  ); diamond-13-1
rumi_brain11_test5.js:663  makeAiTilesAndSlots(tile_id) receiving  diamond-13-1
rumi_brain11_test5.js:718 inside makeAiTileAndSLots and makeNew ==, no i=  0 append_new_tile_to_existing_slot 6.slot.div_container.27 tile_id = diamond-13-1
make_tile_graphic.js:11  makeTileGraphic() tileId =  diamond-13-1 append_to_id = 6.slot.div_container.27
rumi_brain11_test5.js:854 first_empty_slot found =  6 num =  7 new_slot_id =  7.slot.div_container.27
rumi_brain11_test5.js:859 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:885 << APPENDING >>- SLOT ID =  7.slot.div_container.27
rumi_brain11_test5.js:894 SLOT MADE , i =  1
rumi_brain11_test5.js:770 line 697 now calling  makeStuffDelayer(); i =  1
rumi_brain11_test5.js:786 this is < i > = 1
rumi_brain11_test5.js:498 LINE 444 MAKE TILES APPEND INITIAL THREAD COMPLETE !!! 
rumi_brain11_test5.js:566 promise returned tiles made !! 
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  1  Date.now()=  1613361522910
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 1 length_of_list =  1
rumi_brain11_test5.js:750 making another tile undefined
rumi_brain11_test5.js:761  ----------BOTTOM of makeStuffDelayer()-----  i =  2  Date.now()=  1613361522911
make_tile_graphic.js:70 APPENDING TILE <  diamond-13-1 > to slot id < 6.slot.div_container.27 >
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  2  Date.now()=  1613361523711
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 2 length_of_list =  1
rumi_brain11_test5.js:757 FINISHED MAKING ONE BATCH OF AI TILES
rumi_brain11_test5.js:555 HERE IS THE R E S U L T from AiCreateNewGroup() true
rumi_brain11_test5.js:561 LINE 442 MAKE TILES COMPLETE !!! 
rumi_brain11_test5.js:562 DO I CALL assessAiMoves() AGAIN ?? ai_grps_played_ct = 2 total_ai_grps_to_play = 2
rumi_brain11_test5.js:566 promise returned tiles made !! 
﻿
​
ai_moves_decider10.js:926 tiles to play are  
(2) [{…}, {…}]
0: {div_id: "div_container.27", addTilesMethod: "append", sort_meth: "asc", grp_type: "straight", tiles_to_play: Array(1)}
1: {div_id: "div_container.27", addTilesMethod: "append", sort_meth: "asc", grp_type: "straight", tiles_to_play: Array(1)}
length: 2
__proto__: Array(0)
ai_moves_decider10.js:927  VERY END OF SCRIPT 
rumi_brain11_test5.js:451 here is ai_groups_put_on_gameboard  
(2) [{…}, {…}]
rumi_brain11_test5.js:452 here is the return obj , temp_obj_holder , from AiMovesDecider() 
{updated_ai_list: Array(7), ai_tiles_to_play: Array(2)}
rumi_brain11_test5.js:465 NEAR TOP OF assessAiMoves() AND ..... 
rumi_brain11_test5.js:467 total_ai_grps_to_play =  2 , ai_grps_played_ct =  0
rumi_brain11_test5.js:487  assessAiMoves() curr obj is straight and append 
rumi_brain11_test5.js:494 append_new_tile_to_existing_slot 5.slot.div_container.27 append_to_this_container_id div_container.27
rumi_brain11_test5.js:495 LINE 439 CALLING MAKE TILES APPEND
rumi_brain11_test5.js:552 calling async AiCreateNewGroup()
rumi_brain11_test5.js:638 makeNew == no typeof(makeNew) string
rumi_brain11_test5.js:639 AiCreateNewGroup receiving this  
["diamond-13-1"]
rumi_brain11_test5.js:644 AiCreateNewGroup This is the length of tile list is 1
rumi_brain11_test5.js:778 line 702  length of list is =  1 Now Calling makeStuffDelayer(); 
rumi_brain11_test5.js:767  i = 0  calling makeAiTilesAndSlots( list_of_tiles[i]  ); diamond-13-1
rumi_brain11_test5.js:663  makeAiTilesAndSlots(tile_id) receiving  diamond-13-1
rumi_brain11_test5.js:718 inside makeAiTileAndSLots and makeNew ==, no i=  0 append_new_tile_to_existing_slot 5.slot.div_container.27 tile_id = diamond-13-1
make_tile_graphic.js:11  makeTileGraphic() tileId =  diamond-13-1 append_to_id = 5.slot.div_container.27
rumi_brain11_test5.js:854 first_empty_slot found =  5 num =  6 new_slot_id =  6.slot.div_container.27
rumi_brain11_test5.js:859 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:885 << APPENDING >>- SLOT ID =  6.slot.div_container.27
rumi_brain11_test5.js:894 SLOT MADE , i =  1
rumi_brain11_test5.js:770 line 697 now calling  makeStuffDelayer(); i =  1
rumi_brain11_test5.js:786 this is < i > = 1
rumi_brain11_test5.js:498 LINE 444 MAKE TILES APPEND INITIAL THREAD COMPLETE !!! 
rumi2.html:23 [Violation] 'click' handler took 154ms
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  1  Date.now()=  1613361521307
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 1 length_of_list =  1
rumi_brain11_test5.js:750 making another tile undefined
rumi_brain11_test5.js:761  ----------BOTTOM of makeStuffDelayer()-----  i =  2  Date.now()=  1613361521308
make_tile_graphic.js:70 APPENDING TILE <  diamond-13-1 > to slot id < 5.slot.div_container.27 >
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  2  Date.now()=  1613361522108
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 2 length_of_list =  1
rumi_brain11_test5.js:757 FINISHED MAKING ONE BATCH OF AI TILES
rumi_brain11_test5.js:555 HERE IS THE R E S U L T from AiCreateNewGroup() true
rumi_brain11_test5.js:561 LINE 442 MAKE TILES COMPLETE !!! 
rumi_brain11_test5.js:562 DO I CALL assessAiMoves() AGAIN ?? ai_grps_played_ct = 1 total_ai_grps_to_play = 2
rumi_brain11_test5.js:451 here is ai_groups_put_on_gameboard  
(2) [{…}, {…}]
0:
addTilesMethod: "append"
div_id: "div_container.27"
grp_type: "straight"
sort_meth: "asc"
tiles_to_play: ["diamond-13-1"]
__proto__: Object
1:
addTilesMethod: "append"
div_id: "div_container.27"
grp_type: "straight"
sort_meth: "asc"
tiles_to_play: ["diamond-13-1"]
__proto__: Object
length: 2
__proto__: Array(0)
rumi_brain11_test5.js:452 here is the return obj , temp_obj_holder , from AiMovesDecider() 
{updated_ai_list: Array(7), ai_tiles_to_play: Array(2)}
rumi_brain11_test5.js:465 NEAR TOP OF assessAiMoves() AND ..... 
rumi_brain11_test5.js:467 total_ai_grps_to_play =  2 , ai_grps_played_ct =  1
rumi_brain11_test5.js:487  assessAiMoves() curr obj is straight and append 
rumi_brain11_test5.js:494 append_new_tile_to_existing_slot 6.slot.div_container.27 append_to_this_container_id div_container.27
rumi_brain11_test5.js:495 LINE 439 CALLING MAKE TILES APPEND
rumi_brain11_test5.js:552 calling async AiCreateNewGroup()
rumi_brain11_test5.js:638 makeNew == no typeof(makeNew) string
rumi_brain11_test5.js:639 AiCreateNewGroup receiving this  
["diamond-13-1"]
rumi_brain11_test5.js:644 AiCreateNewGroup This is the length of tile list is 1
rumi_brain11_test5.js:778 line 702  length of list is =  1 Now Calling makeStuffDelayer(); 
rumi_brain11_test5.js:767  i = 0  calling makeAiTilesAndSlots( list_of_tiles[i]  ); diamond-13-1
rumi_brain11_test5.js:663  makeAiTilesAndSlots(tile_id) receiving  diamond-13-1
rumi_brain11_test5.js:718 inside makeAiTileAndSLots and makeNew ==, no i=  0 append_new_tile_to_existing_slot 6.slot.div_container.27 tile_id = diamond-13-1
make_tile_graphic.js:11  makeTileGraphic() tileId =  diamond-13-1 append_to_id = 6.slot.div_container.27
rumi_brain11_test5.js:854 first_empty_slot found =  6 num =  7 new_slot_id =  7.slot.div_container.27
rumi_brain11_test5.js:859 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:885 << APPENDING >>- SLOT ID =  7.slot.div_container.27
rumi_brain11_test5.js:894 SLOT MADE , i =  1
rumi_brain11_test5.js:770 line 697 now calling  makeStuffDelayer(); i =  1
rumi_brain11_test5.js:786 this is < i > = 1
rumi_brain11_test5.js:498 LINE 444 MAKE TILES APPEND INITIAL THREAD COMPLETE !!! 
rumi_brain11_test5.js:566 promise returned tiles made !! 
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  1  Date.now()=  1613361522910
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 1 length_of_list =  1
rumi_brain11_test5.js:750 making another tile undefined
rumi_brain11_test5.js:761  ----------BOTTOM of makeStuffDelayer()-----  i =  2  Date.now()=  1613361522911
make_tile_graphic.js:70 APPENDING TILE <  diamond-13-1 > to slot id < 6.slot.div_container.27 >
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  2  Date.now()=  1613361523711
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 2 length_of_list =  1
rumi_brain11_test5.js:757 FINISHED MAKING ONE BATCH OF AI TILES
rumi_brain11_test5.js:555 HERE IS THE R E S U L T from AiCreateNewGroup() true
rumi_brain11_test5.js:561 LINE 442 MAKE TILES COMPLETE !!! 
rumi_brain11_test5.js:562 DO I CALL assessAiMoves() AGAIN ?? ai_grps_played_ct = 2 total_ai_grps_to_play = 2
rumi_brain11_test5.js:566 promise returned tiles made !! 
﻿
​
ai_moves_decider10.js:926 tiles to play are  
(2) [{…}, {…}]
0: {div_id: "div_container.27", addTilesMethod: "append", sort_meth: "asc", grp_type: "straight", tiles_to_play: Array(1)}
1: {div_id: "div_container.27", addTilesMethod: "append", sort_meth: "asc", grp_type: "straight", tiles_to_play: Array(1)}
length: 2
__proto__: Array(0)
ai_moves_decider10.js:927  VERY END OF SCRIPT 
rumi_brain11_test5.js:451 here is ai_groups_put_on_gameboard  
(2) [{…}, {…}]
rumi_brain11_test5.js:452 here is the return obj , temp_obj_holder , from AiMovesDecider() 
{updated_ai_list: Array(7), ai_tiles_to_play: Array(2)}
rumi_brain11_test5.js:465 NEAR TOP OF assessAiMoves() AND ..... 
rumi_brain11_test5.js:467 total_ai_grps_to_play =  2 , ai_grps_played_ct =  0
rumi_brain11_test5.js:487  assessAiMoves() curr obj is straight and append 
rumi_brain11_test5.js:494 append_new_tile_to_existing_slot 5.slot.div_container.27 append_to_this_container_id div_container.27
rumi_brain11_test5.js:495 LINE 439 CALLING MAKE TILES APPEND
rumi_brain11_test5.js:552 calling async AiCreateNewGroup()
rumi_brain11_test5.js:638 makeNew == no typeof(makeNew) string
rumi_brain11_test5.js:639 AiCreateNewGroup receiving this  
["diamond-13-1"]
rumi_brain11_test5.js:644 AiCreateNewGroup This is the length of tile list is 1
rumi_brain11_test5.js:778 line 702  length of list is =  1 Now Calling makeStuffDelayer(); 
rumi_brain11_test5.js:767  i = 0  calling makeAiTilesAndSlots( list_of_tiles[i]  ); diamond-13-1
rumi_brain11_test5.js:663  makeAiTilesAndSlots(tile_id) receiving  diamond-13-1
rumi_brain11_test5.js:718 inside makeAiTileAndSLots and makeNew ==, no i=  0 append_new_tile_to_existing_slot 5.slot.div_container.27 tile_id = diamond-13-1
make_tile_graphic.js:11  makeTileGraphic() tileId =  diamond-13-1 append_to_id = 5.slot.div_container.27
rumi_brain11_test5.js:854 first_empty_slot found =  5 num =  6 new_slot_id =  6.slot.div_container.27
rumi_brain11_test5.js:859 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:885 << APPENDING >>- SLOT ID =  6.slot.div_container.27
rumi_brain11_test5.js:894 SLOT MADE , i =  1
rumi_brain11_test5.js:770 line 697 now calling  makeStuffDelayer(); i =  1
rumi_brain11_test5.js:786 this is < i > = 1
rumi_brain11_test5.js:498 LINE 444 MAKE TILES APPEND INITIAL THREAD COMPLETE !!! 
rumi2.html:23 [Violation] 'click' handler took 154ms
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  1  Date.now()=  1613361521307
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 1 length_of_list =  1
rumi_brain11_test5.js:750 making another tile undefined
rumi_brain11_test5.js:761  ----------BOTTOM of makeStuffDelayer()-----  i =  2  Date.now()=  1613361521308
make_tile_graphic.js:70 APPENDING TILE <  diamond-13-1 > to slot id < 5.slot.div_container.27 >
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  2  Date.now()=  1613361522108
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 2 length_of_list =  1
rumi_brain11_test5.js:757 FINISHED MAKING ONE BATCH OF AI TILES
rumi_brain11_test5.js:555 HERE IS THE R E S U L T from AiCreateNewGroup() true
rumi_brain11_test5.js:561 LINE 442 MAKE TILES COMPLETE !!! 
rumi_brain11_test5.js:562 DO I CALL assessAiMoves() AGAIN ?? ai_grps_played_ct = 1 total_ai_grps_to_play = 2
rumi_brain11_test5.js:451 here is ai_groups_put_on_gameboard  
(2) [{…}, {…}]
0:
addTilesMethod: "append"
div_id: "div_container.27"
grp_type: "straight"
sort_meth: "asc"
tiles_to_play: ["diamond-13-1"]
__proto__: Object
1:
addTilesMethod: "append"
div_id: "div_container.27"
grp_type: "straight"
sort_meth: "asc"
tiles_to_play: ["diamond-13-1"]
__proto__: Object
length: 2
__proto__: Array(0)
rumi_brain11_test5.js:452 here is the return obj , temp_obj_holder , from AiMovesDecider() 
{updated_ai_list: Array(7), ai_tiles_to_play: Array(2)}
rumi_brain11_test5.js:465 NEAR TOP OF assessAiMoves() AND ..... 
rumi_brain11_test5.js:467 total_ai_grps_to_play =  2 , ai_grps_played_ct =  1
rumi_brain11_test5.js:487  assessAiMoves() curr obj is straight and append 
rumi_brain11_test5.js:494 append_new_tile_to_existing_slot 6.slot.div_container.27 append_to_this_container_id div_container.27
rumi_brain11_test5.js:495 LINE 439 CALLING MAKE TILES APPEND
rumi_brain11_test5.js:552 calling async AiCreateNewGroup()
rumi_brain11_test5.js:638 makeNew == no typeof(makeNew) string
rumi_brain11_test5.js:639 AiCreateNewGroup receiving this  
["diamond-13-1"]
rumi_brain11_test5.js:644 AiCreateNewGroup This is the length of tile list is 1
rumi_brain11_test5.js:778 line 702  length of list is =  1 Now Calling makeStuffDelayer(); 
rumi_brain11_test5.js:767  i = 0  calling makeAiTilesAndSlots( list_of_tiles[i]  ); diamond-13-1
rumi_brain11_test5.js:663  makeAiTilesAndSlots(tile_id) receiving  diamond-13-1
rumi_brain11_test5.js:718 inside makeAiTileAndSLots and makeNew ==, no i=  0 append_new_tile_to_existing_slot 6.slot.div_container.27 tile_id = diamond-13-1
make_tile_graphic.js:11  makeTileGraphic() tileId =  diamond-13-1 append_to_id = 6.slot.div_container.27
rumi_brain11_test5.js:854 first_empty_slot found =  6 num =  7 new_slot_id =  7.slot.div_container.27
rumi_brain11_test5.js:859 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:885 << APPENDING >>- SLOT ID =  7.slot.div_container.27
rumi_brain11_test5.js:894 SLOT MADE , i =  1
rumi_brain11_test5.js:770 line 697 now calling  makeStuffDelayer(); i =  1
rumi_brain11_test5.js:786 this is < i > = 1
rumi_brain11_test5.js:498 LINE 444 MAKE TILES APPEND INITIAL THREAD COMPLETE !!! 
rumi_brain11_test5.js:566 promise returned tiles made !! 
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  1  Date.now()=  1613361522910
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 1 length_of_list =  1
rumi_brain11_test5.js:750 making another tile undefined
rumi_brain11_test5.js:761  ----------BOTTOM of makeStuffDelayer()-----  i =  2  Date.now()=  1613361522911
make_tile_graphic.js:70 APPENDING TILE <  diamond-13-1 > to slot id < 6.slot.div_container.27 >
rumi_brain11_test5.js:747  ----------TOP of makeStuffDelayer()-----  i =  2  Date.now()=  1613361523711
rumi_brain11_test5.js:749 makeStuffDelayer() running  i = 2 length_of_list =  1
rumi_brain11_test5.js:757 FINISHED MAKING ONE BATCH OF AI TILES
rumi_brain11_test5.js:555 HERE IS THE R E S U L T from AiCreateNewGroup() true
rumi_brain11_test5.js:561 LINE 442 MAKE TILES COMPLETE !!! 
rumi_brain11_test5.js:562 DO I CALL assessAiMoves() AGAIN ?? ai_grps_played_ct = 2 total_ai_grps_to_play = 2
rumi_brain11_test5.js:566 promise returned tiles made !! 
﻿
​









>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
OK think we fixed RECURSIVE infinite loop

was --- simple error of not adding div id to list that ensure we dont review divs more than once
the question is what is diff between < dontEvaluateTheseGameGrpsAgain > and < all_played_grps_ids > I should 
really only need < all_played_grps_ids >  and not the other to avoid checking same groups again

ai_moves_decider line 643:>> below added  && !all_played_grps_ids.includes( tile_group_category.div_id )
643: if ( !max_suit_list.includes( curr_suit ) && !all_played_grps_ids.includes( tile_group_category.div_id )  )

And line 682 - 687:
if( !dontEvaluateTheseGameGrpsAgain.includes(tile_group_category.div_id) )
                { 
                    dontEvaluateTheseGameGrpsAgain.push(tile_group_category.div_id);
                    console.log("just addded div id to < dontEvaluateTheseGameGrpsAgain >",  dontEvaluateTheseGameGrpsAgain, 'tile_group_category.div_id ', tile_group_category.div_id);
                }
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

SENARIO BELOW RUNS PERFECT WE HAD :
div.1 circle 3-6
div.3 square 4-7
div.2 circle 8-10

BECAUSE WE HAD 2 CIRCLE GROUPS RECURSIVE HAD TO RUN AND IT LOOKED AT THE SECOND DIV GROUP A SECOND TIME AROUND 
THE RESULT  WAS TO PLAY SQUARE 3 AND SQUARE 8 ON BOTH ENDS OF DIV.3 BUT I DONT SUPPORT THAT FEATURE YET

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
ai_list= ["diamond-3-2", "square-6-2", "diamond-7-2", "triangle-6-2", 
        "square-8-2", "square-3-2", "diamond-13-2", "square-12-2"]
game_board_groups
{1: Array(0), 2: Array(0), 3: Array(0), 4: Array(0), 5: Array(0), 6: Array(0), 7: Array(0), 8: Array(0), 9: Array(0), 10: Array(0), 11: Array(0), 12: Array(0), 13: Array(0), circle: Array(0), diamond: Array(0), square: Array(0), triangle: Array(0)}1: []2: []3: []4: []5: []6: []7: []8: []9: []10: []11: []12: []13: []circle: []diamond: []square: []triangle: []__proto__: Object
            
rumi_brain11_test5.js:122 clear list being called .....
rumi_brain11_test5.js:124 the selectedList []
rumi_brain11_test5.js:1045 DEEEEEEEEETACH --- detachFromParent(); being called 
rumi_brain11_test5.js:1111 isMouseDown 1
rumi_brain11_test5.js:1125 <><>--dragElement Receiving this obj--<><> null
eval_played_groups1.js:414 here are all groups HTMLCollection(3) [div#div_container.1.tileContainer, div#div_container.2.tileContainer, div#div_container.3.tileContainer, div_container.1: div#div_container.1.tileContainer, div_container.2: div#div_container.2.tileContainer, div_container.3: div#div_container.3.tileContainer]
eval_played_groups1.js:415 type of all_tile_groups  object
eval_played_groups1.js:420 the tile_groups <div class=​"tileContainer" id=​"div_container.1" onmouseenter=​"newTileToGroup()​;​" onmouseleave=​"tileLeavingGroup()​;​" style=​"width:​ 650px;​ top:​ 175px;​ left:​ 42px;​ position:​ absolute;​ margin-top:​ 0px;​">​…​</div>​
eval_played_groups1.js:420 the tile_groups <div class=​"tileContainer" id=​"div_container.2" onmouseenter=​"newTileToGroup()​;​" onmouseleave=​"tileLeavingGroup()​;​" style=​"width:​ 620px;​ top:​ 511px;​ left:​ 38px;​ position:​ absolute;​ margin-top:​ 0px;​">​…​</div>​
eval_played_groups1.js:420 the tile_groups <div class=​"tileContainer" id=​"div_container.3" onmouseenter=​"newTileToGroup()​;​" onmouseleave=​"tileLeavingGroup()​;​" style=​"width:​ 650px;​ top:​ 101px;​ left:​ 826px;​ position:​ absolute;​ margin-top:​ 0px;​">​…​</div>​
eval_played_groups1.js:450 master_groups_list (3) [Array(4), Array(4), Array(4)]
3eval_played_groups1.js:93 before inner loop var index_pos = -1
eval_played_groups1.js:109  Am i Printing ??? 
eval_played_groups1.js:121 Top of tile_array check suit
eval_played_groups1.js:122 this is tile_array (4) ["div_container.1", Array(5), Array(5), Array(4)]
eval_played_groups1.js:124 tile_array[1].length 5
eval_played_groups1.js:125  the error group so far is= [] tile_array[0] div_container.1
eval_played_groups1.js:135 CHECKING FOR SIMILAR SUIT, (5) ["circle", "circle", "circle", "circle", "empty_slot"]
eval_played_groups1.js:140 location of empty slot is  4
eval_played_groups1.js:143 x is = 1
eval_played_groups1.js:140 location of empty slot is  4
eval_played_groups1.js:143 x is = 2
eval_played_groups1.js:145 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (4) ["circle", "circle", "circle", "circle"] (4) [3, 4, 5, 6]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["circle"]  sames =  ["circle"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["circle"]  sames =  (2) ["circle", "circle"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["circle"]  sames =  (3) ["circle", "circle", "circle"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["circle"]  sames =  (4) ["circle", "circle", "circle", "circle"]
eval_played_groups1.js:169 here are the uniques_list ["circle"] here is the sames_list (4) ["circle", "circle", "circle", "circle"]
eval_played_groups1.js:172 in 3/4 of a kind determined all tiles are same suit, and NOT 3 or 4 of a Kind  But may be a STRAIGHT
eval_played_groups1.js:219 at end of check 3-4 of kind and check_numbers_state is =  10
eval_played_groups1.js:254 this is a number in list checking consecutive 3
eval_played_groups1.js:258 We have small to large sort
eval_played_groups1.js:279 this is the list we are checking for consecutive numbers and should not have empty slot (4) ["circle", "circle", "circle", "circle"]
eval_played_groups1.js:291 these are the same suit  (4) ["circle", "circle", "circle", "circle"]
eval_played_groups1.js:340 << CONSECT CORRECT >>...THIS GROUP IS  A   PROPERLY SORTED "STRAIGHT"  (4) [3, 4, 5, 6]
eval_played_groups1.js:349 <<THIS IS ref_name  
eval_played_groups1.js:350 << THIS IS tile_array  (4) ["div_container.1", Array(4), Array(4), Array(4)]
eval_played_groups1.js:351 <<THIS IS tile_array[0]  div_container.1
eval_played_groups1.js:352 <<THIS IS tile_array[3]  (4) ["circle-3-1", "circle-4-2", "circle-5-1", "circle-6-2"]
eval_played_groups1.js:356 <<This is the obj we push to suit {div_id: "div_container.1", sort_meth: "asc", grp_type: "straight", tile_ids: Array(4)}
eval_played_groups1.js:358 <<THIS IS game_board_groups[ref_name]  undefined
eval_played_groups1.js:359 <<THIS IS game_board_groups    {1: Array(0), 2: Array(0), 3: Array(0), 4: Array(0), 5: Array(0), 6: Array(0), 7: Array(0), 8: Array(0), 9: Array(0), 10: Array(0), 11: Array(0), 12: Array(0), 13: Array(0), circle: Array(1), diamond: Array(0), square: Array(0), triangle: Array(0)}
eval_played_groups1.js:121 Top of tile_array check suit
eval_played_groups1.js:122 this is tile_array (4) ["div_container.2", Array(4), Array(4), Array(3)]
eval_played_groups1.js:124 tile_array[1].length 4
eval_played_groups1.js:125  the error group so far is= [] tile_array[0] div_container.2
eval_played_groups1.js:135 CHECKING FOR SIMILAR SUIT, (4) ["circle", "circle", "circle", "empty_slot"]
eval_played_groups1.js:140 location of empty slot is  3
eval_played_groups1.js:143 x is = 1
eval_played_groups1.js:140 location of empty slot is  3
eval_played_groups1.js:143 x is = 2
eval_played_groups1.js:145 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (3) ["circle", "circle", "circle"] (3) [8, 9, 10]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["circle"]  sames =  ["circle"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["circle"]  sames =  (2) ["circle", "circle"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["circle"]  sames =  (3) ["circle", "circle", "circle"]
eval_played_groups1.js:169 here are the uniques_list ["circle"] here is the sames_list (3) ["circle", "circle", "circle"]
eval_played_groups1.js:172 in 3/4 of a kind determined all tiles are same suit, and NOT 3 or 4 of a Kind  But may be a STRAIGHT
eval_played_groups1.js:219 at end of check 3-4 of kind and check_numbers_state is =  10
eval_played_groups1.js:254 this is a number in list checking consecutive 8
eval_played_groups1.js:258 We have small to large sort
eval_played_groups1.js:279 this is the list we are checking for consecutive numbers and should not have empty slot (3) ["circle", "circle", "circle"]
eval_played_groups1.js:291 these are the same suit  (3) ["circle", "circle", "circle"]
eval_played_groups1.js:340 << CONSECT CORRECT >>...THIS GROUP IS  A   PROPERLY SORTED "STRAIGHT"  (3) [8, 9, 10]
eval_played_groups1.js:349 <<THIS IS ref_name  
eval_played_groups1.js:350 << THIS IS tile_array  (4) ["div_container.2", Array(3), Array(3), Array(3)]
eval_played_groups1.js:351 <<THIS IS tile_array[0]  div_container.2
eval_played_groups1.js:352 <<THIS IS tile_array[3]  (3) ["circle-8-1", "circle-9-1", "circle-10-2"]
eval_played_groups1.js:356 <<This is the obj we push to suit {div_id: "div_container.2", sort_meth: "asc", grp_type: "straight", tile_ids: Array(3)}
eval_played_groups1.js:358 <<THIS IS game_board_groups[ref_name]  undefined
eval_played_groups1.js:359 <<THIS IS game_board_groups    {1: Array(0), 2: Array(0), 3: Array(0), 4: Array(0), 5: Array(0), 6: Array(0), 7: Array(0), 8: Array(0), 9: Array(0), 10: Array(0), 11: Array(0), 12: Array(0), 13: Array(0), circle: Array(2), diamond: Array(0), square: Array(0), triangle: Array(0)}
eval_played_groups1.js:121 Top of tile_array check suit
eval_played_groups1.js:122 this is tile_array (4) ["div_container.3", Array(5), Array(5), Array(4)]
eval_played_groups1.js:124 tile_array[1].length 5
eval_played_groups1.js:125  the error group so far is= [] tile_array[0] div_container.3
eval_played_groups1.js:135 CHECKING FOR SIMILAR SUIT, (5) ["square", "square", "square", "square", "empty_slot"]
eval_played_groups1.js:140 location of empty slot is  4
eval_played_groups1.js:143 x is = 1
eval_played_groups1.js:140 location of empty slot is  4
eval_played_groups1.js:143 x is = 2
eval_played_groups1.js:145 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (4) ["square", "square", "square", "square"] (4) [4, 5, 6, 7]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["square"]  sames =  ["square"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["square"]  sames =  (2) ["square", "square"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["square"]  sames =  (3) ["square", "square", "square"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["square"]  sames =  (4) ["square", "square", "square", "square"]
eval_played_groups1.js:169 here are the uniques_list ["square"] here is the sames_list (4) ["square", "square", "square", "square"]
eval_played_groups1.js:172 in 3/4 of a kind determined all tiles are same suit, and NOT 3 or 4 of a Kind  But may be a STRAIGHT
eval_played_groups1.js:219 at end of check 3-4 of kind and check_numbers_state is =  10
eval_played_groups1.js:254 this is a number in list checking consecutive 4
eval_played_groups1.js:258 We have small to large sort
eval_played_groups1.js:279 this is the list we are checking for consecutive numbers and should not have empty slot (4) ["square", "square", "square", "square"]
eval_played_groups1.js:291 these are the same suit  (4) ["square", "square", "square", "square"]
eval_played_groups1.js:340 << CONSECT CORRECT >>...THIS GROUP IS  A   PROPERLY SORTED "STRAIGHT"  (4) [4, 5, 6, 7]
eval_played_groups1.js:349 <<THIS IS ref_name  
eval_played_groups1.js:350 << THIS IS tile_array  (4) ["div_container.3", Array(4), Array(4), Array(4)]
eval_played_groups1.js:351 <<THIS IS tile_array[0]  div_container.3
eval_played_groups1.js:352 <<THIS IS tile_array[3]  (4) ["square-4-1", "square-5-2", "square-6-1", "square-7-1"]
eval_played_groups1.js:356 <<This is the obj we push to suit {div_id: "div_container.3", sort_meth: "asc", grp_type: "straight", tile_ids: Array(4)}
eval_played_groups1.js:358 <<THIS IS game_board_groups[ref_name]  undefined
eval_played_groups1.js:359 <<THIS IS game_board_groups    {1: Array(0), 2: Array(0), 3: Array(0), 4: Array(0), 5: Array(0), 6: Array(0), 7: Array(0), 8: Array(0), 9: Array(0), 10: Array(0), 11: Array(0), 12: Array(0), 13: Array(0), circle: Array(2), diamond: Array(0), square: Array(1), triangle: Array(0)}
eval_played_groups1.js:381 THIS IS ERROR GROUPS SO FAR  []
eval_played_groups1.js:388 this is errorGroups []
eval_played_groups1.js:391 this item is not in errorgroups div_container.1
eval_played_groups1.js:61  this is the item to be corrected  <div class=​"tileContainer" id=​"div_container.1" onmouseenter=​"newTileToGroup()​;​" onmouseleave=​"tileLeavingGroup()​;​" style=​"width:​ 650px;​ top:​ 175px;​ left:​ 42px;​ position:​ absolute;​ margin-top:​ 0px;​ border-color:​ blue;​">​…​</div>​
eval_played_groups1.js:62  this is its border color  
eval_played_groups1.js:388 this is errorGroups []
eval_played_groups1.js:391 this item is not in errorgroups div_container.2
eval_played_groups1.js:61  this is the item to be corrected  <div class=​"tileContainer" id=​"div_container.2" onmouseenter=​"newTileToGroup()​;​" onmouseleave=​"tileLeavingGroup()​;​" style=​"width:​ 620px;​ top:​ 511px;​ left:​ 38px;​ position:​ absolute;​ margin-top:​ 0px;​ border-color:​ blue;​">​…​</div>​
eval_played_groups1.js:62  this is its border color  
eval_played_groups1.js:388 this is errorGroups []
eval_played_groups1.js:391 this item is not in errorgroups div_container.3
eval_played_groups1.js:61  this is the item to be corrected  <div class=​"tileContainer" id=​"div_container.3" onmouseenter=​"newTileToGroup()​;​" onmouseleave=​"tileLeavingGroup()​;​" style=​"width:​ 650px;​ top:​ 101px;​ left:​ 826px;​ position:​ absolute;​ margin-top:​ 0px;​ border-color:​ blue;​">​…​</div>​
eval_played_groups1.js:62  this is its border color  
rumi_brain11_test5.js:353 XXXXXXXXXXXXXX  These are the groups on the board  XXXXXXXXXXXXXXXXXX {1: Array(0), 2: Array(0), 3: Array(0), 4: Array(0), 5: Array(0), 6: Array(0), 7: Array(0), 8: Array(0), 9: Array(0), 10: Array(0), 11: Array(0), 12: Array(0), 13: Array(0), circle: Array(2), diamond: Array(0), square: Array(1), triangle: Array(0)}
ai_moves_decider10.js:151 ai_moves_decider.js is running
ai_moves_decider10.js:186 ai_tiles_organized_1 =  {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-3-2
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-6-2
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-7-2
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped triangle-6-2
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-8-2
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-3-2
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-13-2
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-12-2
ai_moves_decider10.js:222 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider10.js:256 possible straights []
ai_moves_decider10.js:268 total_points 0
ai_moves_decider10.js:320 ai_a_kind_organized {1: Array(1), 2: Array(1), 3: Array(1), 4: Array(1), 5: Array(1), 6: Array(1), 7: Array(1), 8: Array(1), 9: Array(1), 10: Array(1), 11: Array(1), 12: Array(1), 13: Array(1)}
ai_moves_decider10.js:361 ai_playable_of_kind = []
ai_moves_decider10.js:479 ai_playable_of_kind = []
ai_moves_decider10.js:480  ai_poss_suits =  []
ai_moves_decider10.js:482 test_string baby
ai_moves_decider10.js:484 test_string baby
ai_moves_decider10.js:516 <<<<<<<<<<<<<<<  BUILDING FINAL OBJ OF <--SELF MADE MELDS--->  TO PLAY >>>>>>>>>>>>>>>>
ai_moves_decider10.js:517  this is master_ai_playable_list =  [] this is its length = 0
ai_moves_decider10.js:532 here is pla ai_tiles_list << BEFORE >> to deletion of tiles we will play (8) ["diamond-3-2", "square-6-2", "diamond-7-2", "triangle-6-2", "square-8-2", "square-3-2", "diamond-13-2", "square-12-2"]
ai_moves_decider10.js:533 here are all playable groups thus far []
ai_moves_decider10.js:534 here is the GROUPS TO BE PLAYED SO FAR , add_ai_tiles_gb_group []
ai_moves_decider10.js:552 here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (8) ["diamond-3-2", "square-6-2", "diamond-7-2", "triangle-6-2", "square-8-2", "square-3-2", "diamond-13-2", "square-12-2"]
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-3-2
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-6-2
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-7-2
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped triangle-6-2
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-8-2
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-3-2
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-13-2
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-12-2
ai_moves_decider10.js:222 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider10.js:558 here is  ai_tiles_organized_1 rebuilt with loose tiles, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider10.js:559 ai_tiles_organized_1 < circle  >  rebuilt w remaining Ai tiles not self melded, (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider10.js:560 ai_tiles_organized_1 < diamond >  rebuilt w remaining Ai tiles not self melded, (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider10.js:561 ai_tiles_organized_1 < square  >  rebuilt w remaining Ai tiles not self melded, (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider10.js:562 ai_tiles_organized_1 < triangle > rebuilt w remaining Ai tiles not self melded, (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider10.js:603 counting gameboard groups >>  key in this obj 1
ai_moves_decider10.js:606 game_board_groups[key] = undefined
ai_moves_decider10.js:603 counting gameboard groups >>  key in this obj 2
ai_moves_decider10.js:606 game_board_groups[key] = undefined
ai_moves_decider10.js:603 counting gameboard groups >>  key in this obj 3
ai_moves_decider10.js:606 game_board_groups[key] = undefined
ai_moves_decider10.js:603 counting gameboard groups >>  key in this obj 4
ai_moves_decider10.js:606 game_board_groups[key] = undefined
ai_moves_decider10.js:603 counting gameboard groups >>  key in this obj 5
ai_moves_decider10.js:606 game_board_groups[key] = undefined
ai_moves_decider10.js:603 counting gameboard groups >>  key in this obj 6
ai_moves_decider10.js:606 game_board_groups[key] = undefined
ai_moves_decider10.js:603 counting gameboard groups >>  key in this obj 7
ai_moves_decider10.js:606 game_board_groups[key] = undefined
ai_moves_decider10.js:603 counting gameboard groups >>  key in this obj 8
ai_moves_decider10.js:606 game_board_groups[key] = undefined
ai_moves_decider10.js:603 counting gameboard groups >>  key in this obj 9
ai_moves_decider10.js:606 game_board_groups[key] = undefined
ai_moves_decider10.js:603 counting gameboard groups >>  key in this obj 10
ai_moves_decider10.js:606 game_board_groups[key] = undefined
ai_moves_decider10.js:603 counting gameboard groups >>  key in this obj 11
ai_moves_decider10.js:606 game_board_groups[key] = undefined
ai_moves_decider10.js:603 counting gameboard groups >>  key in this obj 12
ai_moves_decider10.js:606 game_board_groups[key] = undefined
ai_moves_decider10.js:603 counting gameboard groups >>  key in this obj 13
ai_moves_decider10.js:606 game_board_groups[key] = undefined
ai_moves_decider10.js:603 counting gameboard groups >>  key in this obj circle
ai_moves_decider10.js:606 game_board_groups[key] = {div_id: "div_container.1", sort_meth: "asc", grp_type: "straight", tile_ids: Array(4)}
ai_moves_decider10.js:603 counting gameboard groups >>  key in this obj diamond
ai_moves_decider10.js:606 game_board_groups[key] = undefined
ai_moves_decider10.js:603 counting gameboard groups >>  key in this obj square
ai_moves_decider10.js:606 game_board_groups[key] = {div_id: "div_container.3", sort_meth: "asc", grp_type: "straight", tile_ids: Array(4)}
ai_moves_decider10.js:603 counting gameboard groups >>  key in this obj triangle
ai_moves_decider10.js:606 game_board_groups[key] = undefined
ai_moves_decider10.js:610 game_board_gp_count 3
ai_moves_decider10.js:615 here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider10.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.1", sort_meth: "asc", grp_type: "straight", tile_ids: Array(4)}
ai_moves_decider10.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (4) ["circle-3-1", "circle-4-2", "circle-5-1", "circle-6-2"]
ai_moves_decider10.js:645 [] "max_suit_list doesnt include this curr_suit < " "circle" ">  so we keep mapping via for loop"
ai_moves_decider10.js:660 this is dontEvaluateTheseGameGrpsAgain  [] and it should not have this div id in it!!,  div_container.1
ai_moves_decider10.js:663 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-3-1 JUST MAPPED THIS , tile_id,  circle-3-1
ai_moves_decider10.js:664 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider10.js:669 NEW DIV ID added to,  all_played_grps_ids  ["div_container.1"]
ai_moves_decider10.js:672  in for loop curr tile id is  circle-3-1
ai_moves_decider10.js:677 max_suit_list added new element circle
ai_moves_decider10.js:660 this is dontEvaluateTheseGameGrpsAgain  [] and it should not have this div id in it!!,  div_container.1
ai_moves_decider10.js:663 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-4-2 JUST MAPPED THIS , tile_id,  circle-4-2
ai_moves_decider10.js:664 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider10.js:672  in for loop curr tile id is  circle-4-2
ai_moves_decider10.js:660 this is dontEvaluateTheseGameGrpsAgain  [] and it should not have this div id in it!!,  div_container.1
ai_moves_decider10.js:663 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-5-1 JUST MAPPED THIS , tile_id,  circle-5-1
ai_moves_decider10.js:664 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider10.js:672  in for loop curr tile id is  circle-5-1
ai_moves_decider10.js:660 this is dontEvaluateTheseGameGrpsAgain  [] and it should not have this div id in it!!,  div_container.1
ai_moves_decider10.js:663 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-6-2 JUST MAPPED THIS , tile_id,  circle-6-2
ai_moves_decider10.js:664 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider10.js:672  in for loop curr tile id is  circle-6-2
ai_moves_decider10.js:685 just addded div id to < dontEvaluateTheseGameGrpsAgain > ["div_container.1"] tile_group_category.div_id  div_container.1
ai_moves_decider10.js:687 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider10.js:688 MAXXXXX  max_suit_list = ["circle"]
ai_moves_decider10.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.2", sort_meth: "asc", grp_type: "straight", tile_ids: Array(3)}
ai_moves_decider10.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["circle-8-1", "circle-9-1", "circle-10-2"]
ai_moves_decider10.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.3", sort_meth: "asc", grp_type: "straight", tile_ids: Array(4)}
ai_moves_decider10.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (4) ["square-4-1", "square-5-2", "square-6-1", "square-7-1"]
ai_moves_decider10.js:645 ["circle"] "max_suit_list doesnt include this curr_suit < " "square" ">  so we keep mapping via for loop"
ai_moves_decider10.js:660 this is dontEvaluateTheseGameGrpsAgain  ["div_container.1"] and it should not have this div id in it!!,  div_container.3
ai_moves_decider10.js:663 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-4-1 JUST MAPPED THIS , tile_id,  square-4-1
ai_moves_decider10.js:664 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.3 JUST MAPPED THIS , tile_group_category.div_id,  div_container.3
ai_moves_decider10.js:669 NEW DIV ID added to,  all_played_grps_ids  (2) ["div_container.1", "div_container.3"]
ai_moves_decider10.js:672  in for loop curr tile id is  square-4-1
ai_moves_decider10.js:677 max_suit_list added new element square
ai_moves_decider10.js:660 this is dontEvaluateTheseGameGrpsAgain  ["div_container.1"] and it should not have this div id in it!!,  div_container.3
ai_moves_decider10.js:663 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-5-2 JUST MAPPED THIS , tile_id,  square-5-2
ai_moves_decider10.js:664 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.3 JUST MAPPED THIS , tile_group_category.div_id,  div_container.3
ai_moves_decider10.js:672  in for loop curr tile id is  square-5-2
ai_moves_decider10.js:660 this is dontEvaluateTheseGameGrpsAgain  ["div_container.1"] and it should not have this div id in it!!,  div_container.3
ai_moves_decider10.js:663 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-6-1 JUST MAPPED THIS , tile_id,  square-6-1
ai_moves_decider10.js:664 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.3 JUST MAPPED THIS , tile_group_category.div_id,  div_container.3
ai_moves_decider10.js:672  in for loop curr tile id is  square-6-1
ai_moves_decider10.js:660 this is dontEvaluateTheseGameGrpsAgain  ["div_container.1"] and it should not have this div id in it!!,  div_container.3
ai_moves_decider10.js:663 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-7-1 JUST MAPPED THIS , tile_id,  square-7-1
ai_moves_decider10.js:664 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.3 JUST MAPPED THIS , tile_group_category.div_id,  div_container.3
ai_moves_decider10.js:672  in for loop curr tile id is  square-7-1
ai_moves_decider10.js:685 just addded div id to < dontEvaluateTheseGameGrpsAgain > (2) ["div_container.1", "div_container.3"] tile_group_category.div_id  div_container.3
ai_moves_decider10.js:687 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider10.js:688 MAXXXXX  max_suit_list = (2) ["circle", "square"]
ai_moves_decider10.js:699 SO FAR >> all_played_grps_ids =  (2) ["div_container.1", "div_container.3"]
ai_moves_decider10.js:700  MAP GAMEBOARD TO  <  ai_tiles_organized_1 >  - JUST COMPLETED A FULL PASS  {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider10.js:704 max suit list never filled, lets check for new matches calling   checkAiGroupToGameBoardGroup()   (2) ["circle", "square"]
ai_moves_decider10.js:732 top of  checkAiGroupToGameBoardGroup() here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider10.js:767 condition 2 met , curr_grp_id = obj.loc;  div_container.1 curr obj  {loc: "div_container.1", id: "circle-3-1", num: 3}
ai_moves_decider10.js:756 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-3-2 curr obj  {loc: "ai_rack", id: "diamond-3-2", num: 3}
ai_moves_decider10.js:757 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider10.js:758 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-3-2"]
ai_moves_decider10.js:756 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-7-2 curr obj  {loc: "ai_rack", id: "diamond-7-2", num: 7}
ai_moves_decider10.js:757 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider10.js:758 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-7-2"]
ai_moves_decider10.js:756 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-13-2 curr obj  {loc: "ai_rack", id: "diamond-13-2", num: 13}
ai_moves_decider10.js:757 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider10.js:758 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-13-2"]
ai_moves_decider10.js:756 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-3-2 curr obj  {loc: "ai_rack", id: "square-3-2", num: 3}
ai_moves_decider10.js:757 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider10.js:758 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-3-2"]
ai_moves_decider10.js:767 condition 2 met , curr_grp_id = obj.loc;  div_container.3 curr obj  {loc: "div_container.3", id: "square-4-1", num: 4}
ai_moves_decider10.js:756 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 1 square-8-2 curr obj  {loc: "ai_rack", id: "square-8-2", num: 8}
ai_moves_decider10.js:757 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider10.js:758 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = (2) ["square-3-2", "square-8-2"]
ai_moves_decider10.js:777 conditions 1 and 2 met now hitting a ??  cond1 = 1 cond2 = 1 temp list is  (2) ["square-3-2", "square-8-2"]
ai_moves_decider10.js:789 iterate throug game_board_group looking for div_container.3 to match div_container.3
ai_moves_decider10.js:799 in this stmt  if ( condition1_met == 1 && condition2_met == 1 && obj.loc == ?), add_ai_tiles_gb_group =  [{…}]
ai_moves_decider10.js:756 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-12-2 curr obj  {loc: "ai_rack", id: "square-12-2", num: 12}
ai_moves_decider10.js:757 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = [{…}]
ai_moves_decider10.js:758 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-12-2"]
ai_moves_decider10.js:756 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 triangle-6-2 curr obj  {loc: "ai_rack", id: "triangle-6-2", num: 6}
ai_moves_decider10.js:757 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = [{…}]
ai_moves_decider10.js:758 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["triangle-6-2"]
ai_moves_decider10.js:827  +
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            // RE RUN MATCHES --NOW THIS WORKS MAN !
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            
ai_moves_decider10.js:834  <<< REEEE--CURSION!! >>>  - RERUNNING MATCH -- GAME BOARD TILES TO AI RACK
ai_moves_decider10.js:835 all_played_grps_ids (2) ["div_container.1", "div_container.3"] game_board_gp_count 3
ai_moves_decider10.js:716 top of clearOutTilesToBePlayedFromAIList() AND tiles_tobe_played =  (2) ["square-3-2", "square-8-2"]
ai_moves_decider10.js:722 clearOutTilesToBePlayedFromAIList() here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (6) ["diamond-3-2", "square-6-2", "diamond-7-2", "triangle-6-2", "diamond-13-2", "square-12-2"]
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-3-2
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-6-2
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-7-2
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped triangle-6-2
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-13-2
ai_moves_decider10.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-12-2
ai_moves_decider10.js:222 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider10.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.1", sort_meth: "asc", grp_type: "straight", tile_ids: Array(4)}
ai_moves_decider10.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (4) ["circle-3-1", "circle-4-2", "circle-5-1", "circle-6-2"]
ai_moves_decider10.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.2", sort_meth: "asc", grp_type: "straight", tile_ids: Array(3)}
ai_moves_decider10.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["circle-8-1", "circle-9-1", "circle-10-2"]
ai_moves_decider10.js:645 [] "max_suit_list doesnt include this curr_suit < " "circle" ">  so we keep mapping via for loop"
ai_moves_decider10.js:660 this is dontEvaluateTheseGameGrpsAgain  (2) ["div_container.1", "div_container.3"] and it should not have this div id in it!!,  div_container.2
ai_moves_decider10.js:663 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-8-1 JUST MAPPED THIS , tile_id,  circle-8-1
ai_moves_decider10.js:664 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.2 JUST MAPPED THIS , tile_group_category.div_id,  div_container.2
ai_moves_decider10.js:669 NEW DIV ID added to,  all_played_grps_ids  (3) ["div_container.1", "div_container.3", "div_container.2"]
ai_moves_decider10.js:672  in for loop curr tile id is  circle-8-1
ai_moves_decider10.js:677 max_suit_list added new element circle
ai_moves_decider10.js:660 this is dontEvaluateTheseGameGrpsAgain  (2) ["div_container.1", "div_container.3"] and it should not have this div id in it!!,  div_container.2
ai_moves_decider10.js:663 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-9-1 JUST MAPPED THIS , tile_id,  circle-9-1
ai_moves_decider10.js:664 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.2 JUST MAPPED THIS , tile_group_category.div_id,  div_container.2
ai_moves_decider10.js:672  in for loop curr tile id is  circle-9-1
ai_moves_decider10.js:660 this is dontEvaluateTheseGameGrpsAgain  (2) ["div_container.1", "div_container.3"] and it should not have this div id in it!!,  div_container.2
ai_moves_decider10.js:663 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-10-2 JUST MAPPED THIS , tile_id,  circle-10-2
ai_moves_decider10.js:664 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.2 JUST MAPPED THIS , tile_group_category.div_id,  div_container.2
ai_moves_decider10.js:672  in for loop curr tile id is  circle-10-2
ai_moves_decider10.js:685 just addded div id to < dontEvaluateTheseGameGrpsAgain > (3) ["div_container.1", "div_container.3", "div_container.2"] tile_group_category.div_id  div_container.2
ai_moves_decider10.js:687 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider10.js:688 MAXXXXX  max_suit_list = ["circle"]
ai_moves_decider10.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.3", sort_meth: "asc", grp_type: "straight", tile_ids: Array(4)}
ai_moves_decider10.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (4) ["square-4-1", "square-5-2", "square-6-1", "square-7-1"]
ai_moves_decider10.js:699 SO FAR >> all_played_grps_ids =  (3) ["div_container.1", "div_container.3", "div_container.2"]
ai_moves_decider10.js:700  MAP GAMEBOARD TO  <  ai_tiles_organized_1 >  - JUST COMPLETED A FULL PASS  {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider10.js:704 max suit list never filled, lets check for new matches calling   checkAiGroupToGameBoardGroup()   ["circle"]
ai_moves_decider10.js:732 top of  checkAiGroupToGameBoardGroup() here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider10.js:767 condition 2 met , curr_grp_id = obj.loc;  div_container.2 curr obj  {loc: "div_container.2", id: "circle-8-1", num: 8}
ai_moves_decider10.js:756 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-3-2 curr obj  {loc: "ai_rack", id: "diamond-3-2", num: 3}
ai_moves_decider10.js:757 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = [{…}]
ai_moves_decider10.js:758 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-3-2"]
ai_moves_decider10.js:756 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-7-2 curr obj  {loc: "ai_rack", id: "diamond-7-2", num: 7}
ai_moves_decider10.js:757 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = [{…}]
ai_moves_decider10.js:758 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-7-2"]
ai_moves_decider10.js:756 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-13-2 curr obj  {loc: "ai_rack", id: "diamond-13-2", num: 13}
ai_moves_decider10.js:757 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = [{…}]
ai_moves_decider10.js:758 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-13-2"]
ai_moves_decider10.js:756 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-6-2 curr obj  {loc: "ai_rack", id: "square-6-2", num: 6}
ai_moves_decider10.js:757 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = [{…}]
ai_moves_decider10.js:758 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-6-2"]
ai_moves_decider10.js:756 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-12-2 curr obj  {loc: "ai_rack", id: "square-12-2", num: 12}
ai_moves_decider10.js:757 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = [{…}]
ai_moves_decider10.js:758 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-12-2"]
ai_moves_decider10.js:756 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 triangle-6-2 curr obj  {loc: "ai_rack", id: "triangle-6-2", num: 6}
ai_moves_decider10.js:757 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = [{…}]
ai_moves_decider10.js:758 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["triangle-6-2"]
ai_moves_decider10.js:716 top of clearOutTilesToBePlayedFromAIList() AND tiles_tobe_played =  []
ai_moves_decider10.js:722 clearOutTilesToBePlayedFromAIList() here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (6) ["diamond-3-2", "square-6-2", "diamond-7-2", "triangle-6-2", "diamond-13-2", "square-12-2"]
ai_moves_decider10.js:926 tiles to play are  [{…}]0: addTilesMethod: "both_ends"div_id: "div_container.3"grp_type: "straight"sort_meth: "asc"tiles_to_play: (2) ["square-3-2", "square-8-2"]__proto__: Objectlength: 1__proto__: Array(0)
ai_moves_decider10.js:927  VERY END OF SCRIPT 
rumi_brain11_test5.js:451 here is ai_groups_put_on_gameboard  [{…}]0: {div_id: "div_container.3", addTilesMethod: "both_ends", sort_meth: "asc", grp_type: "straight", tiles_to_play: Array(2)}length: 1__proto__: Array(0)concat: ƒ concat()constructor: ƒ Array()copyWithin: ƒ copyWithin()entries: ƒ entries()every: ƒ every()fill: ƒ fill()filter: ƒ filter()find: ƒ find()findIndex: ƒ findIndex()flat: ƒ flat()flatMap: ƒ flatMap()forEach: ƒ forEach()includes: ƒ includes()indexOf: ƒ indexOf()join: ƒ join()keys: ƒ keys()lastIndexOf: ƒ lastIndexOf()length: 0map: ƒ map()pop: ƒ pop()push: ƒ push()reduce: ƒ reduce()reduceRight: ƒ reduceRight()reverse: ƒ reverse()shift: ƒ shift()slice: ƒ slice()some: ƒ some()sort: ƒ sort()splice: ƒ splice()toLocaleString: ƒ toLocaleString()toString: ƒ toString()unshift: ƒ unshift()values: ƒ values()Symbol(Symbol.iterator): ƒ values()Symbol(Symbol.unscopables): {copyWithin: true, entries: true, fill: true, find: true, findIndex: true, …}__proto__: Object
rumi_brain11_test5.js:452 here is the return obj , temp_obj_holder , from AiMovesDecider() {updated_ai_list: Array(6), ai_tiles_to_play: Array(1)}
rumi_brain11_test5.js:465 NEAR TOP OF assessAiMoves() AND ..... 
rumi_brain11_test5.js:467 total_ai_grps_to_play =  1 , ai_grps_played_ct =  0
rumi_brain11_test5.js:122 clear list being called .....
rumi_brain11_test5.js:124 the selectedList []
makeTileGraphic("square-3-2")





//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


infinite loop 

player 1 list =  (16) ["circle-11-2", "square-11-2", "circle-7-2", "triangle-9-1", "square-7-1", "triangle-1-1", "square-13-2", "diamond-9-1", "diamond-1-1", "circle-5-2", "circle-12-2", "triangle-4-2", "circle-10-2", "circle-9-1", "square-8-1", "triangle-9-2"]

ai1 list
0: "circle-7-1"
1: "diamond-11-1"
2: "diamond-5-2"
3: "diamond-10-2"
4: "diamond-6-2"
5: "diamond-13-2"
6: "square-12-1"
7: "triangle-2-2"
8: "square-4-2"
9: "square-8-2"

on board is:
    square 6,7,8,  div_container.4
    circle 1-5, div_container.14
    circle 9-13, div_container.1
    triangle 6-12, "div_container.5
    3ofkind 1-circle, 1-triangle, 1-diamond , div_container.9




>>>>!! first it look to match ai tiles to these 3 groups, no match found
    circle 9-13, div_container.1
    square 6,7,8,  div_container.4
    triangle 6-12, div_container.5

>>>>!! and never adds <div 14> to <all_played_grps_ids> which is a circle group, so the funct keeps running because the all_played_grps_ids length does not = 4 
cuz we cant add it because it is already full of a circle ... ? 
    3ofkind 1-circle, 1-triangle, 1-diamond , div_container.9
    circle 1-5, div_container.14
    


here are all groups HTMLCollection(5) [div#div_container.1.tileContainer, div#div_container.4.tileContainer, div#div_container.5.tileContainer, div#div_container.9.tileContainer, div#div_container.14.tileContainer, div_container.1: div#div_container.1.tileContainer, div_container.4: div#div_container.4.tileContainer, div_container.5: div#div_container.5.tileContainer, div_container.9: div#div_container.9.tileContainer, div_container.14: div#div_container.14.tileContainer]
eval_played_groups1.js:415 type of all_tile_groups  object
eval_played_groups1.js:420 the tile_groups 
eval_played_groups1.js:420 the tile_groups 
eval_played_groups1.js:420 the tile_groups 
eval_played_groups1.js:420 the tile_groups 
eval_played_groups1.js:420 the tile_groups 
eval_played_groups1.js:450 master_groups_list (5) [Array(4), Array(4), Array(4), Array(4), Array(4)]
5eval_played_groups1.js:93 before inner loop var index_pos = -1
eval_played_groups1.js:109  Am i Printing ??? 
eval_played_groups1.js:121 Top of tile_array check suit
eval_played_groups1.js:122 this is tile_array (4) ["div_container.1", Array(6), Array(6), Array(5)]
eval_played_groups1.js:124 tile_array[1].length 6
eval_played_groups1.js:125  the error group so far is= [] tile_array[0] div_container.1
eval_played_groups1.js:247 location of empty slot is  5
eval_played_groups1.js:250 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (5) ["circle", "circle", "circle", "circle", "circle"]
eval_played_groups1.js:247 location of empty slot is  5
eval_played_groups1.js:250 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (5) [9, 10, 11, 12, 13]
eval_played_groups1.js:254 this is a number in list checking consecutive 9
eval_played_groups1.js:258 We have small to large sort
eval_played_groups1.js:279 this is the list we are checking for consecutive numbers and should not have empty slot (5) ["circle", "circle", "circle", "circle", "circle"]
eval_played_groups1.js:291 these are the same suit  (5) ["circle", "circle", "circle", "circle", "circle"]
eval_played_groups1.js:340 << CONSECT CORRECT >>...THIS GROUP IS  A   PROPERLY SORTED "STRAIGHT"  (5) [9, 10, 11, 12, 13]
eval_played_groups1.js:349 <<THIS IS ref_name  
eval_played_groups1.js:350 << THIS IS tile_array  (4) ["div_container.1", Array(5), Array(5), Array(5)]
eval_played_groups1.js:351 <<THIS IS tile_array[0]  div_container.1
eval_played_groups1.js:352 <<THIS IS tile_array[3]  (5) ["circle-9-1", "circle-10-2", "circle-11-2", "circle-12-2", "circle-13-2"]
eval_played_groups1.js:356 <<This is the obj we push to suit {div_id: "div_container.1", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
eval_played_groups1.js:358 <<THIS IS game_board_groups[ref_name]  undefined
eval_played_groups1.js:359 <<THIS IS game_board_groups    {1: Array(0), 2: Array(0), 3: Array(0), 4: Array(0), 5: Array(0), 6: Array(0), 7: Array(0), 8: Array(0), 9: Array(0), 10: Array(0), 11: Array(0), 12: Array(0), 13: Array(0), circle: Array(1), diamond: Array(0), square: Array(0), triangle: Array(0)}
eval_played_groups1.js:121 Top of tile_array check suit
eval_played_groups1.js:122 this is tile_array (4) ["div_container.4", Array(4), Array(4), Array(3)]
eval_played_groups1.js:124 tile_array[1].length 4
eval_played_groups1.js:125  the error group so far is= [] tile_array[0] div_container.4
eval_played_groups1.js:135 CHECKING FOR SIMILAR SUIT, (4) ["square", "square", "square", "empty_slot"]
eval_played_groups1.js:140 location of empty slot is  3
eval_played_groups1.js:143 x is = 1
eval_played_groups1.js:140 location of empty slot is  3
eval_played_groups1.js:143 x is = 2
eval_played_groups1.js:145 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (3) ["square", "square", "square"] (3) [6, 7, 8]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["square"]  sames =  ["square"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["square"]  sames =  (2) ["square", "square"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["square"]  sames =  (3) ["square", "square", "square"]
eval_played_groups1.js:169 here are the uniques_list ["square"] here is the sames_list (3) ["square", "square", "square"]
eval_played_groups1.js:172 in 3/4 of a kind determined all tiles are same suit, and NOT 3 or 4 of a Kind  But may be a STRAIGHT
eval_played_groups1.js:219 at end of check 3-4 of kind and check_numbers_state is =  10
eval_played_groups1.js:254 this is a number in list checking consecutive 6
eval_played_groups1.js:258 We have small to large sort
eval_played_groups1.js:279 this is the list we are checking for consecutive numbers and should not have empty slot (3) ["square", "square", "square"]
eval_played_groups1.js:291 these are the same suit  (3) ["square", "square", "square"]
eval_played_groups1.js:340 << CONSECT CORRECT >>...THIS GROUP IS  A   PROPERLY SORTED "STRAIGHT"  (3) [6, 7, 8]
eval_played_groups1.js:349 <<THIS IS ref_name  
eval_played_groups1.js:350 << THIS IS tile_array  (4) ["div_container.4", Array(3), Array(3), Array(3)]
eval_played_groups1.js:351 <<THIS IS tile_array[0]  div_container.4
eval_played_groups1.js:352 <<THIS IS tile_array[3]  (3) ["square-6-2", "square-7-1", "square-8-1"]
eval_played_groups1.js:356 <<This is the obj we push to suit {div_id: "div_container.4", sort_meth: "asc", grp_type: "straight", tile_ids: Array(3)}
eval_played_groups1.js:358 <<THIS IS game_board_groups[ref_name]  undefined
eval_played_groups1.js:359 <<THIS IS game_board_groups    {1: Array(0), 2: Array(0), 3: Array(0), 4: Array(0), 5: Array(0), 6: Array(0), 7: Array(0), 8: Array(0), 9: Array(0), 10: Array(0), 11: Array(0), 12: Array(0), 13: Array(0), circle: Array(1), diamond: Array(0), square: Array(1), triangle: Array(0)}
eval_played_groups1.js:121 Top of tile_array check suit
eval_played_groups1.js:122 this is tile_array (4) ["div_container.5", Array(8), Array(8), Array(7)]
eval_played_groups1.js:124 tile_array[1].length 8
eval_played_groups1.js:125  the error group so far is= [] tile_array[0] div_container.5
eval_played_groups1.js:247 location of empty slot is  7




rumi_brain11_test5.js:122 clear list being called .....
rumi_brain11_test5.js:124 the selectedList []
rumi_brain11_test5.js:1045 DEEEEEEEEETACH --- detachFromParent(); being called 
rumi_brain11_test5.js:1111 isMouseDown 1
rumi_brain11_test5.js:1125 <><>--dragElement Receiving this obj--<><> null
eval_played_groups1.js:414 here are all groups HTMLCollection(5) [div#div_container.1.tileContainer, div#div_container.4.tileContainer, div#div_container.5.tileContainer, div#div_container.9.tileContainer, div#div_container.14.tileContainer, div_container.1: div#div_container.1.tileContainer, div_container.4: div#div_container.4.tileContainer, div_container.5: div#div_container.5.tileContainer, div_container.9: div#div_container.9.tileContainer, div_container.14: div#div_container.14.tileContainer]
eval_played_groups1.js:415 type of all_tile_groups  object
eval_played_groups1.js:420 the tile_groups 
eval_played_groups1.js:420 the tile_groups 
eval_played_groups1.js:420 the tile_groups 
eval_played_groups1.js:420 the tile_groups 
eval_played_groups1.js:420 the tile_groups 
eval_played_groups1.js:450 master_groups_list (5) [Array(4), Array(4), Array(4), Array(4), Array(4)]
5eval_played_groups1.js:93 before inner loop var index_pos = -1
eval_played_groups1.js:109  Am i Printing ??? 
eval_played_groups1.js:121 Top of tile_array check suit
eval_played_groups1.js:122 this is tile_array (4) ["div_container.1", Array(6), Array(6), Array(5)]
eval_played_groups1.js:124 tile_array[1].length 6
eval_played_groups1.js:125  the error group so far is= [] tile_array[0] div_container.1
eval_played_groups1.js:247 location of empty slot is  5
eval_played_groups1.js:250 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (5) ["circle", "circle", "circle", "circle", "circle"]
eval_played_groups1.js:247 location of empty slot is  5
eval_played_groups1.js:250 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (5) [9, 10, 11, 12, 13]
eval_played_groups1.js:254 this is a number in list checking consecutive 9
eval_played_groups1.js:258 We have small to large sort
eval_played_groups1.js:279 this is the list we are checking for consecutive numbers and should not have empty slot (5) ["circle", "circle", "circle", "circle", "circle"]
eval_played_groups1.js:291 these are the same suit  (5) ["circle", "circle", "circle", "circle", "circle"]
eval_played_groups1.js:340 << CONSECT CORRECT >>...THIS GROUP IS  A   PROPERLY SORTED "STRAIGHT"  (5) [9, 10, 11, 12, 13]
eval_played_groups1.js:349 <<THIS IS ref_name  
eval_played_groups1.js:350 << THIS IS tile_array  (4) ["div_container.1", Array(5), Array(5), Array(5)]
eval_played_groups1.js:351 <<THIS IS tile_array[0]  div_container.1
eval_played_groups1.js:352 <<THIS IS tile_array[3]  (5) ["circle-9-1", "circle-10-2", "circle-11-2", "circle-12-2", "circle-13-2"]
eval_played_groups1.js:356 <<This is the obj we push to suit {div_id: "div_container.1", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
eval_played_groups1.js:358 <<THIS IS game_board_groups[ref_name]  undefined
eval_played_groups1.js:359 <<THIS IS game_board_groups    {1: Array(0), 2: Array(0), 3: Array(0), 4: Array(0), 5: Array(0), 6: Array(0), 7: Array(0), 8: Array(0), 9: Array(0), 10: Array(0), 11: Array(0), 12: Array(0), 13: Array(0), circle: Array(1), diamond: Array(0), square: Array(0), triangle: Array(0)}
eval_played_groups1.js:121 Top of tile_array check suit
eval_played_groups1.js:122 this is tile_array (4) ["div_container.4", Array(4), Array(4), Array(3)]
eval_played_groups1.js:124 tile_array[1].length 4
eval_played_groups1.js:125  the error group so far is= [] tile_array[0] div_container.4
eval_played_groups1.js:135 CHECKING FOR SIMILAR SUIT, (4) ["square", "square", "square", "empty_slot"]
eval_played_groups1.js:140 location of empty slot is  3
eval_played_groups1.js:143 x is = 1
eval_played_groups1.js:140 location of empty slot is  3
eval_played_groups1.js:143 x is = 2
eval_played_groups1.js:145 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (3) ["square", "square", "square"] (3) [6, 7, 8]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["square"]  sames =  ["square"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["square"]  sames =  (2) ["square", "square"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["square"]  sames =  (3) ["square", "square", "square"]
eval_played_groups1.js:169 here are the uniques_list ["square"] here is the sames_list (3) ["square", "square", "square"]
eval_played_groups1.js:172 in 3/4 of a kind determined all tiles are same suit, and NOT 3 or 4 of a Kind  But may be a STRAIGHT
eval_played_groups1.js:219 at end of check 3-4 of kind and check_numbers_state is =  10
eval_played_groups1.js:254 this is a number in list checking consecutive 6
eval_played_groups1.js:258 We have small to large sort
eval_played_groups1.js:279 this is the list we are checking for consecutive numbers and should not have empty slot (3) ["square", "square", "square"]
eval_played_groups1.js:291 these are the same suit  (3) ["square", "square", "square"]
eval_played_groups1.js:340 << CONSECT CORRECT >>...THIS GROUP IS  A   PROPERLY SORTED "STRAIGHT"  (3) [6, 7, 8]
eval_played_groups1.js:349 <<THIS IS ref_name  
eval_played_groups1.js:350 << THIS IS tile_array  (4) ["div_container.4", Array(3), Array(3), Array(3)]
eval_played_groups1.js:351 <<THIS IS tile_array[0]  div_container.4
eval_played_groups1.js:352 <<THIS IS tile_array[3]  (3) ["square-6-2", "square-7-1", "square-8-1"]
eval_played_groups1.js:356 <<This is the obj we push to suit {div_id: "div_container.4", sort_meth: "asc", grp_type: "straight", tile_ids: Array(3)}
eval_played_groups1.js:358 <<THIS IS game_board_groups[ref_name]  undefined
eval_played_groups1.js:359 <<THIS IS game_board_groups    {1: Array(0), 2: Array(0), 3: Array(0), 4: Array(0), 5: Array(0), 6: Array(0), 7: Array(0), 8: Array(0), 9: Array(0), 10: Array(0), 11: Array(0), 12: Array(0), 13: Array(0), circle: Array(1), diamond: Array(0), square: Array(1), triangle: Array(0)}
eval_played_groups1.js:121 Top of tile_array check suit
eval_played_groups1.js:122 this is tile_array (4) ["div_container.5", Array(8), Array(8), Array(7)]
eval_played_groups1.js:124 tile_array[1].length 8
eval_played_groups1.js:125  the error group so far is= [] tile_array[0] div_container.5
eval_played_groups1.js:247 location of empty slot is  7
eval_played_groups1.js:250 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (7) ["triangle", "triangle", "triangle", "triangle", "triangle", "triangle", "triangle"]
eval_played_groups1.js:247 location of empty slot is  7
eval_played_groups1.js:250 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (7) [6, 7, 8, 9, 10, 11, 12]
eval_played_groups1.js:254 this is a number in list checking consecutive 6
eval_played_groups1.js:258 We have small to large sort
eval_played_groups1.js:279 this is the list we are checking for consecutive numbers and should not have empty slot (7) ["triangle", "triangle", "triangle", "triangle", "triangle", "triangle", "triangle"]
eval_played_groups1.js:291 these are the same suit  (7) ["triangle", "triangle", "triangle", "triangle", "triangle", "triangle", "triangle"]
eval_played_groups1.js:340 << CONSECT CORRECT >>...THIS GROUP IS  A   PROPERLY SORTED "STRAIGHT"  (7) [6, 7, 8, 9, 10, 11, 12]
eval_played_groups1.js:349 <<THIS IS ref_name  
eval_played_groups1.js:350 << THIS IS tile_array  (4) ["div_container.5", Array(7), Array(7), Array(7)]
eval_played_groups1.js:351 <<THIS IS tile_array[0]  div_container.5
eval_played_groups1.js:352 <<THIS IS tile_array[3]  (7) ["triangle-6-2", "triangle-7-1", "triangle-8-1", "triangle-9-2", "triangle-10-1", "triangle-11-2", "triangle-12-1"]
eval_played_groups1.js:356 <<This is the obj we push to suit {div_id: "div_container.5", sort_meth: "asc", grp_type: "straight", tile_ids: Array(7)}
eval_played_groups1.js:358 <<THIS IS game_board_groups[ref_name]  undefined
eval_played_groups1.js:359 <<THIS IS game_board_groups    {1: Array(0), 2: Array(0), 3: Array(0), 4: Array(0), 5: Array(0), 6: Array(0), 7: Array(0), 8: Array(0), 9: Array(0), 10: Array(0), 11: Array(0), 12: Array(0), 13: Array(0), circle: Array(1), diamond: Array(0), square: Array(1), triangle: Array(1)}
eval_played_groups1.js:121 Top of tile_array check suit
eval_played_groups1.js:122 this is tile_array (4) ["div_container.9", Array(4), Array(4), Array(3)]
eval_played_groups1.js:124 tile_array[1].length 4
eval_played_groups1.js:125  the error group so far is= [] tile_array[0] div_container.9
eval_played_groups1.js:135 CHECKING FOR SIMILAR SUIT, (4) ["circle", "triangle", "diamond", "empty_slot"]
eval_played_groups1.js:140 location of empty slot is  3
eval_played_groups1.js:143 x is = 1
eval_played_groups1.js:140 location of empty slot is  3
eval_played_groups1.js:143 x is = 2
eval_played_groups1.js:145 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (3) ["circle", "triangle", "diamond"] (3) [1, 1, 1]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["circle"]  sames =  ["circle"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= (2) ["circle", "triangle"]  sames =  ["circle"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= (3) ["circle", "triangle", "diamond"]  sames =  ["circle"]
eval_played_groups1.js:169 here are the uniques_list (3) ["circle", "triangle", "diamond"] here is the sames_list ["circle"]
eval_played_groups1.js:177 in 3/4 of a kind determined all tiles are different suit, and is Either 3 or 4 of a Kind  or ERROR 
eval_played_groups1.js:191 at top of check_numbers_state 1, and length of our list is , 3
eval_played_groups1.js:192 looking at this list  (3) [1, 1, 1]
eval_played_groups1.js:196 tile_array[2][0] == tile_array[2][1] 1 1 tile_array[2][1] == tile_array[2][2] 1 1
eval_played_groups1.js:208 This is <<<< CORRECT >>>  3 or 4 of a Kind !!!   div_container.9
eval_played_groups1.js:214 <<This is the obj we push to suit {div_id: "div_container.9", sort_meth: "na", grp_type: "3ofKind", tile_ids: Array(3)}
eval_played_groups1.js:219 at end of check 3-4 of kind and check_numbers_state is =  3
eval_played_groups1.js:121 Top of tile_array check suit
eval_played_groups1.js:122 this is tile_array (4) ["div_container.14", Array(6), Array(6), Array(5)]
eval_played_groups1.js:124 tile_array[1].length 6
eval_played_groups1.js:125  the error group so far is= [] tile_array[0] div_container.14
eval_played_groups1.js:247 location of empty slot is  5
eval_played_groups1.js:250 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (5) ["circle", "circle", "circle", "circle", "circle"]
eval_played_groups1.js:247 location of empty slot is  5
eval_played_groups1.js:250 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (5) [1, 2, 3, 4, 5]
eval_played_groups1.js:254 this is a number in list checking consecutive 1
eval_played_groups1.js:258 We have small to large sort
eval_played_groups1.js:279 this is the list we are checking for consecutive numbers and should not have empty slot (5) ["circle", "circle", "circle", "circle", "circle"]
eval_played_groups1.js:291 these are the same suit  (5) ["circle", "circle", "circle", "circle", "circle"]
eval_played_groups1.js:340 << CONSECT CORRECT >>...THIS GROUP IS  A   PROPERLY SORTED "STRAIGHT"  (5) [1, 2, 3, 4, 5]
eval_played_groups1.js:349 <<THIS IS ref_name  
eval_played_groups1.js:350 << THIS IS tile_array  (4) ["div_container.14", Array(5), Array(5), Array(5)]
eval_played_groups1.js:351 <<THIS IS tile_array[0]  div_container.14
eval_played_groups1.js:352 <<THIS IS tile_array[3]  (5) ["circle-1-2", "circle-2-1", "circle-3-1", "circle-4-2", "circle-5-2"]
eval_played_groups1.js:356 <<This is the obj we push to suit {div_id: "div_container.14", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
eval_played_groups1.js:358 <<THIS IS game_board_groups[ref_name]  undefined
eval_played_groups1.js:359 <<THIS IS game_board_groups    {1: Array(1), 2: Array(0), 3: Array(0), 4: Array(0), 5: Array(0), 6: Array(0), 7: Array(0), 8: Array(0), 9: Array(0), 10: Array(0), 11: Array(0), 12: Array(0), 13: Array(0), circle: Array(2), diamond: Array(0), square: Array(1), triangle: Array(1)}
eval_played_groups1.js:381 THIS IS ERROR GROUPS SO FAR  []
eval_played_groups1.js:388 this is errorGroups []
eval_played_groups1.js:391 this item is not in errorgroups div_container.1
eval_played_groups1.js:61  this is the item to be corrected  
eval_played_groups1.js:62  this is its border color  blue
eval_played_groups1.js:388 this is errorGroups []
eval_played_groups1.js:391 this item is not in errorgroups div_container.4
eval_played_groups1.js:61  this is the item to be corrected  
eval_played_groups1.js:62  this is its border color  blue
eval_played_groups1.js:388 this is errorGroups []
eval_played_groups1.js:391 this item is not in errorgroups div_container.5
eval_played_groups1.js:61  this is the item to be corrected  
eval_played_groups1.js:62  this is its border color  blue
eval_played_groups1.js:388 this is errorGroups []
eval_played_groups1.js:391 this item is not in errorgroups div_container.9
eval_played_groups1.js:61  this is the item to be corrected  
eval_played_groups1.js:62  this is its border color  blue
eval_played_groups1.js:388 this is errorGroups []
eval_played_groups1.js:391 this item is not in errorgroups div_container.14
eval_played_groups1.js:61  this is the item to be corrected  
eval_played_groups1.js:62  this is its border color  
rumi_brain11_test5.js:353 XXXXXXXXXXXXXX  These are the groups on the board  XXXXXXXXXXXXXXXXXX {1: Array(1), 2: Array(0), 3: Array(0), 4: Array(0), 5: Array(0), 6: Array(0), 7: Array(0), 8: Array(0), 9: Array(0), 10: Array(0), 11: Array(0), 12: Array(0), 13: Array(0), circle: Array(2), diamond: Array(0), square: Array(1), triangle: Array(1)}
ai_moves_decider9.js:151 ai_moves_decider.js is running
ai_moves_decider9.js:186 ai_tiles_organized_1 =  {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped circle-7-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-11-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-5-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-10-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-6-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-13-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-12-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped triangle-2-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-4-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-8-2
ai_moves_decider9.js:222 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:256 possible straights []
ai_moves_decider9.js:268 total_points 0
ai_moves_decider9.js:320 ai_a_kind_organized {1: Array(1), 2: Array(1), 3: Array(1), 4: Array(1), 5: Array(1), 6: Array(1), 7: Array(1), 8: Array(1), 9: Array(1), 10: Array(1), 11: Array(1), 12: Array(1), 13: Array(1)}
ai_moves_decider9.js:361 ai_playable_of_kind = []
ai_moves_decider9.js:479 ai_playable_of_kind = []
ai_moves_decider9.js:480  ai_poss_suits =  []
ai_moves_decider9.js:482 test_string baby
ai_moves_decider9.js:484 test_string baby
ai_moves_decider9.js:516 <<<<<<<<<<<<<<<  BUILDING FINAL OBJ OF <--SELF MADE MELDS--->  TO PLAY >>>>>>>>>>>>>>>>
ai_moves_decider9.js:517  this is master_ai_playable_list =  [] this is its length = 0
ai_moves_decider9.js:532 here is pla ai_tiles_list << BEFORE >> to deletion of tiles we will play (10) ["circle-7-1", "diamond-11-1", "diamond-5-2", "diamond-10-2", "diamond-6-2", "diamond-13-2", "square-12-1", "triangle-2-2", "square-4-2", "square-8-2"]
ai_moves_decider9.js:533 here are all playable groups thus far []
ai_moves_decider9.js:534 here is the GROUPS TO BE PLAYED SO FAR , add_ai_tiles_gb_group []
ai_moves_decider9.js:552 here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (10) ["circle-7-1", "diamond-11-1", "diamond-5-2", "diamond-10-2", "diamond-6-2", "diamond-13-2", "square-12-1", "triangle-2-2", "square-4-2", "square-8-2"]
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped circle-7-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-11-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-5-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-10-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-6-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-13-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-12-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped triangle-2-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-4-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-8-2
ai_moves_decider9.js:222 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:558 here is  ai_tiles_organized_1 rebuilt with loose tiles, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:559 ai_tiles_organized_1 < circle  >  rebuilt w remaining Ai tiles not self melded, (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:560 ai_tiles_organized_1 < diamond >  rebuilt w remaining Ai tiles not self melded, (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:561 ai_tiles_organized_1 < square  >  rebuilt w remaining Ai tiles not self melded, (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:562 ai_tiles_organized_1 < triangle > rebuilt w remaining Ai tiles not self melded, (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:603 counting gameboard groups >>  key in this obj 1
ai_moves_decider9.js:606 game_board_groups[key] = {div_id: "div_container.9", sort_meth: "na", grp_type: "3ofKind", tile_ids: Array(3)}
ai_moves_decider9.js:603 counting gameboard groups >>  key in this obj 2
ai_moves_decider9.js:606 game_board_groups[key] = undefined
ai_moves_decider9.js:603 counting gameboard groups >>  key in this obj 3
ai_moves_decider9.js:606 game_board_groups[key] = undefined
ai_moves_decider9.js:603 counting gameboard groups >>  key in this obj 4
ai_moves_decider9.js:606 game_board_groups[key] = undefined
ai_moves_decider9.js:603 counting gameboard groups >>  key in this obj 5
ai_moves_decider9.js:606 game_board_groups[key] = undefined
ai_moves_decider9.js:603 counting gameboard groups >>  key in this obj 6
ai_moves_decider9.js:606 game_board_groups[key] = undefined
ai_moves_decider9.js:603 counting gameboard groups >>  key in this obj 7
ai_moves_decider9.js:606 game_board_groups[key] = undefined
ai_moves_decider9.js:603 counting gameboard groups >>  key in this obj 8
ai_moves_decider9.js:606 game_board_groups[key] = undefined
ai_moves_decider9.js:603 counting gameboard groups >>  key in this obj 9
ai_moves_decider9.js:606 game_board_groups[key] = undefined
ai_moves_decider9.js:603 counting gameboard groups >>  key in this obj 10
ai_moves_decider9.js:606 game_board_groups[key] = undefined
ai_moves_decider9.js:603 counting gameboard groups >>  key in this obj 11
ai_moves_decider9.js:606 game_board_groups[key] = undefined
ai_moves_decider9.js:603 counting gameboard groups >>  key in this obj 12
ai_moves_decider9.js:606 game_board_groups[key] = undefined
ai_moves_decider9.js:603 counting gameboard groups >>  key in this obj 13
ai_moves_decider9.js:606 game_board_groups[key] = undefined
ai_moves_decider9.js:603 counting gameboard groups >>  key in this obj circle
ai_moves_decider9.js:606 game_board_groups[key] = {div_id: "div_container.1", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
ai_moves_decider9.js:603 counting gameboard groups >>  key in this obj diamond
ai_moves_decider9.js:606 game_board_groups[key] = undefined
ai_moves_decider9.js:603 counting gameboard groups >>  key in this obj square
ai_moves_decider9.js:606 game_board_groups[key] = {div_id: "div_container.4", sort_meth: "asc", grp_type: "straight", tile_ids: Array(3)}
ai_moves_decider9.js:603 counting gameboard groups >>  key in this obj triangle
ai_moves_decider9.js:606 game_board_groups[key] = {div_id: "div_container.5", sort_meth: "asc", grp_type: "straight", tile_ids: Array(7)}
ai_moves_decider9.js:610 game_board_gp_count 4
ai_moves_decider9.js:615 here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.9", sort_meth: "na", grp_type: "3ofKind", tile_ids: Array(3)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["circle-1-1", "triangle-1-1", "diamond-1-1"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.1", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-9-1", "circle-10-2", "circle-11-2", "circle-12-2", "circle-13-2"]
ai_moves_decider9.js:644 [] "max_suit_list doesnt include this curr_suit < " "circle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-9-1 JUST MAPPED THIS , tile_id,  circle-9-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-9-1
ai_moves_decider9.js:675 max_suit_list added new element circle
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-10-2 JUST MAPPED THIS , tile_id,  circle-10-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-10-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-11-2 JUST MAPPED THIS , tile_id,  circle-11-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-11-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-12-2 JUST MAPPED THIS , tile_id,  circle-12-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-12-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-13-2 JUST MAPPED THIS , tile_id,  circle-13-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-13-2
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = ["circle"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.14", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-1-2", "circle-2-1", "circle-3-1", "circle-4-2", "circle-5-2"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.4", sort_meth: "asc", grp_type: "straight", tile_ids: Array(3)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["square-6-2", "square-7-1", "square-8-1"]
ai_moves_decider9.js:644 ["circle"] "max_suit_list doesnt include this curr_suit < " "square" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-6-2 JUST MAPPED THIS , tile_id,  square-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-6-2
ai_moves_decider9.js:675 max_suit_list added new element square
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-7-1 JUST MAPPED THIS , tile_id,  square-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-8-1 JUST MAPPED THIS , tile_id,  square-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-8-1
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = (2) ["circle", "square"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.5", sort_meth: "asc", grp_type: "straight", tile_ids: Array(7)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (7) ["triangle-6-2", "triangle-7-1", "triangle-8-1", "triangle-9-2", "triangle-10-1", "triangle-11-2", "triangle-12-1"]
ai_moves_decider9.js:644 (2) ["circle", "square"] "max_suit_list doesnt include this curr_suit < " "triangle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-6-2 JUST MAPPED THIS , tile_id,  triangle-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-6-2
ai_moves_decider9.js:675 max_suit_list added new element triangle
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-7-1 JUST MAPPED THIS , tile_id,  triangle-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-8-1 JUST MAPPED THIS , tile_id,  triangle-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-8-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-9-2 JUST MAPPED THIS , tile_id,  triangle-9-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-9-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-10-1 JUST MAPPED THIS , tile_id,  triangle-10-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-10-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-11-2 JUST MAPPED THIS , tile_id,  triangle-11-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-11-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-12-1 JUST MAPPED THIS , tile_id,  triangle-12-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-12-1
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = (3) ["circle", "square", "triangle"]
ai_moves_decider9.js:691 SO FAR >> all_played_grps_ids =  (3) ["div_container.1", "div_container.4", "div_container.5"]
ai_moves_decider9.js:692  MAP GAMEBOARD TO  <  ai_tiles_organized_1 >  - JUST COMPLETED A FULL PASS  {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:696 max suit list never filled, lets check for new matches calling   checkAiGroupToGameBoardGroup()   (3) ["circle", "square", "triangle"]
ai_moves_decider9.js:724 top of  checkAiGroupToGameBoardGroup() here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 circle-7-1 curr obj  {loc: "ai_rack", id: "circle-7-1", num: 7}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["circle-7-1"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.1 curr obj  {loc: "div_container.1", id: "circle-9-1", num: 9}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-5-2 curr obj  {loc: "ai_rack", id: "diamond-5-2", num: 5}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-5-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-6-2 curr obj  {loc: "ai_rack", id: "diamond-6-2", num: 6}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = (2) ["diamond-5-2", "diamond-6-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-10-2 curr obj  {loc: "ai_rack", id: "diamond-10-2", num: 10}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-10-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-11-1 curr obj  {loc: "ai_rack", id: "diamond-11-1", num: 11}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = (2) ["diamond-10-2", "diamond-11-1"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-13-2 curr obj  {loc: "ai_rack", id: "diamond-13-2", num: 13}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-13-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-4-2 curr obj  {loc: "ai_rack", id: "square-4-2", num: 4}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-4-2"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.4 curr obj  {loc: "div_container.4", id: "square-6-2", num: 6}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-12-1 curr obj  {loc: "ai_rack", id: "square-12-1", num: 12}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-12-1"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 triangle-2-2 curr obj  {loc: "ai_rack", id: "triangle-2-2", num: 2}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["triangle-2-2"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.5 curr obj  {loc: "div_container.5", id: "triangle-6-2", num: 6}
ai_moves_decider9.js:814  +
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            // RE RUN MATCHES --NOW THIS WORKS MAN !
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            
ai_moves_decider9.js:821  <<< REEEE--CURSION!! >>>  - RERUNNING MATCH -- GAME BOARD TILES TO AI RACK
ai_moves_decider9.js:822 all_played_grps_ids (3) ["div_container.1", "div_container.4", "div_container.5"] game_board_gp_count 4
ai_moves_decider9.js:708 top of clearOutTilesToBePlayedFromAIList() AND tiles_tobe_played =  []
ai_moves_decider9.js:714 clearOutTilesToBePlayedFromAIList() here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (10) ["circle-7-1", "diamond-11-1", "diamond-5-2", "diamond-10-2", "diamond-6-2", "diamond-13-2", "square-12-1", "triangle-2-2", "square-4-2", "square-8-2"]
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped circle-7-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-11-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-5-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-10-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-6-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-13-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-12-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped triangle-2-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-4-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-8-2
ai_moves_decider9.js:222 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.9", sort_meth: "na", grp_type: "3ofKind", tile_ids: Array(3)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["circle-1-1", "triangle-1-1", "diamond-1-1"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.1", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-9-1", "circle-10-2", "circle-11-2", "circle-12-2", "circle-13-2"]
ai_moves_decider9.js:644 [] "max_suit_list doesnt include this curr_suit < " "circle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-9-1 JUST MAPPED THIS , tile_id,  circle-9-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-9-1
ai_moves_decider9.js:675 max_suit_list added new element circle
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-10-2 JUST MAPPED THIS , tile_id,  circle-10-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-10-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-11-2 JUST MAPPED THIS , tile_id,  circle-11-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-11-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-12-2 JUST MAPPED THIS , tile_id,  circle-12-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-12-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-13-2 JUST MAPPED THIS , tile_id,  circle-13-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-13-2
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = ["circle"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.14", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-1-2", "circle-2-1", "circle-3-1", "circle-4-2", "circle-5-2"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.4", sort_meth: "asc", grp_type: "straight", tile_ids: Array(3)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["square-6-2", "square-7-1", "square-8-1"]
ai_moves_decider9.js:644 ["circle"] "max_suit_list doesnt include this curr_suit < " "square" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-6-2 JUST MAPPED THIS , tile_id,  square-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-6-2
ai_moves_decider9.js:675 max_suit_list added new element square
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-7-1 JUST MAPPED THIS , tile_id,  square-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-8-1 JUST MAPPED THIS , tile_id,  square-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-8-1
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = (2) ["circle", "square"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.5", sort_meth: "asc", grp_type: "straight", tile_ids: Array(7)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (7) ["triangle-6-2", "triangle-7-1", "triangle-8-1", "triangle-9-2", "triangle-10-1", "triangle-11-2", "triangle-12-1"]
ai_moves_decider9.js:644 (2) ["circle", "square"] "max_suit_list doesnt include this curr_suit < " "triangle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-6-2 JUST MAPPED THIS , tile_id,  triangle-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-6-2
ai_moves_decider9.js:675 max_suit_list added new element triangle
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-7-1 JUST MAPPED THIS , tile_id,  triangle-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-8-1 JUST MAPPED THIS , tile_id,  triangle-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-8-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-9-2 JUST MAPPED THIS , tile_id,  triangle-9-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-9-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-10-1 JUST MAPPED THIS , tile_id,  triangle-10-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-10-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-11-2 JUST MAPPED THIS , tile_id,  triangle-11-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-11-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-12-1 JUST MAPPED THIS , tile_id,  triangle-12-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-12-1
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = (3) ["circle", "square", "triangle"]
ai_moves_decider9.js:691 SO FAR >> all_played_grps_ids =  (3) ["div_container.1", "div_container.4", "div_container.5"]
ai_moves_decider9.js:692  MAP GAMEBOARD TO  <  ai_tiles_organized_1 >  - JUST COMPLETED A FULL PASS  {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:696 max suit list never filled, lets check for new matches calling   checkAiGroupToGameBoardGroup()   (3) ["circle", "square", "triangle"]
ai_moves_decider9.js:724 top of  checkAiGroupToGameBoardGroup() here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 circle-7-1 curr obj  {loc: "ai_rack", id: "circle-7-1", num: 7}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["circle-7-1"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.1 curr obj  {loc: "div_container.1", id: "circle-9-1", num: 9}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-5-2 curr obj  {loc: "ai_rack", id: "diamond-5-2", num: 5}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-5-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-6-2 curr obj  {loc: "ai_rack", id: "diamond-6-2", num: 6}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = (2) ["diamond-5-2", "diamond-6-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-10-2 curr obj  {loc: "ai_rack", id: "diamond-10-2", num: 10}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-10-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-11-1 curr obj  {loc: "ai_rack", id: "diamond-11-1", num: 11}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = (2) ["diamond-10-2", "diamond-11-1"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-13-2 curr obj  {loc: "ai_rack", id: "diamond-13-2", num: 13}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-13-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-4-2 curr obj  {loc: "ai_rack", id: "square-4-2", num: 4}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-4-2"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.4 curr obj  {loc: "div_container.4", id: "square-6-2", num: 6}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-12-1 curr obj  {loc: "ai_rack", id: "square-12-1", num: 12}
​ CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
​ CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-12-1"]
​ CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 triangle-2-2 curr obj  {loc: "ai_rack", id: "triangle-2-2", num: 2}
​ CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
​ CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["triangle-2-2"]
​ condition 2 met , curr_grp_id = obj.loc;  div_container.5 curr obj  {loc: "div_container.5", id: "triangle-6-2", num: 6}
​  +
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            // RE RUN MATCHES --NOW THIS WORKS MAN !
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            
​  <<< REEEE--CURSION!! >>>  - RERUNNING MATCH -- GAME BOARD TILES TO AI RACK
​ all_played_grps_ids (3) ["div_container.1", "div_container.4", "div_container.5"] game_board_gp_count 4
​ top of clearOutTilesToBePlayedFromAIList() AND tiles_tobe_played =  []
​ clearOutTilesToBePlayedFromAIList() here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (10) ["circle-7-1", "diamond-11-1", "diamond-5-2", "diamond-10-2", "diamond-6-2", "diamond-13-2", "square-12-1", "triangle-2-2", "square-4-2", "square-8-2"]
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped circle-7-1
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-11-1
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-5-2
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-10-2
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-6-2
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-13-2
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-12-1
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped triangle-2-2
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-4-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-8-2
ai_moves_decider9.js:222 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.9", sort_meth: "na", grp_type: "3ofKind", tile_ids: Array(3)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["circle-1-1", "triangle-1-1", "diamond-1-1"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.1", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-9-1", "circle-10-2", "circle-11-2", "circle-12-2", "circle-13-2"]
ai_moves_decider9.js:644 [] "max_suit_list doesnt include this curr_suit < " "circle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-9-1 JUST MAPPED THIS , tile_id,  circle-9-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-9-1
ai_moves_decider9.js:675 max_suit_list added new element circle
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-10-2 JUST MAPPED THIS , tile_id,  circle-10-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-10-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-11-2 JUST MAPPED THIS , tile_id,  circle-11-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-11-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-12-2 JUST MAPPED THIS , tile_id,  circle-12-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-12-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-13-2 JUST MAPPED THIS , tile_id,  circle-13-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-13-2
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = ["circle"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.14", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-1-2", "circle-2-1", "circle-3-1", "circle-4-2", "circle-5-2"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.4", sort_meth: "asc", grp_type: "straight", tile_ids: Array(3)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["square-6-2", "square-7-1", "square-8-1"]
ai_moves_decider9.js:644 ["circle"] "max_suit_list doesnt include this curr_suit < " "square" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-6-2 JUST MAPPED THIS , tile_id,  square-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-6-2
ai_moves_decider9.js:675 max_suit_list added new element square
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-7-1 JUST MAPPED THIS , tile_id,  square-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-8-1 JUST MAPPED THIS , tile_id,  square-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-8-1
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = (2) ["circle", "square"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.5", sort_meth: "asc", grp_type: "straight", tile_ids: Array(7)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (7) ["triangle-6-2", "triangle-7-1", "triangle-8-1", "triangle-9-2", "triangle-10-1", "triangle-11-2", "triangle-12-1"]
ai_moves_decider9.js:644 (2) ["circle", "square"] "max_suit_list doesnt include this curr_suit < " "triangle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-6-2 JUST MAPPED THIS , tile_id,  triangle-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-6-2
ai_moves_decider9.js:675 max_suit_list added new element triangle
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-7-1 JUST MAPPED THIS , tile_id,  triangle-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-8-1 JUST MAPPED THIS , tile_id,  triangle-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-8-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-9-2 JUST MAPPED THIS , tile_id,  triangle-9-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-9-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-10-1 JUST MAPPED THIS , tile_id,  triangle-10-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-10-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-11-2 JUST MAPPED THIS , tile_id,  triangle-11-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-11-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-12-1 JUST MAPPED THIS , tile_id,  triangle-12-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-12-1
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = (3) ["circle", "square", "triangle"]
ai_moves_decider9.js:691 SO FAR >> all_played_grps_ids =  (3) ["div_container.1", "div_container.4", "div_container.5"]
ai_moves_decider9.js:692  MAP GAMEBOARD TO  <  ai_tiles_organized_1 >  - JUST COMPLETED A FULL PASS  {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:696 max suit list never filled, lets check for new matches calling   checkAiGroupToGameBoardGroup()   (3) ["circle", "square", "triangle"]
ai_moves_decider9.js:724 top of  checkAiGroupToGameBoardGroup() here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 circle-7-1 curr obj  {loc: "ai_rack", id: "circle-7-1", num: 7}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["circle-7-1"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.1 curr obj  {loc: "div_container.1", id: "circle-9-1", num: 9}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-5-2 curr obj  {loc: "ai_rack", id: "diamond-5-2", num: 5}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-5-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-6-2 curr obj  {loc: "ai_rack", id: "diamond-6-2", num: 6}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = (2) ["diamond-5-2", "diamond-6-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-10-2 curr obj  {loc: "ai_rack", id: "diamond-10-2", num: 10}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-10-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-11-1 curr obj  {loc: "ai_rack", id: "diamond-11-1", num: 11}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = (2) ["diamond-10-2", "diamond-11-1"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-13-2 curr obj  {loc: "ai_rack", id: "diamond-13-2", num: 13}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-13-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-4-2 curr obj  {loc: "ai_rack", id: "square-4-2", num: 4}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-4-2"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.4 curr obj  {loc: "div_container.4", id: "square-6-2", num: 6}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-12-1 curr obj  {loc: "ai_rack", id: "square-12-1", num: 12}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-12-1"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 triangle-2-2 curr obj  {loc: "ai_rack", id: "triangle-2-2", num: 2}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["triangle-2-2"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.5 curr obj  {loc: "div_container.5", id: "triangle-6-2", num: 6}
ai_moves_decider9.js:814  +
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            // RE RUN MATCHES --NOW THIS WORKS MAN !
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            
ai_moves_decider9.js:821  <<< REEEE--CURSION!! >>>  - RERUNNING MATCH -- GAME BOARD TILES TO AI RACK
ai_moves_decider9.js:822 all_played_grps_ids (3) ["div_container.1", "div_container.4", "div_container.5"] game_board_gp_count 4
ai_moves_decider9.js:708 top of clearOutTilesToBePlayedFromAIList() AND tiles_tobe_played =  []
ai_moves_decider9.js:714 clearOutTilesToBePlayedFromAIList() here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (10) ["circle-7-1", "diamond-11-1", "diamond-5-2", "diamond-10-2", "diamond-6-2", "diamond-13-2", "square-12-1", "triangle-2-2", "square-4-2", "square-8-2"]
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped circle-7-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-11-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-5-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-10-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-6-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-13-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-12-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped triangle-2-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-4-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-8-2
ai_moves_decider9.js:222 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.9", sort_meth: "na", grp_type: "3ofKind", tile_ids: Array(3)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["circle-1-1", "triangle-1-1", "diamond-1-1"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.1", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-9-1", "circle-10-2", "circle-11-2", "circle-12-2", "circle-13-2"]
ai_moves_decider9.js:644 [] "max_suit_list doesnt include this curr_suit < " "circle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-9-1 JUST MAPPED THIS , tile_id,  circle-9-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-9-1
ai_moves_decider9.js:675 max_suit_list added new element circle
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-10-2 JUST MAPPED THIS , tile_id,  circle-10-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-10-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-11-2 JUST MAPPED THIS , tile_id,  circle-11-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-11-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-12-2 JUST MAPPED THIS , tile_id,  circle-12-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-12-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-13-2 JUST MAPPED THIS , tile_id,  circle-13-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-13-2
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = ["circle"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.14", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-1-2", "circle-2-1", "circle-3-1", "circle-4-2", "circle-5-2"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.4", sort_meth: "asc", grp_type: "straight", tile_ids: Array(3)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["square-6-2", "square-7-1", "square-8-1"]
ai_moves_decider9.js:644 ["circle"] "max_suit_list doesnt include this curr_suit < " "square" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-6-2 JUST MAPPED THIS , tile_id,  square-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-6-2
ai_moves_decider9.js:675 max_suit_list added new element square
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-7-1 JUST MAPPED THIS , tile_id,  square-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-8-1 JUST MAPPED THIS , tile_id,  square-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-8-1
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = (2) ["circle", "square"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.5", sort_meth: "asc", grp_type: "straight", tile_ids: Array(7)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (7) ["triangle-6-2", "triangle-7-1", "triangle-8-1", "triangle-9-2", "triangle-10-1", "triangle-11-2", "triangle-12-1"]
ai_moves_decider9.js:644 (2) ["circle", "square"] "max_suit_list doesnt include this curr_suit < " "triangle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-6-2 JUST MAPPED THIS , tile_id,  triangle-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-6-2
ai_moves_decider9.js:675 max_suit_list added new element triangle
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-7-1 JUST MAPPED THIS , tile_id,  triangle-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-8-1 JUST MAPPED THIS , tile_id,  triangle-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-8-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-9-2 JUST MAPPED THIS , tile_id,  triangle-9-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-9-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-10-1 JUST MAPPED THIS , tile_id,  triangle-10-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-10-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-11-2 JUST MAPPED THIS , tile_id,  triangle-11-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-11-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-12-1 JUST MAPPED THIS , tile_id,  triangle-12-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-12-1
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = (3) ["circle", "square", "triangle"]
ai_moves_decider9.js:691 SO FAR >> all_played_grps_ids =  (3) ["div_container.1", "div_container.4", "div_container.5"]
ai_moves_decider9.js:692  MAP GAMEBOARD TO  <  ai_tiles_organized_1 >  - JUST COMPLETED A FULL PASS  {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:696 max suit list never filled, lets check for new matches calling   checkAiGroupToGameBoardGroup()   (3) ["circle", "square", "triangle"]
ai_moves_decider9.js:724 top of  checkAiGroupToGameBoardGroup() here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 circle-7-1 curr obj  {loc: "ai_rack", id: "circle-7-1", num: 7}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["circle-7-1"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.1 curr obj  {loc: "div_container.1", id: "circle-9-1", num: 9}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-5-2 curr obj  {loc: "ai_rack", id: "diamond-5-2", num: 5}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-5-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-6-2 curr obj  {loc: "ai_rack", id: "diamond-6-2", num: 6}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = (2) ["diamond-5-2", "diamond-6-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-10-2 curr obj  {loc: "ai_rack", id: "diamond-10-2", num: 10}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-10-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-11-1 curr obj  {loc: "ai_rack", id: "diamond-11-1", num: 11}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = (2) ["diamond-10-2", "diamond-11-1"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-13-2 curr obj  {loc: "ai_rack", id: "diamond-13-2", num: 13}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-13-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-4-2 curr obj  {loc: "ai_rack", id: "square-4-2", num: 4}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-4-2"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.4 curr obj  {loc: "div_container.4", id: "square-6-2", num: 6}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-12-1 curr obj  {loc: "ai_rack", id: "square-12-1", num: 12}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-12-1"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 triangle-2-2 curr obj  {loc: "ai_rack", id: "triangle-2-2", num: 2}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["triangle-2-2"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.5 curr obj  {loc: "div_container.5", id: "triangle-6-2", num: 6}
ai_moves_decider9.js:814  +
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            // RE RUN MATCHES --NOW THIS WORKS MAN !
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            
ai_moves_decider9.js:821  <<< REEEE--CURSION!! >>>  - RERUNNING MATCH -- GAME BOARD TILES TO AI RACK
ai_moves_decider9.js:822 all_played_grps_ids (3) ["div_container.1", "div_container.4", "div_container.5"] game_board_gp_count 4
ai_moves_decider9.js:708 top of clearOutTilesToBePlayedFromAIList() AND tiles_tobe_played =  []
ai_moves_decider9.js:714 clearOutTilesToBePlayedFromAIList() here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (10) ["circle-7-1", "diamond-11-1", "diamond-5-2", "diamond-10-2", "diamond-6-2", "diamond-13-2", "square-12-1", "triangle-2-2", "square-4-2", "square-8-2"]
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped circle-7-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-11-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-5-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-10-2
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-6-2
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-13-2
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-12-1
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped triangle-2-2
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-4-2
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-8-2
​ ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
​ ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.9", sort_meth: "na", grp_type: "3ofKind", tile_ids: Array(3)}
​ ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["circle-1-1", "triangle-1-1", "diamond-1-1"]
​ ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.1", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
​ ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-9-1", "circle-10-2", "circle-11-2", "circle-12-2", "circle-13-2"]
​ [] "max_suit_list doesnt include this curr_suit < " "circle" ">  so we keep mapping via for loop"
​ MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-9-1 JUST MAPPED THIS , tile_id,  circle-9-1
​ MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
​  in for loop curr tile id is  circle-9-1
​ max_suit_list added new element circle
​ MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-10-2 JUST MAPPED THIS , tile_id,  circle-10-2
​ MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
​  in for loop curr tile id is  circle-10-2
​ MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-11-2 JUST MAPPED THIS , tile_id,  circle-11-2
​ MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
​  in for loop curr tile id is  circle-11-2
​ MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-12-2 JUST MAPPED THIS , tile_id,  circle-12-2
​ MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
​  in for loop curr tile id is  circle-12-2
​ MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-13-2 JUST MAPPED THIS , tile_id,  circle-13-2
​ MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
​  in for loop curr tile id is  circle-13-2
​ OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
​ MAXXXXX  max_suit_list = ["circle"]
​ ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.14", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
​ ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-1-2", "circle-2-1", "circle-3-1", "circle-4-2", "circle-5-2"]
​ ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.4", sort_meth: "asc", grp_type: "straight", tile_ids: Array(3)}
​ ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["square-6-2", "square-7-1", "square-8-1"]
ai_moves_decider9.js:644 ["circle"] "max_suit_list doesnt include this curr_suit < " "square" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-6-2 JUST MAPPED THIS , tile_id,  square-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-6-2
ai_moves_decider9.js:675 max_suit_list added new element square
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-7-1 JUST MAPPED THIS , tile_id,  square-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-8-1 JUST MAPPED THIS , tile_id,  square-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-8-1
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = (2) ["circle", "square"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.5", sort_meth: "asc", grp_type: "straight", tile_ids: Array(7)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (7) ["triangle-6-2", "triangle-7-1", "triangle-8-1", "triangle-9-2", "triangle-10-1", "triangle-11-2", "triangle-12-1"]
ai_moves_decider9.js:644 (2) ["circle", "square"] "max_suit_list doesnt include this curr_suit < " "triangle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-6-2 JUST MAPPED THIS , tile_id,  triangle-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-6-2
ai_moves_decider9.js:675 max_suit_list added new element triangle
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-7-1 JUST MAPPED THIS , tile_id,  triangle-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-8-1 JUST MAPPED THIS , tile_id,  triangle-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-8-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-9-2 JUST MAPPED THIS , tile_id,  triangle-9-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-9-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-10-1 JUST MAPPED THIS , tile_id,  triangle-10-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-10-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-11-2 JUST MAPPED THIS , tile_id,  triangle-11-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-11-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-12-1 JUST MAPPED THIS , tile_id,  triangle-12-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-12-1
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = (3) ["circle", "square", "triangle"]
ai_moves_decider9.js:691 SO FAR >> all_played_grps_ids =  (3) ["div_container.1", "div_container.4", "div_container.5"]
ai_moves_decider9.js:692  MAP GAMEBOARD TO  <  ai_tiles_organized_1 >  - JUST COMPLETED A FULL PASS  {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:696 max suit list never filled, lets check for new matches calling   checkAiGroupToGameBoardGroup()   (3) ["circle", "square", "triangle"]
ai_moves_decider9.js:724 top of  checkAiGroupToGameBoardGroup() here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 circle-7-1 curr obj  {loc: "ai_rack", id: "circle-7-1", num: 7}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["circle-7-1"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.1 curr obj  {loc: "div_container.1", id: "circle-9-1", num: 9}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-5-2 curr obj  {loc: "ai_rack", id: "diamond-5-2", num: 5}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-5-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-6-2 curr obj  {loc: "ai_rack", id: "diamond-6-2", num: 6}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = (2) ["diamond-5-2", "diamond-6-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-10-2 curr obj  {loc: "ai_rack", id: "diamond-10-2", num: 10}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-10-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-11-1 curr obj  {loc: "ai_rack", id: "diamond-11-1", num: 11}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = (2) ["diamond-10-2", "diamond-11-1"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-13-2 curr obj  {loc: "ai_rack", id: "diamond-13-2", num: 13}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-13-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-4-2 curr obj  {loc: "ai_rack", id: "square-4-2", num: 4}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-4-2"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.4 curr obj  {loc: "div_container.4", id: "square-6-2", num: 6}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-12-1 curr obj  {loc: "ai_rack", id: "square-12-1", num: 12}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-12-1"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 triangle-2-2 curr obj  {loc: "ai_rack", id: "triangle-2-2", num: 2}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["triangle-2-2"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.5 curr obj  {loc: "div_container.5", id: "triangle-6-2", num: 6}
ai_moves_decider9.js:814  +
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            // RE RUN MATCHES --NOW THIS WORKS MAN !
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            
ai_moves_decider9.js:821  <<< REEEE--CURSION!! >>>  - RERUNNING MATCH -- GAME BOARD TILES TO AI RACK
ai_moves_decider9.js:822 all_played_grps_ids (3) ["div_container.1", "div_container.4", "div_container.5"] game_board_gp_count 4
ai_moves_decider9.js:708 top of clearOutTilesToBePlayedFromAIList() AND tiles_tobe_played =  []
ai_moves_decider9.js:714 clearOutTilesToBePlayedFromAIList() here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (10) ["circle-7-1", "diamond-11-1", "diamond-5-2", "diamond-10-2", "diamond-6-2", "diamond-13-2", "square-12-1", "triangle-2-2", "square-4-2", "square-8-2"]
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped circle-7-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-11-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-5-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-10-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-6-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-13-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-12-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped triangle-2-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-4-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-8-2
ai_moves_decider9.js:222 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.9", sort_meth: "na", grp_type: "3ofKind", tile_ids: Array(3)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["circle-1-1", "triangle-1-1", "diamond-1-1"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.1", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-9-1", "circle-10-2", "circle-11-2", "circle-12-2", "circle-13-2"]
ai_moves_decider9.js:644 [] "max_suit_list doesnt include this curr_suit < " "circle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-9-1 JUST MAPPED THIS , tile_id,  circle-9-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-9-1
ai_moves_decider9.js:675 max_suit_list added new element circle
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-10-2 JUST MAPPED THIS , tile_id,  circle-10-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-10-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-11-2 JUST MAPPED THIS , tile_id,  circle-11-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-11-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-12-2 JUST MAPPED THIS , tile_id,  circle-12-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-12-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-13-2 JUST MAPPED THIS , tile_id,  circle-13-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-13-2
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = ["circle"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.14", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-1-2", "circle-2-1", "circle-3-1", "circle-4-2", "circle-5-2"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.4", sort_meth: "asc", grp_type: "straight", tile_ids: Array(3)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["square-6-2", "square-7-1", "square-8-1"]
ai_moves_decider9.js:644 ["circle"] "max_suit_list doesnt include this curr_suit < " "square" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-6-2 JUST MAPPED THIS , tile_id,  square-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-6-2
ai_moves_decider9.js:675 max_suit_list added new element square
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-7-1 JUST MAPPED THIS , tile_id,  square-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-8-1 JUST MAPPED THIS , tile_id,  square-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-8-1
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = (2) ["circle", "square"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.5", sort_meth: "asc", grp_type: "straight", tile_ids: Array(7)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (7) ["triangle-6-2", "triangle-7-1", "triangle-8-1", "triangle-9-2", "triangle-10-1", "triangle-11-2", "triangle-12-1"]
ai_moves_decider9.js:644 (2) ["circle", "square"] "max_suit_list doesnt include this curr_suit < " "triangle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-6-2 JUST MAPPED THIS , tile_id,  triangle-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-6-2
ai_moves_decider9.js:675 max_suit_list added new element triangle
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-7-1 JUST MAPPED THIS , tile_id,  triangle-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-8-1 JUST MAPPED THIS , tile_id,  triangle-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-8-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-9-2 JUST MAPPED THIS , tile_id,  triangle-9-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-9-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-10-1 JUST MAPPED THIS , tile_id,  triangle-10-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-10-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-11-2 JUST MAPPED THIS , tile_id,  triangle-11-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-11-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-12-1 JUST MAPPED THIS , tile_id,  triangle-12-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-12-1
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = (3) ["circle", "square", "triangle"]
ai_moves_decider9.js:691 SO FAR >> all_played_grps_ids =  (3) ["div_container.1", "div_container.4", "div_container.5"]
ai_moves_decider9.js:692  MAP GAMEBOARD TO  <  ai_tiles_organized_1 >  - JUST COMPLETED A FULL PASS  {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:696 max suit list never filled, lets check for new matches calling   checkAiGroupToGameBoardGroup()   (3) ["circle", "square", "triangle"]
ai_moves_decider9.js:724 top of  checkAiGroupToGameBoardGroup() here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 circle-7-1 curr obj  {loc: "ai_rack", id: "circle-7-1", num: 7}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["circle-7-1"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.1 curr obj  {loc: "div_container.1", id: "circle-9-1", num: 9}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-5-2 curr obj  {loc: "ai_rack", id: "diamond-5-2", num: 5}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-5-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-6-2 curr obj  {loc: "ai_rack", id: "diamond-6-2", num: 6}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = (2) ["diamond-5-2", "diamond-6-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-10-2 curr obj  {loc: "ai_rack", id: "diamond-10-2", num: 10}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-10-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-11-1 curr obj  {loc: "ai_rack", id: "diamond-11-1", num: 11}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = (2) ["diamond-10-2", "diamond-11-1"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-13-2 curr obj  {loc: "ai_rack", id: "diamond-13-2", num: 13}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-13-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-4-2 curr obj  {loc: "ai_rack", id: "square-4-2", num: 4}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-4-2"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.4 curr obj  {loc: "div_container.4", id: "square-6-2", num: 6}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-12-1 curr obj  {loc: "ai_rack", id: "square-12-1", num: 12}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-12-1"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 triangle-2-2 curr obj  {loc: "ai_rack", id: "triangle-2-2", num: 2}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["triangle-2-2"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.5 curr obj  {loc: "div_container.5", id: "triangle-6-2", num: 6}
ai_moves_decider9.js:814  +
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            // RE RUN MATCHES --NOW THIS WORKS MAN !
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            
ai_moves_decider9.js:821  <<< REEEE--CURSION!! >>>  - RERUNNING MATCH -- GAME BOARD TILES TO AI RACK
ai_moves_decider9.js:822 all_played_grps_ids (3) ["div_container.1", "div_container.4", "div_container.5"] game_board_gp_count 4
ai_moves_decider9.js:708 top of clearOutTilesToBePlayedFromAIList() AND tiles_tobe_played =  []
ai_moves_decider9.js:714 clearOutTilesToBePlayedFromAIList() here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (10) ["circle-7-1", "diamond-11-1", "diamond-5-2", "diamond-10-2", "diamond-6-2", "diamond-13-2", "square-12-1", "triangle-2-2", "square-4-2", "square-8-2"]
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped circle-7-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-11-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-5-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-10-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-6-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-13-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-12-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped triangle-2-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-4-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-8-2
ai_moves_decider9.js:222 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.9", sort_meth: "na", grp_type: "3ofKind", tile_ids: Array(3)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["circle-1-1", "triangle-1-1", "diamond-1-1"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.1", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-9-1", "circle-10-2", "circle-11-2", "circle-12-2", "circle-13-2"]
ai_moves_decider9.js:644 [] "max_suit_list doesnt include this curr_suit < " "circle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-9-1 JUST MAPPED THIS , tile_id,  circle-9-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-9-1
ai_moves_decider9.js:675 max_suit_list added new element circle
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-10-2 JUST MAPPED THIS , tile_id,  circle-10-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-10-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-11-2 JUST MAPPED THIS , tile_id,  circle-11-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-11-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-12-2 JUST MAPPED THIS , tile_id,  circle-12-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-12-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-13-2 JUST MAPPED THIS , tile_id,  circle-13-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-13-2
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = ["circle"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.14", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-1-2", "circle-2-1", "circle-3-1", "circle-4-2", "circle-5-2"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.4", sort_meth: "asc", grp_type: "straight", tile_ids: Array(3)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["square-6-2", "square-7-1", "square-8-1"]
ai_moves_decider9.js:644 ["circle"] "max_suit_list doesnt include this curr_suit < " "square" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-6-2 JUST MAPPED THIS , tile_id,  square-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-6-2
ai_moves_decider9.js:675 max_suit_list added new element square
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-7-1 JUST MAPPED THIS , tile_id,  square-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-8-1 JUST MAPPED THIS , tile_id,  square-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-8-1
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = (2) ["circle", "square"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.5", sort_meth: "asc", grp_type: "straight", tile_ids: Array(7)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (7) ["triangle-6-2", "triangle-7-1", "triangle-8-1", "triangle-9-2", "triangle-10-1", "triangle-11-2", "triangle-12-1"]
ai_moves_decider9.js:644 (2) ["circle", "square"] "max_suit_list doesnt include this curr_suit < " "triangle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-6-2 JUST MAPPED THIS , tile_id,  triangle-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-6-2
ai_moves_decider9.js:675 max_suit_list added new element triangle
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-7-1 JUST MAPPED THIS , tile_id,  triangle-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-8-1 JUST MAPPED THIS , tile_id,  triangle-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-8-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-9-2 JUST MAPPED THIS , tile_id,  triangle-9-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-9-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-10-1 JUST MAPPED THIS , tile_id,  triangle-10-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-10-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-11-2 JUST MAPPED THIS , tile_id,  triangle-11-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-11-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-12-1 JUST MAPPED THIS , tile_id,  triangle-12-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-12-1
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = (3) ["circle", "square", "triangle"]
ai_moves_decider9.js:691 SO FAR >> all_played_grps_ids =  (3) ["div_container.1", "div_container.4", "div_container.5"]
ai_moves_decider9.js:692  MAP GAMEBOARD TO  <  ai_tiles_organized_1 >  - JUST COMPLETED A FULL PASS  {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:696 max suit list never filled, lets check for new matches calling   checkAiGroupToGameBoardGroup()   (3) ["circle", "square", "triangle"]
ai_moves_decider9.js:724 top of  checkAiGroupToGameBoardGroup() here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 circle-7-1 curr obj  {loc: "ai_rack", id: "circle-7-1", num: 7}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["circle-7-1"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.1 curr obj  {loc: "div_container.1", id: "circle-9-1", num: 9}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-5-2 curr obj  {loc: "ai_rack", id: "diamond-5-2", num: 5}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-5-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-6-2 curr obj  {loc: "ai_rack", id: "diamond-6-2", num: 6}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = (2) ["diamond-5-2", "diamond-6-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-10-2 curr obj  {loc: "ai_rack", id: "diamond-10-2", num: 10}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-10-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-11-1 curr obj  {loc: "ai_rack", id: "diamond-11-1", num: 11}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = (2) ["diamond-10-2", "diamond-11-1"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-13-2 curr obj  {loc: "ai_rack", id: "diamond-13-2", num: 13}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-13-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-4-2 curr obj  {loc: "ai_rack", id: "square-4-2", num: 4}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-4-2"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.4 curr obj  {loc: "div_container.4", id: "square-6-2", num: 6}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-12-1 curr obj  {loc: "ai_rack", id: "square-12-1", num: 12}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-12-1"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 triangle-2-2 curr obj  {loc: "ai_rack", id: "triangle-2-2", num: 2}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["triangle-2-2"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.5 curr obj  {loc: "div_container.5", id: "triangle-6-2", num: 6}
ai_moves_decider9.js:814  +
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            // RE RUN MATCHES --NOW THIS WORKS MAN !
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            
ai_moves_decider9.js:821  <<< REEEE--CURSION!! >>>  - RERUNNING MATCH -- GAME BOARD TILES TO AI RACK
ai_moves_decider9.js:822 all_played_grps_ids (3) ["div_container.1", "div_container.4", "div_container.5"] game_board_gp_count 4
ai_moves_decider9.js:708 top of clearOutTilesToBePlayedFromAIList() AND tiles_tobe_played =  []
ai_moves_decider9.js:714 clearOutTilesToBePlayedFromAIList() here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (10) ["circle-7-1", "diamond-11-1", "diamond-5-2", "diamond-10-2", "diamond-6-2", "diamond-13-2", "square-12-1", "triangle-2-2", "square-4-2", "square-8-2"]
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped circle-7-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-11-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-5-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-10-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-6-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-13-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-12-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped triangle-2-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-4-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-8-2
ai_moves_decider9.js:222 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.9", sort_meth: "na", grp_type: "3ofKind", tile_ids: Array(3)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["circle-1-1", "triangle-1-1", "diamond-1-1"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.1", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-9-1", "circle-10-2", "circle-11-2", "circle-12-2", "circle-13-2"]
ai_moves_decider9.js:644 [] "max_suit_list doesnt include this curr_suit < " "circle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-9-1 JUST MAPPED THIS , tile_id,  circle-9-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-9-1
ai_moves_decider9.js:675 max_suit_list added new element circle
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-10-2 JUST MAPPED THIS , tile_id,  circle-10-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-10-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-11-2 JUST MAPPED THIS , tile_id,  circle-11-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-11-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-12-2 JUST MAPPED THIS , tile_id,  circle-12-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-12-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-13-2 JUST MAPPED THIS , tile_id,  circle-13-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-13-2
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = ["circle"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.14", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-1-2", "circle-2-1", "circle-3-1", "circle-4-2", "circle-5-2"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.4", sort_meth: "asc", grp_type: "straight", tile_ids: Array(3)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["square-6-2", "square-7-1", "square-8-1"]
ai_moves_decider9.js:644 ["circle"] "max_suit_list doesnt include this curr_suit < " "square" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-6-2 JUST MAPPED THIS , tile_id,  square-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-6-2
ai_moves_decider9.js:675 max_suit_list added new element square
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-7-1 JUST MAPPED THIS , tile_id,  square-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-8-1 JUST MAPPED THIS , tile_id,  square-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-8-1
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = (2) ["circle", "square"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.5", sort_meth: "asc", grp_type: "straight", tile_ids: Array(7)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (7) ["triangle-6-2", "triangle-7-1", "triangle-8-1", "triangle-9-2", "triangle-10-1", "triangle-11-2", "triangle-12-1"]
ai_moves_decider9.js:644 (2) ["circle", "square"] "max_suit_list doesnt include this curr_suit < " "triangle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-6-2 JUST MAPPED THIS , tile_id,  triangle-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-6-2
ai_moves_decider9.js:675 max_suit_list added new element triangle
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-7-1 JUST MAPPED THIS , tile_id,  triangle-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-8-1 JUST MAPPED THIS , tile_id,  triangle-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-8-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-9-2 JUST MAPPED THIS , tile_id,  triangle-9-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-9-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-10-1 JUST MAPPED THIS , tile_id,  triangle-10-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-10-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-11-2 JUST MAPPED THIS , tile_id,  triangle-11-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-11-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-12-1 JUST MAPPED THIS , tile_id,  triangle-12-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-12-1
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = (3) ["circle", "square", "triangle"]
ai_moves_decider9.js:691 SO FAR >> all_played_grps_ids =  (3) ["div_container.1", "div_container.4", "div_container.5"]
ai_moves_decider9.js:692  MAP GAMEBOARD TO  <  ai_tiles_organized_1 >  - JUST COMPLETED A FULL PASS  {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:696 max suit list never filled, lets check for new matches calling   checkAiGroupToGameBoardGroup()   (3) ["circle", "square", "triangle"]
ai_moves_decider9.js:724 top of  checkAiGroupToGameBoardGroup() here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 circle-7-1 curr obj  {loc: "ai_rack", id: "circle-7-1", num: 7}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["circle-7-1"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.1 curr obj  {loc: "div_container.1", id: "circle-9-1", num: 9}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-5-2 curr obj  {loc: "ai_rack", id: "diamond-5-2", num: 5}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-5-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-6-2 curr obj  {loc: "ai_rack", id: "diamond-6-2", num: 6}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = (2) ["diamond-5-2", "diamond-6-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-10-2 curr obj  {loc: "ai_rack", id: "diamond-10-2", num: 10}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-10-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-11-1 curr obj  {loc: "ai_rack", id: "diamond-11-1", num: 11}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = (2) ["diamond-10-2", "diamond-11-1"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-13-2 curr obj  {loc: "ai_rack", id: "diamond-13-2", num: 13}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-13-2"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-4-2 curr obj  {loc: "ai_rack", id: "square-4-2", num: 4}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-4-2"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.4 curr obj  {loc: "div_container.4", id: "square-6-2", num: 6}
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-12-1 curr obj  {loc: "ai_rack", id: "square-12-1", num: 12}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-12-1"]
ai_moves_decider9.js:748 CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 triangle-2-2 curr obj  {loc: "ai_rack", id: "triangle-2-2", num: 2}
ai_moves_decider9.js:749 CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
ai_moves_decider9.js:750 CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["triangle-2-2"]
ai_moves_decider9.js:759 condition 2 met , curr_grp_id = obj.loc;  div_container.5 curr obj  {loc: "div_container.5", id: "triangle-6-2", num: 6}
ai_moves_decider9.js:814  +
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            // RE RUN MATCHES --NOW THIS WORKS MAN !
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            
ai_moves_decider9.js:821  <<< REEEE--CURSION!! >>>  - RERUNNING MATCH -- GAME BOARD TILES TO AI RACK
ai_moves_decider9.js:822 all_played_grps_ids (3) ["div_container.1", "div_container.4", "div_container.5"] game_board_gp_count 4
ai_moves_decider9.js:708 top of clearOutTilesToBePlayedFromAIList() AND tiles_tobe_played =  []
ai_moves_decider9.js:714 clearOutTilesToBePlayedFromAIList() here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (10) ["circle-7-1", "diamond-11-1", "diamond-5-2", "diamond-10-2", "diamond-6-2", "diamond-13-2", "square-12-1", "triangle-2-2", "square-4-2", "square-8-2"]
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped circle-7-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-11-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-5-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-10-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-6-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-13-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-12-1
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped triangle-2-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-4-2
ai_moves_decider9.js:214 Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-8-2
ai_moves_decider9.js:222 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.9", sort_meth: "na", grp_type: "3ofKind", tile_ids: Array(3)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["circle-1-1", "triangle-1-1", "diamond-1-1"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.1", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-9-1", "circle-10-2", "circle-11-2", "circle-12-2", "circle-13-2"]
ai_moves_decider9.js:644 [] "max_suit_list doesnt include this curr_suit < " "circle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-9-1 JUST MAPPED THIS , tile_id,  circle-9-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-9-1
ai_moves_decider9.js:675 max_suit_list added new element circle
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-10-2 JUST MAPPED THIS , tile_id,  circle-10-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-10-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-11-2 JUST MAPPED THIS , tile_id,  circle-11-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-11-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-12-2 JUST MAPPED THIS , tile_id,  circle-12-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-12-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-13-2 JUST MAPPED THIS , tile_id,  circle-13-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-13-2
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = ["circle"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.14", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-1-2", "circle-2-1", "circle-3-1", "circle-4-2", "circle-5-2"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.4", sort_meth: "asc", grp_type: "straight", tile_ids: Array(3)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["square-6-2", "square-7-1", "square-8-1"]
ai_moves_decider9.js:644 ["circle"] "max_suit_list doesnt include this curr_suit < " "square" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-6-2 JUST MAPPED THIS , tile_id,  square-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-6-2
ai_moves_decider9.js:675 max_suit_list added new element square
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-7-1 JUST MAPPED THIS , tile_id,  square-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-8-1 JUST MAPPED THIS , tile_id,  square-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-8-1
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = (2) ["circle", "square"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.5", sort_meth: "asc", grp_type: "straight", tile_ids: Array(7)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (7) ["triangle-6-2", "triangle-7-1", "triangle-8-1", "triangle-9-2", "triangle-10-1", "triangle-11-2", "triangle-12-1"]
ai_moves_decider9.js:644 (2) ["circle", "square"] "max_suit_list doesnt include this curr_suit < " "triangle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-6-2 JUST MAPPED THIS , tile_id,  triangle-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-6-2
ai_moves_decider9.js:675 max_suit_list added new element triangle
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-7-1 JUST MAPPED THIS , tile_id,  triangle-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-8-1 JUST MAPPED THIS , tile_id,  triangle-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-8-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-9-2 JUST MAPPED THIS , tile_id,  triangle-9-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-9-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-10-1 JUST MAPPED THIS , tile_id,  triangle-10-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-10-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-11-2 JUST MAPPED THIS , tile_id,  triangle-11-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-11-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-12-1 JUST MAPPED THIS , tile_id,  triangle-12-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-12-1
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = (3) ["circle", "square", "triangle"]
ai_moves_decider9.js:691 SO FAR >> all_played_grps_ids =  (3) ["div_container.1", "div_container.4", "div_container.5"]
ai_moves_decider9.js:692  MAP GAMEBOARD TO  <  ai_tiles_organized_1 >  - JUST COMPLETED A FULL PASS  {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:696 max suit list never filled, lets check for new matches calling   checkAiGroupToGameBoardGroup()   (3) ["circle", "square", "triangle"]
​ top of  checkAiGroupToGameBoardGroup() here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
​ CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 circle-7-1 curr obj  {loc: "ai_rack", id: "circle-7-1", num: 7}
​ CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
​ CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["circle-7-1"]
​ condition 2 met , curr_grp_id = obj.loc;  div_container.1 curr obj  {loc: "div_container.1", id: "circle-9-1", num: 9}
​ CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-5-2 curr obj  {loc: "ai_rack", id: "diamond-5-2", num: 5}
​ CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
​ CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-5-2"]
​ CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-6-2 curr obj  {loc: "ai_rack", id: "diamond-6-2", num: 6}
​ CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
​ CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = (2) ["diamond-5-2", "diamond-6-2"]
​ CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-10-2 curr obj  {loc: "ai_rack", id: "diamond-10-2", num: 10}
​ CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
​ CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-10-2"]
​ CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-11-1 curr obj  {loc: "ai_rack", id: "diamond-11-1", num: 11}
​ CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
​ CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = (2) ["diamond-10-2", "diamond-11-1"]
​ CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 diamond-13-2 curr obj  {loc: "ai_rack", id: "diamond-13-2", num: 13}
​ CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
​ CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["diamond-13-2"]
​ CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-4-2 curr obj  {loc: "ai_rack", id: "square-4-2", num: 4}
​ CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
​ CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-4-2"]
​ condition 2 met , curr_grp_id = obj.loc;  div_container.4 curr obj  {loc: "div_container.4", id: "square-6-2", num: 6}
​ CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 square-12-1 curr obj  {loc: "ai_rack", id: "square-12-1", num: 12}
​ CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
​ CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["square-12-1"]
​ CONSEC CHECK > condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 0 cond2 = 0 triangle-2-2 curr obj  {loc: "ai_rack", id: "triangle-2-2", num: 2}
​ CONSEC CHECK > ( obj.loc == ai_rack), add_ai_tiles_gb_group = []
​ CONSEC CHECK > ( obj.loc == ai_rack), temp_poss_group = ["triangle-2-2"]
​ condition 2 met , curr_grp_id = obj.loc;  div_container.5 curr obj  {loc: "div_container.5", id: "triangle-6-2", num: 6}
​  +
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            // RE RUN MATCHES --NOW THIS WORKS MAN !
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            
​  <<< REEEE--CURSION!! >>>  - RERUNNING MATCH -- GAME BOARD TILES TO AI RACK
​ all_played_grps_ids (3) ["div_container.1", "div_container.4", "div_container.5"] game_board_gp_count 4
​ top of clearOutTilesToBePlayedFromAIList() AND tiles_tobe_played =  []
​ clearOutTilesToBePlayedFromAIList() here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (10) ["circle-7-1", "diamond-11-1", "diamond-5-2", "diamond-10-2", "diamond-6-2", "diamond-13-2", "square-12-1", "triangle-2-2", "square-4-2", "square-8-2"]
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped circle-7-1
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-11-1
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-5-2
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-10-2
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-6-2
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped diamond-13-2
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-12-1
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped triangle-2-2
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-4-2
​ Mapping: < ai_tiles_list >   to   < ai_tiles_organized obj > , item being mapped square-8-2
​ ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
​ ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.9", sort_meth: "na", grp_type: "3ofKind", tile_ids: Array(3)}
​ ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["circle-1-1", "triangle-1-1", "diamond-1-1"]
​ ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.1", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
​ ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-9-1", "circle-10-2", "circle-11-2", "circle-12-2", "circle-13-2"]
​ [] "max_suit_list doesnt include this curr_suit < " "circle" ">  so we keep mapping via for loop"
​ MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-9-1 JUST MAPPED THIS , tile_id,  circle-9-1
​ MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
​  in for loop curr tile id is  circle-9-1
​ max_suit_list added new element circle
​ MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-10-2 JUST MAPPED THIS , tile_id,  circle-10-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-10-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-11-2 JUST MAPPED THIS , tile_id,  circle-11-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-11-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-12-2 JUST MAPPED THIS , tile_id,  circle-12-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-12-2
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  circle-13-2 JUST MAPPED THIS , tile_id,  circle-13-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.1 JUST MAPPED THIS , tile_group_category.div_id,  div_container.1
ai_moves_decider9.js:670  in for loop curr tile id is  circle-13-2
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = ["circle"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.14", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (5) ["circle-1-2", "circle-2-1", "circle-3-1", "circle-4-2", "circle-5-2"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.4", sort_meth: "asc", grp_type: "straight", tile_ids: Array(3)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (3) ["square-6-2", "square-7-1", "square-8-1"]
ai_moves_decider9.js:644 ["circle"] "max_suit_list doesnt include this curr_suit < " "square" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-6-2 JUST MAPPED THIS , tile_id,  square-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-6-2
ai_moves_decider9.js:675 max_suit_list added new element square
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-7-1 JUST MAPPED THIS , tile_id,  square-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  square-8-1 JUST MAPPED THIS , tile_id,  square-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.4 JUST MAPPED THIS , tile_group_category.div_id,  div_container.4
ai_moves_decider9.js:670  in for loop curr tile id is  square-8-1
ai_moves_decider9.js:679 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:680 MAXXXXX  max_suit_list = (2) ["circle", "square"]
ai_moves_decider9.js:635 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> tile_group_category =  {div_id: "div_container.5", sort_meth: "asc", grp_type: "straight", tile_ids: Array(7)}
ai_moves_decider9.js:636 ->MAPPING PLAYED GRPS TO AI-TILE-RACK >> MAPPING THIS --> tile_group_category.tile_ids  =  (7) ["triangle-6-2", "triangle-7-1", "triangle-8-1", "triangle-9-2", "triangle-10-1", "triangle-11-2", "triangle-12-1"]
ai_moves_decider9.js:644 (2) ["circle", "square"] "max_suit_list doesnt include this curr_suit < " "triangle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-6-2 JUST MAPPED THIS , tile_id,  triangle-6-2
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-6-2
ai_moves_decider9.js:675 max_suit_list added new element triangle
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-7-1 JUST MAPPED THIS , tile_id,  triangle-7-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-7-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-8-1 JUST MAPPED THIS , tile_id,  triangle-8-1
ai_moves_decider9.js:662 MAPPING TO >>  ai_tiles_organized_1[suit][number].loc,  div_container.5 JUST MAPPED THIS , tile_group_category.div_id,  div_container.5
ai_moves_decider9.js:670  in for loop curr tile id is  triangle-8-1
ai_moves_decider9.js:661 MAPPING TO >> ai_tiles_organized_1[suit][number].id,  triangle-9-2 JUST MAPPED THIS , tile_id,













>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


 2-/12/21 AI STUCK IN A LOOP SAME ISSUE AS BEFORE i THINK WE HAD MANY GROUPS NOT SURE WHAT THE ERROR IS 




<<<<<<ERROR SPUN INFINITE >>>>>>>>>>>>>>>>>  ON 2/5/21

here are all groups HTMLCollection(4) [div#div_container.1.tileContainer, div#div_container.8.tileContainer, div#div_container.9.tileContainer, 
                                        div#div_container.15.tileContainer, ]
eval_played_groups1.js:415 type of all_tile_groups  object
eval_played_groups1.js:420 the tile_groups 
eval_played_groups1.js:420 the tile_groups 
eval_played_groups1.js:420 the tile_groups 
eval_played_groups1.js:420 the tile_groups 
eval_played_groups1.js:450 master_groups_list (4) [Array(4), Array(4), Array(4), Array(4)]
4eval_played_groups1.js:93 before inner loop var index_pos = -1
eval_played_groups1.js:109  Am i Printing ??? 
eval_played_groups1.js:121 Top of tile_array check suit
eval_played_groups1.js:122 this is tile_array (4) ["div_container.1", Array(4), Array(4), Array(3)]
eval_played_groups1.js:124 tile_array[1].length 4
eval_played_groups1.js:125  the error group so far is= [] tile_array[0] div_container.1
eval_played_groups1.js:135 CHECKING FOR SIMILAR SUIT, (4) ["diamond", "triangle", "circle", "empty_slot"]
eval_played_groups1.js:140 location of empty slot is  3
eval_played_groups1.js:143 x is = 1
eval_played_groups1.js:140 location of empty slot is  3
eval_played_groups1.js:143 x is = 2
eval_played_groups1.js:145 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (3) ["diamond", "triangle", "circle"] (3) [6, 6, 6]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["diamond"]  sames =  ["diamond"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= (2) ["diamond", "triangle"]  sames =  ["diamond"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= (3) ["diamond", "triangle", "circle"]  sames =  ["diamond"]
eval_played_groups1.js:169 here are the uniques_list (3) ["diamond", "triangle", "circle"] here is the sames_list ["diamond"]
eval_played_groups1.js:177 in 3/4 of a kind determined all tiles are different suit, and is Either 3 or 4 of a Kind  or ERROR 
eval_played_groups1.js:191 at top of check_numbers_state 1, and length of our list is , 3
eval_played_groups1.js:192 looking at this list  (3) [6, 6, 6]
eval_played_groups1.js:196 tile_array[2][0] == tile_array[2][1] 6 6 tile_array[2][1] == tile_array[2][2] 6 6
eval_played_groups1.js:208 This is <<<< CORRECT >>>  3 or 4 of a Kind !!!   div_container.1
eval_played_groups1.js:214 <<This is the obj we push to suit {div_id: "div_container.1", sort_meth: "na", grp_type: "3ofKind", tile_ids: Array(3)}
eval_played_groups1.js:219 at end of check 3-4 of kind and check_numbers_state is =  3
eval_played_groups1.js:121 Top of tile_array check suit
eval_played_groups1.js:122 this is tile_array (4) ["div_container.8", Array(5), Array(5), Array(4)]
eval_played_groups1.js:124 tile_array[1].length 5
eval_played_groups1.js:125  the error group so far is= [] tile_array[0] div_container.8
eval_played_groups1.js:135 CHECKING FOR SIMILAR SUIT, (5) ["square", "square", "square", "square", "empty_slot"]
eval_played_groups1.js:140 location of empty slot is  4
eval_played_groups1.js:143 x is = 1
eval_played_groups1.js:140 location of empty slot is  4
eval_played_groups1.js:143 x is = 2
eval_played_groups1.js:145 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (4) ["square", "square", "square", "square"] (4) [3, 4, 5, 6]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["square"]  sames =  ["square"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["square"]  sames =  (2) ["square", "square"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["square"]  sames =  (3) ["square", "square", "square"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["square"]  sames =  (4) ["square", "square", "square", "square"]
eval_played_groups1.js:169 here are the uniques_list ["square"] here is the sames_list (4) ["square", "square", "square", "square"]
eval_played_groups1.js:172 in 3/4 of a kind determined all tiles are same suit, and NOT 3 or 4 of a Kind  But may be a STRAIGHT
eval_played_groups1.js:219 at end of check 3-4 of kind and check_numbers_state is =  10
eval_played_groups1.js:254 this is a number in list checking consecutive 3
eval_played_groups1.js:258 We have small to large sort
eval_played_groups1.js:279 this is the list we are checking for consecutive numbers and should not have empty slot (4) ["square", "square", "square", "square"]
eval_played_groups1.js:291 these are the same suit  (4) ["square", "square", "square", "square"]
eval_played_groups1.js:340 << CONSECT CORRECT >>...THIS GROUP IS  A   PROPERLY SORTED "STRAIGHT"  (4) [3, 4, 5, 6]
eval_played_groups1.js:349 <<THIS IS ref_name  
eval_played_groups1.js:350 << THIS IS tile_array  (4) ["div_container.8", Array(4), Array(4), Array(4)]
eval_played_groups1.js:351 <<THIS IS tile_array[0]  div_container.8
eval_played_groups1.js:352 <<THIS IS tile_array[3]  (4) ["square-3-1", "square-4-1", "square-5-2", "square-6-2"]
eval_played_groups1.js:356 <<This is the obj we push to suit {div_id: "div_container.8", sort_meth: "asc", grp_type: "straight", tile_ids: Array(4)}
eval_played_groups1.js:358 <<THIS IS game_board_groups[ref_name]  undefined
eval_played_groups1.js:359 <<THIS IS game_board_groups    {1: Array(0), 2: Array(0), 3: Array(0), 4: Array(0), 5: Array(0), 6: Array(1), 7: Array(0), 8: Array(0), 9: Array(0), 10: Array(0), 11: Array(0), 12: Array(0), 13: Array(0), circle: Array(0), diamond: Array(0), square: Array(1), triangle: Array(0)}
eval_played_groups1.js:121 Top of tile_array check suit
eval_played_groups1.js:122 this is tile_array (4) ["div_container.9", Array(5), Array(5), Array(4)]
eval_played_groups1.js:124 tile_array[1].length 5
eval_played_groups1.js:125  the error group so far is= [] tile_array[0] div_container.9
eval_played_groups1.js:135 CHECKING FOR SIMILAR SUIT, (5) ["circle", "circle", "circle", "circle", "empty_slot"]
eval_played_groups1.js:140 location of empty slot is  4
eval_played_groups1.js:143 x is = 1
eval_played_groups1.js:140 location of empty slot is  4
eval_played_groups1.js:143 x is = 2
eval_played_groups1.js:145 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (4) ["circle", "circle", "circle", "circle"] (4) [7, 8, 9, 10]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["circle"]  sames =  ["circle"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["circle"]  sames =  (2) ["circle", "circle"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["circle"]  sames =  (3) ["circle", "circle", "circle"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["circle"]  sames =  (4) ["circle", "circle", "circle", "circle"]
eval_played_groups1.js:169 here are the uniques_list ["circle"] here is the sames_list (4) ["circle", "circle", "circle", "circle"]
eval_played_groups1.js:172 in 3/4 of a kind determined all tiles are same suit, and NOT 3 or 4 of a Kind  But may be a STRAIGHT
eval_played_groups1.js:219 at end of check 3-4 of kind and check_numbers_state is =  10
eval_played_groups1.js:254 this is a number in list checking consecutive 7
eval_played_groups1.js:258 We have small to large sort
eval_played_groups1.js:279 this is the list we are checking for consecutive numbers and should not have empty slot (4) ["circle", "circle", "circle", "circle"]
eval_played_groups1.js:291 these are the same suit  (4) ["circle", "circle", "circle", "circle"]
eval_played_groups1.js:340 << CONSECT CORRECT >>...THIS GROUP IS  A   PROPERLY SORTED "STRAIGHT"  (4) [7, 8, 9, 10]
eval_played_groups1.js:349 <<THIS IS ref_name  
eval_played_groups1.js:350 << THIS IS tile_array  (4) ["div_container.9", Array(4), Array(4), Array(4)]
eval_played_groups1.js:351 <<THIS IS tile_array[0]  div_container.9
eval_played_groups1.js:352 <<THIS IS tile_array[3]  (4) ["circle-7-1", "circle-8-1", "circle-9-1", "circle-10-1"]
eval_played_groups1.js:356 <<This is the obj we push to suit {div_id: "div_container.9", sort_meth: "asc", grp_type: "straight", tile_ids: Array(4)}
eval_played_groups1.js:358 <<THIS IS game_board_groups[ref_name]  undefined
eval_played_groups1.js:359 <<THIS IS game_board_groups    {1: Array(0), 2: Array(0), 3: Array(0), 4: Array(0), 5: Array(0), 6: Array(1), 7: Array(0), 8: Array(0), 9: Array(0), 10: Array(0), 11: Array(0), 12: Array(0), 13: Array(0), circle: Array(1), diamond: Array(0), square: Array(1), triangle: Array(0)}
eval_played_groups1.js:121 Top of tile_array check suit
eval_played_groups1.js:122 this is tile_array (4) ["div_container.15", Array(6), Array(6), Array(5)]
eval_played_groups1.js:124 tile_array[1].length 6
eval_played_groups1.js:125  the error group so far is= [] tile_array[0] div_container.15
eval_played_groups1.js:247 location of empty slot is  5
eval_played_groups1.js:250 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (5) ["square", "square", "square", "square", "square"]
eval_played_groups1.js:247 location of empty slot is  5
eval_played_groups1.js:250 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (5) [9, 10, 11, 12, 13]
eval_played_groups1.js:254 this is a number in list checking consecutive 9
eval_played_groups1.js:258 We have small to large sort
eval_played_groups1.js:279 this is the list we are checking for consecutive numbers and should not have empty slot (5) ["square", "square", "square", "square", "square"]
eval_played_groups1.js:291 these are the same suit  (5) ["square", "square", "square", "square", "square"]
eval_played_groups1.js:340 << CONSECT CORRECT >>...THIS GROUP IS  A   PROPERLY SORTED "STRAIGHT"  (5) [9, 10, 11, 12, 13]
eval_played_groups1.js:349 <<THIS IS ref_name  
eval_played_groups1.js:350 << THIS IS tile_array  (4) ["div_container.15", Array(5), Array(5), Array(5)]
eval_played_groups1.js:351 <<THIS IS tile_array[0]  div_container.15
eval_played_groups1.js:352 <<THIS IS tile_array[3]  (5) ["square-9-2", "square-10-2", "square-11-2", "square-12-2", "square-13-1"]
eval_played_groups1.js:356 <<This is the obj we push to suit {div_id: "div_container.15", sort_meth: "asc", grp_type: "straight", tile_ids: Array(5)}
eval_played_groups1.js:358 <<THIS IS game_board_groups[ref_name]  undefined
eval_played_groups1.js:359 <<THIS IS game_board_groups    {1: Array(0), 2: Array(0), 3: Array(0), 4: Array(0), 5: Array(0), 6: Array(1), 7: Array(0), 8: Array(0), 9: Array(0), 10: Array(0), 11: Array(0), 12: Array(0), 13: Array(0), circle: Array(1), diamond: Array(0), square: Array(2), triangle: Array(0)}
eval_played_groups1.js:381 THIS IS ERROR GROUPS SO FAR  []
eval_played_groups1.js:388 this is errorGroups []
eval_played_groups1.js:391 this item is not in errorgroups div_container.1
eval_played_groups1.js:61  this is the item to be corrected  
eval_played_groups1.js:62  this is its border color  blue
eval_played_groups1.js:388 this is errorGroups []
eval_played_groups1.js:391 this item is not in errorgroups div_container.8
eval_played_groups1.js:61  this is the item to be corrected  
eval_played_groups1.js:62  this is its border color  blue
eval_played_groups1.js:388 this is errorGroups []
eval_played_groups1.js:391 this item is not in errorgroups div_container.9
eval_played_groups1.js:61  this is the item to be corrected  
eval_played_groups1.js:62  this is its border color  blue
eval_played_groups1.js:388 this is errorGroups []
eval_played_groups1.js:391 this item is not in errorgroups div_container.15
eval_played_groups1.js:61  this is the item to be corrected  
eval_played_groups1.js:62  this is its border color  
rumi_brain11_test5.js:353 XXXXXXXXXXXXXX  These are the groups on the board  XXXXXXXXXXXXXXXXXX {1: Array(0), 2: Array(0), 3: Array(0), 4: Array(0), 5: Array(0), 6: Array(1), 7: Array(0), 8: Array(0), 9: Array(0), 10: Array(0), 11: Array(0), 12: Array(0), 13: Array(0), circle: Array(1), diamond: Array(0), square: Array(2), triangle: Array(0)}
ai_moves_decider9.js:151 ai_moves_decider.js is running
ai_moves_decider9.js:186 ai_tiles_organized_1 =  {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-12-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped diamond-11-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-2-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped square-9-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-12-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-10-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-2-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-9-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped circle-4-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped diamond-2-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped circle-5-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-7-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped circle-4-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-13-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-1-2
ai_moves_decider9.js:222 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:256 possible straights []
ai_moves_decider9.js:268 total_points 0
ai_moves_decider9.js:320 ai_a_kind_organized {1: Array(1), 2: Array(1), 3: Array(1), 4: Array(1), 5: Array(1), 6: Array(1), 7: Array(1), 8: Array(1), 9: Array(1), 10: Array(1), 11: Array(1), 12: Array(1), 13: Array(1)}
ai_moves_decider9.js:361 ai_playable_of_kind = []
ai_moves_decider9.js:479 ai_playable_of_kind = []
ai_moves_decider9.js:480  ai_poss_suits =  []
ai_moves_decider9.js:482 test_string baby
ai_moves_decider9.js:484 test_string baby
ai_moves_decider9.js:516 <<<<<<<<<<<<<<<  BUILDING FINAL OBJ TO PLAY >>>>>>>>>>>>>>>>
ai_moves_decider9.js:517  this is master_ai_playable_list =  [] this is its length = 0
ai_moves_decider9.js:532 here is pla ai_tiles_list << BEFORE >> to deletion of tiles we will play (15) ["triangle-12-2", "diamond-11-2", "triangle-2-2", "square-9-1", "triangle-12-1", "triangle-10-2", "triangle-2-1", "triangle-9-2", "circle-4-1", "diamond-2-1", "circle-5-1", "triangle-7-1", "circle-4-2", "triangle-13-1", "triangle-1-2"]
ai_moves_decider9.js:533 here are all playable groups thus far []
ai_moves_decider9.js:534 here is the GROUPS TO BE PLAYED SO FAR , add_ai_tiles_gb_group []
ai_moves_decider9.js:552 here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (15) ["triangle-12-2", "diamond-11-2", "triangle-2-2", "square-9-1", "triangle-12-1", "triangle-10-2", "triangle-2-1", "triangle-9-2", "circle-4-1", "diamond-2-1", "circle-5-1", "triangle-7-1", "circle-4-2", "triangle-13-1", "triangle-1-2"]
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-12-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped diamond-11-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-2-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped square-9-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-12-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-10-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-2-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-9-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped circle-4-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped diamond-2-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped circle-5-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-7-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped circle-4-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-13-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-1-2
ai_moves_decider9.js:222 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:558 here is  ai_tiles_organized_1 rebuilt with loose tiles, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:604 game_board_gp_count 3
ai_moves_decider9.js:609 here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:635 [] "max_suit_list doesnt include this curr_suit < " "circle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  circle-7-1
ai_moves_decider9.js:659 max_suit_list added new element circle
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  circle-8-1
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  circle-9-1
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  circle-10-1
ai_moves_decider9.js:663 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:664 MAXXXXX  max_suit_list = ["circle"]
ai_moves_decider9.js:635 ["circle"] "max_suit_list doesnt include this curr_suit < " "square" ">  so we keep mapping via for loop"
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  square-3-1
ai_moves_decider9.js:659 max_suit_list added new element square
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  square-4-1
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  square-5-2
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  square-6-2
ai_moves_decider9.js:663 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:664 MAXXXXX  max_suit_list = (2) ["circle", "square"]
ai_moves_decider9.js:675 all_played_grps_ids =  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:676  MAP GAMEBOARD TO  <  ai_tiles_organized_1 >  - JUST COMPLETED A FULL PASS  {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:680 max suit list never filled, lets check for new matches calling   checkAiGroupToGameBoardGroup()   (2) ["circle", "square"]
ai_moves_decider9.js:708 top of  checkAiGroupToGameBoardGroup() here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 circle-4-2 curr obj  {loc: "ai_rack", id: "circle-4-2", num: 4}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 circle-5-1 curr obj  {loc: "ai_rack", id: "circle-5-1", num: 5}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:739 condition 2 met , curr_grp_id = obj.loc;  div_container.9 curr obj  {loc: "div_container.9", id: "circle-7-1", num: 7}
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-2-1 curr obj  {loc: "ai_rack", id: "diamond-2-1", num: 2}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-11-2 curr obj  {loc: "ai_rack", id: "diamond-11-2", num: 11}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:739 condition 2 met , curr_grp_id = obj.loc;  div_container.8 curr obj  {loc: "div_container.8", id: "square-3-1", num: 3}
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 square-9-1 curr obj  {loc: "ai_rack", id: "square-9-1", num: 9}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-1-2 curr obj  {loc: "ai_rack", id: "triangle-1-2", num: 1}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-2-1 curr obj  {loc: "ai_rack", id: "triangle-2-1", num: 2}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-7-1 curr obj  {loc: "ai_rack", id: "triangle-7-1", num: 7}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-9-2 curr obj  {loc: "ai_rack", id: "triangle-9-2", num: 9}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-10-2 curr obj  {loc: "ai_rack", id: "triangle-10-2", num: 10}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-12-1 curr obj  {loc: "ai_rack", id: "triangle-12-1", num: 12}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-13-1 curr obj  {loc: "ai_rack", id: "triangle-13-1", num: 13}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:794  +
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            // RE RUN MATCHES --NOW THIS WORKS MAN !
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            
ai_moves_decider9.js:801  <<< REEEE--CURSION!! >>>  - RERUNNING MATCH -- GAME BOARD TILES TO AI RACK
ai_moves_decider9.js:802 all_played_grps_ids (2) ["div_container.9", "div_container.8"] game_board_gp_count 3
ai_moves_decider9.js:692 top of clearOutTilesToBePlayedFromAIList() AND tiles_tobe_played =  []
ai_moves_decider9.js:698 clearOutTilesToBePlayedFromAIList() here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (15) ["triangle-12-2", "diamond-11-2", "triangle-2-2", "square-9-1", "triangle-12-1", "triangle-10-2", "triangle-2-1", "triangle-9-2", "circle-4-1", "diamond-2-1", "circle-5-1", "triangle-7-1", "circle-4-2", "triangle-13-1", "triangle-1-2"]
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-12-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped diamond-11-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-2-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped square-9-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-12-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-10-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-2-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-9-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped circle-4-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped diamond-2-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped circle-5-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-7-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped circle-4-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-13-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-1-2
ai_moves_decider9.js:222 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:635 [] "max_suit_list doesnt include this curr_suit < " "circle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  circle-7-1
ai_moves_decider9.js:659 max_suit_list added new element circle
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  circle-8-1
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  circle-9-1
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  circle-10-1
ai_moves_decider9.js:663 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:664 MAXXXXX  max_suit_list = ["circle"]
ai_moves_decider9.js:635 ["circle"] "max_suit_list doesnt include this curr_suit < " "square" ">  so we keep mapping via for loop"
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  square-3-1
ai_moves_decider9.js:659 max_suit_list added new element square
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  square-4-1
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  square-5-2
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  square-6-2
ai_moves_decider9.js:663 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:664 MAXXXXX  max_suit_list = (2) ["circle", "square"]
ai_moves_decider9.js:675 all_played_grps_ids =  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:676  MAP GAMEBOARD TO  <  ai_tiles_organized_1 >  - JUST COMPLETED A FULL PASS  {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:680 max suit list never filled, lets check for new matches calling   checkAiGroupToGameBoardGroup()   (2) ["circle", "square"]
ai_moves_decider9.js:708 top of  checkAiGroupToGameBoardGroup() here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 circle-4-2 curr obj  {loc: "ai_rack", id: "circle-4-2", num: 4}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 circle-5-1 curr obj  {loc: "ai_rack", id: "circle-5-1", num: 5}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:739 condition 2 met , curr_grp_id = obj.loc;  div_container.9 curr obj  {loc: "div_container.9", id: "circle-7-1", num: 7}
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-2-1 curr obj  {loc: "ai_rack", id: "diamond-2-1", num: 2}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-11-2 curr obj  {loc: "ai_rack", id: "diamond-11-2", num: 11}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:739 condition 2 met , curr_grp_id = obj.loc;  div_container.8 curr obj  {loc: "div_container.8", id: "square-3-1", num: 3}
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 square-9-1 curr obj  {loc: "ai_rack", id: "square-9-1", num: 9}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-1-2 curr obj  {loc: "ai_rack", id: "triangle-1-2", num: 1}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-2-1 curr obj  {loc: "ai_rack", id: "triangle-2-1", num: 2}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-7-1 curr obj  {loc: "ai_rack", id: "triangle-7-1", num: 7}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-9-2 curr obj  {loc: "ai_rack", id: "triangle-9-2", num: 9}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-10-2 curr obj  {loc: "ai_rack", id: "triangle-10-2", num: 10}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-12-1 curr obj  {loc: "ai_rack", id: "triangle-12-1", num: 12}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-13-1 curr obj  {loc: "ai_rack", id: "triangle-13-1", num: 13}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:794  +
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            // RE RUN MATCHES --NOW THIS WORKS MAN !
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            
ai_moves_decider9.js:801  <<< REEEE--CURSION!! >>>  - RERUNNING MATCH -- GAME BOARD TILES TO AI RACK
ai_moves_decider9.js:802 all_played_grps_ids (2) ["div_container.9", "div_container.8"] game_board_gp_count 3
ai_moves_decider9.js:692 top of clearOutTilesToBePlayedFromAIList() AND tiles_tobe_played =  []
ai_moves_decider9.js:698 clearOutTilesToBePlayedFromAIList() here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (15) ["triangle-12-2", "diamond-11-2", "triangle-2-2", "square-9-1", "triangle-12-1", "triangle-10-2", "triangle-2-1", "triangle-9-2", "circle-4-1", "diamond-2-1", "circle-5-1", "triangle-7-1", "circle-4-2", "triangle-13-1", "triangle-1-2"]
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-12-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped diamond-11-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-2-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped square-9-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-12-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-10-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-2-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-9-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped circle-4-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped diamond-2-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped circle-5-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-7-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped circle-4-2
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-13-1
ai_moves_decider9.js:214 ai_tiles_organized current item being mapped triangle-1-2
ai_moves_decider9.js:222 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:635 [] "max_suit_list doesnt include this curr_suit < " "circle" ">  so we keep mapping via for loop"
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  circle-7-1
ai_moves_decider9.js:659 max_suit_list added new element circle
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  circle-8-1
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  circle-9-1
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  circle-10-1
ai_moves_decider9.js:663 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:664 MAXXXXX  max_suit_list = ["circle"]
ai_moves_decider9.js:635 ["circle"] "max_suit_list doesnt include this curr_suit < " "square" ">  so we keep mapping via for loop"
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  square-3-1
ai_moves_decider9.js:659 max_suit_list added new element square
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  square-4-1
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  square-5-2
ai_moves_decider9.js:652 NEW DIV ID added , let all_played_grps_ids  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:653  just filled this suit of ai_tiles_org..  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ai_moves_decider9.js:654  in for loop curr tile id is  square-6-2
ai_moves_decider9.js:663 OOOOOOOOOOO >-- Out of for Loop  ---<<<<<<<UUUTTT
ai_moves_decider9.js:664 MAXXXXX  max_suit_list = (2) ["circle", "square"]
ai_moves_decider9.js:675 all_played_grps_ids =  (2) ["div_container.9", "div_container.8"]
ai_moves_decider9.js:676  MAP GAMEBOARD TO  <  ai_tiles_organized_1 >  - JUST COMPLETED A FULL PASS  {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:680 max suit list never filled, lets check for new matches calling   checkAiGroupToGameBoardGroup()   (2) ["circle", "square"]
ai_moves_decider9.js:708 top of  checkAiGroupToGameBoardGroup() here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 circle-4-2 curr obj  {loc: "ai_rack", id: "circle-4-2", num: 4}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 circle-5-1 curr obj  {loc: "ai_rack", id: "circle-5-1", num: 5}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:739 condition 2 met , curr_grp_id = obj.loc;  div_container.9 curr obj  {loc: "div_container.9", id: "circle-7-1", num: 7}
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-2-1 curr obj  {loc: "ai_rack", id: "diamond-2-1", num: 2}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-11-2 curr obj  {loc: "ai_rack", id: "diamond-11-2", num: 11}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:739 condition 2 met , curr_grp_id = obj.loc;  div_container.8 curr obj  {loc: "div_container.8", id: "square-3-1", num: 3}
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 square-9-1 curr obj  {loc: "ai_rack", id: "square-9-1", num: 9}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-1-2 curr obj  {loc: "ai_rack", id: "triangle-1-2", num: 1}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-2-1 curr obj  {loc: "ai_rack", id: "triangle-2-1", num: 2}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-7-1 curr obj  {loc: "ai_rack", id: "triangle-7-1", num: 7}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-9-2 curr obj  {loc: "ai_rack", id: "triangle-9-2", num: 9}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-10-2 curr obj  {loc: "ai_rack", id: "triangle-10-2", num: 10}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-12-1 curr obj  {loc: "ai_rack", id: "triangle-12-1", num: 12}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:731 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-13-1 curr obj  {loc: "ai_rack", id: "triangle-13-1", num: 13}
ai_moves_decider9.js:732 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  []
ai_moves_decider9.js:794  +
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            // RE RUN MATCHES --NOW THIS WORKS MAN !
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            





























///>> if play this:
 ai1_list = ["triangle-4-1", "circle-9-2", "square-10-1", "circle-11-1", "circle-12-1", "square-2-2", "diamond-3-2", "circle-2-2", "square-5-1", "triangle-12-1", "circle-13-2", "diamond-10-2", "diamond-1-1", "square-6-1", "circle-10-1"]
we get: 
["circle-9-2", "circle-10-1", "circle-11-1", "circle-12-1", "circle-13-2"]

///>> if play this:
 ai1_list = ["triangle-10-1","triangle-4-1", "circle-9-2", "square-10-1", "circle-11-1", "circle-12-1", "square-2-2", "diamond-3-2", "circle-2-2", "square-5-1", "triangle-12-1", "circle-13-2", "diamond-10-2", "diamond-1-1", "square-6-1", "circle-10-1"]

 you will get  this is :  new_groups  
["circle-9-2", "circle-10-1", "circle-11-1", "circle-12-1", "circle-13-2"]
 ["square-10-1", "triangle-10-1", "diamond-10-2"]

//>> THIS IS HOW IT DID ITS MAGIC! 
For= circle-10-2
ai_moves_decider9.js:437 suit and ofkind match is = circle-10-1
ai_moves_decider9.js:438  ofKindSum =  40 straightSum = 55
ai_moves_decider9.js:441 of Straight sum is --GREATER THAN OF EQUAL to OfKind Set --will remove set or tile from ai_playable_of_kind containing this tile
ai_moves_decider9.js:442 if sister tile not found will be removing  circle-10-1 in this suit (4) ["square-10-1", "circle-10-1", "triangle-10-1", "diamond-10-2"] or removing whole set
ai_moves_decider9.js:443 the index location of circle-10-1 in list above is  1
ai_moves_decider9.js:449 the duplicate tile < circle-10-1 > was in a set of < 4ofKind > and was removed from kindSet ,  (3) ["square-10-1", "triangle-10-1", "diamond-10-2"]
ai_moves_decider9.js:459 here the following, circle-10-1  if exists should have been removed from  (3) ["square-10-1", "triangle-10-1", "diamond-10-2"]
ai_moves_decider9.js:460 here both matchedOfKind, (3) ["square-10-1", "triangle-10-1", "diamond-10-2"] and ai_playable_of_kind should be equal ["square-10-1", "triangle-10-1", "diamond-10-2"]





//////////////////////////////////////
THIS IS FIXED - I WASNT REMOVING FULL PLAYABLE OF KIND SETS WITH DUPLICATES - JUST SINGLE TILES IF DUPE EXISTED IN SET OF 4 OF KIND
 ["triangle-4-1", "circle-9-2", "square-10-1", "circle-11-1", "square-2-2", "diamond-3-2", "circle-2-2", "square-5-1", "triangle-12-1", "circle-13-2", "diamond-10-2", "diamond-1-1", "square-6-1", "circle-10-1"]
////
/// THIS ERROR PLAYED CIRCLE-10-1  TWICE - !
////////////////////////////////////
eval_played_groups1.js:93 before inner loop var index_pos = -1
eval_played_groups1.js:109  Am i Printing ??? 
eval_played_groups1.js:121 Top of tile_array check suit
eval_played_groups1.js:122 this is tile_array (4) ["div_container.1", Array(5), Array(5), Array(4)]
eval_played_groups1.js:124 tile_array[1].length 5
eval_played_groups1.js:125  the error group so far is= [] tile_array[0] div_container.1
eval_played_groups1.js:135 CHECKING FOR SIMILAR SUIT, (5) ["circle", "circle", "circle", "circle", "empty_slot"]
eval_played_groups1.js:140 location of empty slot is  4
eval_played_groups1.js:143 x is = 1
eval_played_groups1.js:140 location of empty slot is  4
eval_played_groups1.js:143 x is = 2
eval_played_groups1.js:145 EMPTY SLOT SHOULD BE REMOVED FROM BOTH THESE LISTS, (4) ["circle", "circle", "circle", "circle"] (4) [1, 2, 3, 4]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["circle"]  sames =  ["circle"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["circle"]  sames =  (2) ["circle", "circle"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["circle"]  sames =  (3) ["circle", "circle", "circle"]
eval_played_groups1.js:166 bottom of suits eval here are our lists,  uniques= ["circle"]  sames =  (4) ["circle", "circle", "circle", "circle"]
eval_played_groups1.js:169 here are the uniques_list ["circle"] here is the sames_list (4) ["circle", "circle", "circle", "circle"]
eval_played_groups1.js:172 in 3/4 of a kind determined all tiles are same suit, and NOT 3 or 4 of a Kind  But may be a STRAIGHT
eval_played_groups1.js:219 at end of check 3-4 of kind and check_numbers_state is =  10
eval_played_groups1.js:254 this is a number in list checking consecutive 1
eval_played_groups1.js:258 We have small to large sort
eval_played_groups1.js:279 this is the list we are checking for consecutive numbers and should not have empty slot (4) ["circle", "circle", "circle", "circle"]
eval_played_groups1.js:291 these are the same suit  (4) ["circle", "circle", "circle", "circle"]
eval_played_groups1.js:340 << CONSECT CORRECT >>...THIS GROUP IS  A   PROPERLY SORTED "STRAIGHT"  (4) [1, 2, 3, 4]
eval_played_groups1.js:349 <<THIS IS ref_name  
eval_played_groups1.js:350 << THIS IS tile_array  (4) ["div_container.1", Array(4), Array(4), Array(4)]
eval_played_groups1.js:351 <<THIS IS tile_array[0]  div_container.1
eval_played_groups1.js:352 <<THIS IS tile_array[3]  (4) ["circle-1-1", "circle-2-1", "circle-3-2", "circle-4-1"]
eval_played_groups1.js:356 <<This is the obj we push to suit {div_id: "div_container.1", sort_meth: "asc", grp_type: "straight", tile_ids: Array(4)}
eval_played_groups1.js:358 <<THIS IS game_board_groups[ref_name]  undefined
eval_played_groups1.js:359 <<THIS IS game_board_groups    {1: Array(0), 2: Array(0), 3: Array(0), 4: Array(0), 5: Array(0), 6: Array(0), 7: Array(0), 8: Array(0), 9: Array(0), 10: Array(0), 11: Array(0), 12: Array(0), 13: Array(0), circle: Array(1), diamond: Array(0), square: Array(0), triangle: Array(0)}
eval_played_groups1.js:381 THIS IS ERROR GROUPS SO FAR  []
eval_played_groups1.js:388 this is errorGroups []
eval_played_groups1.js:391 this item is not in errorgroups div_container.1
eval_played_groups1.js:61  this is the item to be corrected  <div class=​"tileContainer" id=​"div_container.1" onmouseenter=​"newTileToGroup()​;​" onmouseleave=​"tileLeavingGroup()​;​" style=​"width:​ 650px;​ top:​ 329px;​ left:​ 488px;​ border-color:​ blue;​">​…​</div>​
eval_played_groups1.js:62  this is its border color  
rumi_brain11_test5.js:353 XXXXXXXXXXXXXX  These are the groups on the board  XXXXXXXXXXXXXXXXXX {1: Array(0), 2: Array(0), 3: Array(0), 4: Array(0), 5: Array(0), 6: Array(0), 7: Array(0), 8: Array(0), 9: Array(0), 10: Array(0), 11: Array(0), 12: Array(0), 13: Array(0), circle: Array(1), diamond: Array(0), square: Array(0), triangle: Array(0)}
ai_moves_decider9.js:149 ai_moves_decider.js is running
ai_moves_decider9.js:184 ai_tiles_organized_1 =  {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped triangle-4-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped circle-9-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped square-10-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped circle-11-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped square-2-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped diamond-3-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped circle-2-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped square-5-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped triangle-12-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped circle-13-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped diamond-10-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped diamond-1-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped square-6-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped circle-10-1
ai_moves_decider9.js:220 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:254 possible straights [Array(3)]
otal_points 30
ai_moves_decider9.js:318 ai_a_kind_organized {1: Array(1), 2: Array(1), 3: Array(1), 4: Array(1), 5: Array(1), 6: Array(1), 7: Array(1), 8: Array(1), 9: Array(1), 10: Array(1), 11: Array(1), 12: Array(1), 13: Array(1)}
ai_moves_decider9.js:359 ai_playable_of_kind = [Array(3)]
ai_moves_decider9.js:390 this is  straightSum 30
ai_moves_decider9.js:413 matchedOfKind = circle-10-1
ai_moves_decider9.js:414  matchedOfKind[matchedOfKind.length-1] =  1
ai_moves_decider9.js:415  matchedOfKind.substr(0, matchedOfKind.length-1)  circle-10-
ai_moves_decider9.js:419 lookFor= circle-10-2
ai_moves_decider9.js:437 suit and ofkind match is = circle-10-1
ai_moves_decider9.js:438  ofKindSum =  30 straightSum = 30
ai_moves_decider9.js:441 of Straight sum is greater will remove set from ai_playable_of_kind containing this tile
ai_moves_decider9.js:442 if sister tile not found will be removing  circle-10-1 in this suit (3) ["square-10-1", "circle-10-1", "diamond-10-2"]
ai_moves_decider9.js:443 the index location of circle-10-1 in list above is  1
ai_moves_decider9.js:446 here the following, circle-10-1  if exists should have been removed from  (3) ["square-10-1", "circle-10-1", "diamond-10-2"]
ai_moves_decider9.js:447 here both matchedOfKind, (3) ["square-10-1", "circle-10-1", "diamond-10-2"] and ai_playable_of_kind should be equal  [Array(3)]0: (3) ["square-10-1", "circle-10-1", "diamond-10-2"]length: 1__proto__: Array(0)
ai_moves_decider9.js:465 ai_playable_of_kind = [Array(3)]
ai_moves_decider9.js:466  ai_poss_suits =  [Array(3)]
ai_moves_decider9.js:468 test_string baby
ai_moves_decider9.js:470 test_string baby
ai_moves_decider9.js:502 <<<<<<<<<<<<<<<  BUILDING FINAL OBJ TO PLAY >>>>>>>>>>>>>>>>
ai_moves_decider9.js:503  this is master_ai_playable_list =  (2) [Array(3), Array(3)] this is its length = 2
ai_moves_decider9.js:518 here is pla ai_tiles_list << BEFORE >> to deletion of tiles we will play (14) ["triangle-4-1", "circle-9-2", "square-10-1", "circle-11-1", "square-2-2", "diamond-3-2", "circle-2-2", "square-5-1", "triangle-12-1", "circle-13-2", "diamond-10-2", "diamond-1-1", "square-6-1", "circle-10-1"]
ai_moves_decider9.js:519 here are all playable groups thus far (2) [Array(3), Array(3)]0: (3) ["circle-9-2", "circle-10-1", "circle-11-1"]1: (3) ["square-10-1", "circle-10-1", "diamond-10-2"]length: 2__proto__: Array(0)
ai_moves_decider9.js:520 here is


















///////////////////////////////////////
/// FIXED 
/* THIS ERROR KEPT PLAYING - ["square-8-2", "square-9-2", "square-10-2", "square-11-1", "square-12-2", "square-13-2"] OVER AND OVER 

rumi_brain11_test5.js:325 gpl[0] (23) ["square", "1.1", "1.2", "2.1", "2.2", "3.1", "3.2", "4.2", "5.1", "5.2", "6.1", "7.2", "8.1", "8.2", "9.1", "9.2", "10.1", "10.2", "11.1", "11.2", "12.1", "12.2", "13.2"]
rumi_brain11_test5.js:326 player 1 list =  (16) ["circle-9-1", "triangle-2-2", "diamond-11-1", "triangle-10-2", "diamond-1-1", "triangle-7-1", "triangle-3-2", "circle-4-2", "square-4-1", "square-13-1", "square-6-2", "square-7-1", "triangle-13-2", "circle-1-2", "triangle-12-1", "diamond-8-1"]
rumi_brain11_test5.js:422 this is ai1 list (14) ["square-2-1", "circle-10-1", "square-9-2", "square-12-2", "triangle-11-1", "square-8-2", "square-10-2", "circle-13-1", "square-13-2", "triangle-5-2", "diamond-3-2", "diamond-10-1", "circle-12-1", "square-11-1"]
rumi_brain11_test5.js:121 clear list being called .....
rumi_brain11_test5.js:123 the selectedList []
eval_played_groups1.js:414 here are all groups HTMLCollection []
eval_played_groups1.js:415 type of all_tile_groups  object
eval_played_groups1.js:450 master_groups_list []
eval_played_groups1.js:109  Am i Printing ??? 
eval_played_groups1.js:381 THIS IS ERROR GROUPS SO FAR  []
rumi_brain11_test5.js:351 XXXXXXXXXXXXXX  These are the groups on the board  XXXXXXXXXXXXXXXXXX {1: Array(0), 2: Array(0), 3: Array(0), 4: Array(0), 5: Array(0), 6: Array(0), 7: Array(0), 8: Array(0), 9: Array(0), 10: Array(0), 11: Array(0), 12: Array(0), 13: Array(0), circle: Array(0), diamond: Array(0), square: Array(0), triangle: Array(0)}
ai_moves_decider9.js:149 ai_moves_decider.js is running
ai_moves_decider9.js:184 ai_tiles_organized_1 =  {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped square-2-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped circle-10-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped square-9-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped square-12-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped triangle-11-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped square-8-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped square-10-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped circle-13-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped square-13-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped triangle-5-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped diamond-3-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped diamond-10-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped circle-12-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped square-11-1
ai_moves_decider9.js:220 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:254 possible straights [Array(6)]
ai_moves_decider9.js:266 total_points 63
ai_moves_decider9.js:318 ai_a_kind_organized {1: Array(1), 2: Array(1), 3: Array(1), 4: Array(1), 5: Array(1), 6: Array(1), 7: Array(1), 8: Array(1), 9: Array(1), 10: Array(1), 11: Array(1), 12: Array(1), 13: Array(1)}
ai_moves_decider9.js:359 ai_playable_of_kind = [Array(3)]
ai_moves_decider9.js:390 this is  straightSum 63
ai_moves_decider9.js:413 matchedOfKind = square-10-2
ai_moves_decider9.js:414  matchedOfKind[matchedOfKind.length-1] =  2
ai_moves_decider9.js:415  matchedOfKind.substr(0, matchedOfKind.length-1)  square-10-
ai_moves_decider9.js:419 lookFor= square-10-1
ai_moves_decider9.js:437 suit and ofkind match is = square-10-2
ai_moves_decider9.js:438  ofKindSum =  30 straightSum = 63
ai_moves_decider9.js:441 of Straight sum is greater will remove set from ai_playable_of_kind containing this tile
ai_moves_decider9.js:442 if sister tile not found will be removing  square-10-2 in this suit (3) ["square-10-2", "circle-10-1", "diamond-10-1"]
ai_moves_decider9.js:443 the index location of square-10-2 in list above is  0
ai_moves_decider9.js:446 here the following, square-10-2  if exists should have been removed from  (3) ["square-10-2", "circle-10-1", "diamond-10-1"]
ai_moves_decider9.js:447 here both matchedOfKind, (3) ["square-10-2", "circle-10-1", "diamond-10-1"] and ai_playable_of_kind should be equal  [Array(3)]
ai_moves_decider9.js:465 ai_playable_of_kind = [Array(3)]
ai_moves_decider9.js:466  ai_poss_suits =  [Array(6)]
ai_moves_decider9.js:468 test_string baby
ai_moves_decider9.js:470 test_string baby
ai_moves_decider9.js:502 <<<<<<<<<<<<<<<  BUILDING FINAL OBJ TO PLAY >>>>>>>>>>>>>>>>
ai_moves_decider9.js:503  this is master_ai_playable_list =  (2) [Array(6), Array(3)] this is its length = 2
ai_moves_decider9.js:518 here is pla ai_tiles_list << BEFORE >> to deletion of tiles we will play (14) ["square-2-1", "circle-10-1", "square-9-2", "square-12-2", "triangle-11-1", "square-8-2", "square-10-2", "circle-13-1", "square-13-2", "triangle-5-2", "diamond-3-2", "diamond-10-1", "circle-12-1", "square-11-1"]
ai_moves_decider9.js:519 here are all playable groups thus far (2) [Array(6), Array(3)]
ai_moves_decider9.js:520 here is the GROUPS TO BE PLAYED SO FAR , add_ai_tiles_gb_group [{…}]
ai_moves_decider9.js:522 here is the GROUPS TO BE PLAYED SO FAR , add_ai_tiles_gb_group.tiles_to_play = (2) [Array(6), Array(3)]
ai_moves_decider9.js:538 here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (6) ["square-2-1", "triangle-11-1", "circle-13-1", "triangle-5-2", "diamond-3-2", "circle-12-1"]
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped square-2-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped triangle-11-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped circle-13-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped triangle-5-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped diamond-3-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped circle-12-1
ai_moves_decider9.js:220 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:544 here is  ai_tiles_organized_1 rebuilt with loose tiles, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:590 game_board_gp_count 0
ai_moves_decider9.js:595 here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:663 max suit list never filled, lets check for new matches calling   checkAiGroupToGameBoardGroup()   []
ai_moves_decider9.js:692 top of  checkAiGroupToGameBoardGroup() here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:715 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 circle-12-1 curr obj  {loc: "ai_rack", id: "circle-12-1", num: 12}
ai_moves_decider9.js:716 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  [{…}]
ai_moves_decider9.js:715 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 circle-13-1 curr obj  {loc: "ai_rack", id: "circle-13-1", num: 13}
ai_moves_decider9.js:716 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  [{…}]
ai_moves_decider9.js:715 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-3-2 curr obj  {loc: "ai_rack", id: "diamond-3-2", num: 3}
ai_moves_decider9.js:716 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  [{…}]
ai_moves_decider9.js:715 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 square-2-1 curr obj  {loc: "ai_rack", id: "square-2-1", num: 2}
ai_moves_decider9.js:716 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  [{…}]
ai_moves_decider9.js:715 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-5-2 curr obj  {loc: "ai_rack", id: "triangle-5-2", num: 5}
ai_moves_decider9.js:716 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  [{…}]
ai_moves_decider9.js:715 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-11-1 curr obj  {loc: "ai_rack", id: "triangle-11-1", num: 11}
ai_moves_decider9.js:716 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  [{…}]
ai_moves_decider9.js:666 all_played_grps_ids =  []
ai_moves_decider9.js:667  MAP GAMEBOARD TO  < ai_a_kind_organized >  - JUST COMPLETED A FULL PASS  {1: Array(1), 2: Array(1), 3: Array(1), 4: Array(1), 5: Array(1), 6: Array(1), 7: Array(1), 8: Array(1), 9: Array(1), 10: Array(1), 11: Array(1), 12: Array(1), 13: Array(1)}
ai_moves_decider9.js:676 top of clearOutTilesToBePlayedFromAIList() AND tiles_tobe_played =  []
ai_moves_decider9.js:682 clearOutTilesToBePlayedFromAIList() here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (6) ["square-2-1", "triangle-11-1", "circle-13-1", "triangle-5-2", "diamond-3-2", "circle-12-1"]
ai_moves_decider9.js:877 tiles to play are  [{…}]
ai_moves_decider9.js:878  VERY END OF SCRIPT 
rumi_brain11_test5.js:443 here is ai_groups_put_on_gameboard  [{…}]
rumi_brain11_test5.js:444 here is the return obj , temp_obj_holder , from AiMovesDecider() {updated_ai_list: Array(6), ai_tiles_to_play: Array(1)}
rumi_brain11_test5.js:457 NEAR TOP OF assessAiMoves() AND ..... 
rumi_brain11_test5.js:459 total_ai_grps_to_play =  1 , ai_grps_played_ct =  0
rumi_brain11_test5.js:570 this is new_groups (2) [Array(6), Array(3)] new_groups.length= 2
rumi_brain11_test5.js:572 calling async AiCreateNewGroup()
rumi_brain11_test5.js:631 makeNew == yes typeof(makeNew) string
rumi_brain11_test5.js:632 AiCreateNewGroup receiving this  (6) ["square-8-2", "square-9-2", "square-10-2", "square-11-1", "square-12-2", "square-13-2"]
rumi_brain11_test5.js:637 AiCreateNewGroup This is the length of tile list is 6
rumi_brain11_test5.js:765 line 702  length of list is =  6 Now Calling makeStuffDelayer(); 
rumi_brain11_test5.js:754  i = 0  calling makeAiTilesAndSlots( list_of_tiles[i]  ); square-8-2
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-8-2
rumi_brain11_test5.js:656 makeNew = yes newContainerId  tile_id square-8-2 i 0
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-8-2 append_to_id = undefined
rumi_brain11_test5.js:757 line 697 now calling  makeStuffDelayer(); i =  1
rumi_brain11_test5.js:773 this is < i > = 1
rumi_brain11_test5.js:832 I AM MAKING < 2 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  0.slot.div_container.1
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  1.slot.div_container.1
rumi_brain11_test5.js:858 SLOT MADE , i =  2
rumi_brain11_test5.js:930 left_x 400 top_y 400
rumi_brain11_test5.js:933 bottom of create new container() newContainerId =  div_container.1  newSlotId =  1.slot.div_container.1
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  1  Date.now()=  1612558702322
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-9-2
rumi_brain11_test5.js:656 makeNew = yes newContainerId div_container.1 tile_id square-9-2 i 1
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-9-2 append_to_id = 1.slot.div_container.1
rumi_brain11_test5.js:827 first_empty_slot found =  1 num =  2 new_slot_id =  2.slot.div_container.1
rumi_brain11_test5.js:832 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  2.slot.div_container.1
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:665 for tile id square-9-2 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.1   newSlotId = 2.slot.div_container.1
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 1 length_of_list =  6
rumi_brain11_test5.js:737 making another tile square-9-2
rumi_brain11_test5.js:748  ----------BOTTOM of makeStuffDelayer()-----  i =  2  Date.now()=  1612558702323
make_tile_graphic.js:70 APPENDING TILE <  square-9-2 > to slot id < 1.slot.div_container.1 >
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  2  Date.now()=  1612558703623
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-10-2
rumi_brain11_test5.js:656 makeNew = yes newContainerId div_container.1 tile_id square-10-2 i 2
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-10-2 append_to_id = 2.slot.div_container.1
rumi_brain11_test5.js:827 first_empty_slot found =  2 num =  3 new_slot_id =  3.slot.div_container.1
rumi_brain11_test5.js:832 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  3.slot.div_container.1
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:665 for tile id square-10-2 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.1   newSlotId = 3.slot.div_container.1
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 2 length_of_list =  6
rumi_brain11_test5.js:737 making another tile square-10-2
rumi_brain11_test5.js:748  ----------BOTTOM of makeStuffDelayer()-----  i =  3  Date.now()=  1612558703625
make_tile_graphic.js:70 APPENDING TILE <  square-10-2 > to slot id < 2.slot.div_container.1 >
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  3  Date.now()=  1612558704925
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-11-1
rumi_brain11_test5.js:656 makeNew = yes newContainerId div_container.1 tile_id square-11-1 i 3
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-11-1 append_to_id = 3.slot.div_container.1
rumi_brain11_test5.js:827 first_empty_slot found =  3 num =  4 new_slot_id =  4.slot.div_container.1
rumi_brain11_test5.js:832 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  4.slot.div_container.1
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:665 for tile id square-11-1 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.1   newSlotId = 4.slot.div_container.1
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 3 length_of_list =  6
rumi_brain11_test5.js:737 making another tile square-11-1
rumi_brain11_test5.js:748  ----------BOTTOM of makeStuffDelayer()-----  i =  4  Date.now()=  1612558704930
make_tile_graphic.js:70 APPENDING TILE <  square-11-1 > to slot id < 3.slot.div_container.1 >
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  4  Date.now()=  1612558706231
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-12-2
rumi_brain11_test5.js:656 makeNew = yes newContainerId div_container.1 tile_id square-12-2 i 4
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-12-2 append_to_id = 4.slot.div_container.1
rumi_brain11_test5.js:827 first_empty_slot found =  4 num =  5 new_slot_id =  5.slot.div_container.1
rumi_brain11_test5.js:832 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  5.slot.div_container.1
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:665 for tile id square-12-2 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.1   newSlotId = 5.slot.div_container.1
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 4 length_of_list =  6
rumi_brain11_test5.js:737 making another tile square-12-2
rumi_brain11_test5.js:748  ----------BOTTOM of makeStuffDelayer()-----  i =  5  Date.now()=  1612558706232
make_tile_graphic.js:70 APPENDING TILE <  square-12-2 > to slot id < 4.slot.div_container.1 >
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  5  Date.now()=  1612558707533
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-13-2
rumi_brain11_test5.js:656 makeNew = yes newContainerId div_container.1 tile_id square-13-2 i 5
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-13-2 append_to_id = 5.slot.div_container.1
rumi_brain11_test5.js:827 first_empty_slot found =  5 num =  6 new_slot_id =  6.slot.div_container.1
rumi_brain11_test5.js:832 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  6.slot.div_container.1
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:665 for tile id square-13-2 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.1   newSlotId = 6.slot.div_container.1
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 5 length_of_list =  6
rumi_brain11_test5.js:737 making another tile square-13-2
rumi_brain11_test5.js:748  ----------BOTTOM of makeStuffDelayer()-----  i =  6  Date.now()=  1612558707536
make_tile_graphic.js:70 APPENDING TILE <  square-13-2 > to slot id < 5.slot.div_container.1 >
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  6  Date.now()=  1612558708838
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 6 length_of_list =  6
rumi_brain11_test5.js:737 making another tile undefined
rumi_brain11_test5.js:748  ----------BOTTOM of makeStuffDelayer()-----  i =  7  Date.now()=  1612558708838
rumi_brain11_test5.js:121 clear list being called .....
rumi_brain11_test5.js:123 the selectedList []
rumi_brain11_test5.js:947 GetID(); being called
rumi_brain11_test5.js:949 the selectedList []
rumi_brain11_test5.js:133 !!- clearIds() BEING CALLED --!! selectedList =  []
rumi_brain11_test5.js:947 GetID(); being called
rumi_brain11_test5.js:949 the selectedList []
rumi_brain11_test5.js:133 !!- clearIds() BEING CALLED --!! selectedList =  []
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  7  Date.now()=  1612558710138
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 7 length_of_list =  6
rumi_brain11_test5.js:744 FINISHED MAKING ONE BATCH OF AI TILES
rumi_brain11_test5.js:575 HERE IS THE R E S U L T from AiCreateNewGroup() true
rumi_brain11_test5.js:570 this is new_groups (2) [Array(6), Array(3)] new_groups.length= 2
rumi_brain11_test5.js:572 calling async AiCreateNewGroup()
rumi_brain11_test5.js:631 makeNew == yes typeof(makeNew) string
rumi_brain11_test5.js:632 AiCreateNewGroup receiving this  (6) ["square-8-2", "square-9-2", "square-10-2", "square-11-1", "square-12-2", "square-13-2"]
rumi_brain11_test5.js:637 AiCreateNewGroup This is the length of tile list is 6
rumi_brain11_test5.js:765 line 702  length of list is =  6 Now Calling makeStuffDelayer(); 
rumi_brain11_test5.js:754  i = 0  calling makeAiTilesAndSlots( list_of_tiles[i]  ); square-8-2
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-8-2
rumi_brain11_test5.js:656 makeNew = yes newContainerId  tile_id square-8-2 i 0
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-8-2 append_to_id = undefined
rumi_brain11_test5.js:757 line 697 now calling  makeStuffDelayer(); i =  1
rumi_brain11_test5.js:773 this is < i > = 1
rumi_brain11_test5.js:832 I AM MAKING < 2 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  0.slot.div_container.2
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  1.slot.div_container.2
rumi_brain11_test5.js:858 SLOT MADE , i =  2
rumi_brain11_test5.js:930 left_x 400 top_y 400
rumi_brain11_test5.js:933 bottom of create new container() newContainerId =  div_container.2  newSlotId =  1.slot.div_container.2
rumi_brain11_test5.js:947 GetID(); being called
rumi_brain11_test5.js:949 the selectedList []
rumi_brain11_test5.js:133 !!- clearIds() BEING CALLED --!! selectedList =  []
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  1  Date.now()=  1612558711440
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-9-2
rumi_brain11_test5.js:656 makeNew = yes newContainerId div_container.2 tile_id square-9-2 i 1
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-9-2 append_to_id = 1.slot.div_container.2
rumi_brain11_test5.js:827 first_empty_slot found =  1 num =  2 new_slot_id =  2.slot.div_container.2
rumi_brain11_test5.js:832 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  2.slot.div_container.2
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:665 for tile id square-9-2 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.2   newSlotId = 2.slot.div_container.2
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 1 length_of_list =  6
rumi_brain11_test5.js:737 making another tile square-9-2
rumi_brain11_test5.js:748  ----------BOTTOM of makeStuffDelayer()-----  i =  2  Date.now()=  1612558711443
make_tile_graphic.js:70 APPENDING TILE <  square-9-2 > to slot id < 1.slot.div_container.2 >
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  2  Date.now()=  1612558712744
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-10-2
rumi_brain11_test5.js:656 makeNew = yes newContainerId div_container.2 tile_id square-10-2 i 2
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-10-2 append_to_id = 2.slot.div_container.2
rumi_brain11_test5.js:827 first_empty_slot found =  2 num =  3 new_slot_id =  3.slot.div_container.2
rumi_brain11_test5.js:832 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  3.slot.div_container.2
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:665 for tile id square-10-2 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.2   newSlotId = 3.slot.div_container.2
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 2 length_of_list =  6
rumi_brain11_test5.js:737 making another tile square-10-2
rumi_brain11_test5.js:748  ----------BOTTOM of makeStuffDelayer()-----  i =  3  Date.now()=  1612558712745
make_tile_graphic.js:70 APPENDING TILE <  square-10-2 > to slot id < 2.slot.div_container.2 >
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  3  Date.now()=  1612558714046
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-11-1
rumi_brain11_test5.js:656 makeNew = yes newContainerId div_container.2 tile_id square-11-1 i 3
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-11-1 append_to_id = 3.slot.div_container.2
rumi_brain11_test5.js:827 first_empty_slot found =  3 num =  4 new_slot_id =  4.slot.div_container.2
rumi_brain11_test5.js:832 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  4.slot.div_container.2
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:665 for tile id square-11-1 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.2   newSlotId = 4.slot.div_container.2
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 3 length_of_list =  6
rumi_brain11_test5.js:737 making another tile square-11-1
rumi_brain11_test5.js:748  ----------BOTTOM of makeStuffDelayer()-----  i =  4  Date.now()=  1612558714048
make_tile_graphic.js:70 APPENDING TILE <  square-11-1 > to slot id < 3.slot.div_container.2 >
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  4  Date.now()=  1612558715348
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-12-2
rumi_brain11_test5.js:656 makeNew = yes newContainerId div_container.2 tile_id square-12-2 i 4
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-12-2 append_to_id = 4.slot.div_container.2
rumi_brain11_test5.js:827 first_empty_slot found =  4 num =  5 new_slot_id =  5.slot.div_container.2
rumi_brain11_test5.js:832 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  5.slot.div_container.2
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:665 for tile id square-12-2 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.2   newSlotId = 5.slot.div_container.2
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 4 length_of_list =  6
rumi_brain11_test5.js:737 making another tile square-12-2
rumi_brain11_test5.js:748  ----------BOTTOM of makeStuffDelayer()-----  i =  5  Date.now()=  1612558715350
make_tile_graphic.js:70 APPENDING TILE <  square-12-2 > to slot id < 4.slot.div_container.2 >
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  5  Date.now()=  1612558716651
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-13-2
rumi_brain11_test5.js:656 makeNew = yes newContainerId div_container.2 tile_id square-13-2 i 5
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-13-2 append_to_id = 5.slot.div_container.2
rumi_brain11_test5.js:827 first_empty_slot found =  5 num =  6 new_slot_id =  6.slot.div_container.2
rumi_brain11_test5.js:832 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  6.slot.div_container.2
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:665 for tile id square-13-2 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.2   newSlotId = 6.slot.div_container.2
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 5 length_of_list =  6
rumi_brain11_test5.js:737 making another tile square-13-2
rumi_brain11_test5.js:748  ----------BOTTOM of makeStuffDelayer()-----  i =  6  Date.now()=  1612558716652
make_tile_graphic.js:70 APPENDING TILE <  square-13-2 > to slot id < 5.slot.div_container.2 >
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  6  Date.now()=  1612558717953
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 6 length_of_list =  6
rumi_brain11_test5.js:737 making another tile undefined
rumi_brain11_test5.js:748  ----------BOTTOM of makeStuffDelayer()-----  i =  7  Date.now()=  1612558717954
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  7  Date.now()=  1612558719254
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 7 length_of_list =  6
rumi_brain11_test5.js:744 FINISHED MAKING ONE BATCH OF AI TILES
rumi_brain11_test5.js:575 HERE IS THE R E S U L T from AiCreateNewGroup() true
rumi_brain11_test5.js:570 this is new_groups (2) [Array(6), Array(3)] new_groups.length= 2
rumi_brain11_test5.js:572 calling async AiCreateNewGroup()
rumi_brain11_test5.js:631 makeNew == yes typeof(makeNew) string
rumi_brain11_test5.js:632 AiCreateNewGroup receiving this  (6) ["square-8-2", "square-9-2", "square-10-2", "square-11-1", "square-12-2", "square-13-2"]
rumi_brain11_test5.js:637 AiCreateNewGroup This is the length of tile list is 6
rumi_brain11_test5.js:765 line 702  length of list is =  6 Now Calling makeStuffDelayer(); 
rumi_brain11_test5.js:754  i = 0  calling makeAiTilesAndSlots( list_of_tiles[i]  ); square-8-2
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-8-2
rumi_brain11_test5.js:656 makeNew = yes newContainerId  tile_id square-8-2 i 0
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-8-2 append_to_id = undefined
rumi_brain11_test5.js:757 line 697 now calling  makeStuffDelayer(); i =  1
rumi_brain11_test5.js:773 this is < i > = 1
rumi_brain11_test5.js:832 I AM MAKING < 2 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  0.slot.div_container.3
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  1.slot.div_container.3
rumi_brain11_test5.js:858 SLOT MADE , i =  2
rumi_brain11_test5.js:930 left_x 400 top_y 400
rumi_brain11_test5.js:933 bottom of create new container() newContainerId =  div_container.3  newSlotId =  1.slot.div_container.3
rumi_brain11_test5.js:947 GetID(); being called
rumi_brain11_test5.js:949 the selectedList []
rumi_brain11_test5.js:133 !!- clearIds() BEING CALLED --!! selectedList =  []
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  1  Date.now()=  1612558720561
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-9-2
rumi_brain11_test5.js:656 makeNew = yes newContainerId div_container.3 tile_id square-9-2 i 1
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-9-2 append_to_id = 1.slot.div_container.3
rumi_brain11_test5.js:827 first_empty_slot found =  1 num =  2 new_slot_id =  2.slot.div_container.3
rumi_brain11_test5.js:832 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  2.slot.div_container.3
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:665 for tile id square-9-2 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.3   newSlotId = 2.slot.div_container.3
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 1 length_of_list =  6
rumi_brain11_test5.js:737 making another tile square-9-2
rumi_brain11_test5.js:748  ----------BOTTOM of makeStuffDelayer()-----  i =  2  Date.now()=  1612558720564
make_tile_graphic.js:70 APPENDING TILE <  square-9-2 > to slot id < 1.slot.div_container.3 >
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  2  Date.now()=  1612558721864
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-10-2
rumi_brain11_test5.js:656 makeNew = yes newContainerId div_container.3 tile_id square-10-2 i 2
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-10-2 append_to_id = 2.slot.div_container.3
rumi_brain11_test5.js:827 first_empty_slot found =  2 num =  3 new_slot_id =  3.slot.div_container.3
rumi_brain11_test5.js:832 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  3.slot.div_container.3
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:665 for tile id square-10-2 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.3   newSlotId = 3.slot.div_container.3
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 2 length_of_list =  6
rumi_brain11_test5.js:737 making another tile square-10-2
rumi_brain11_test5.js:748  ----------BOTTOM of makeStuffDelayer()-----  i =  3  Date.now()=  1612558721865
rumi_brain11_test5.js:121 clear list being called .....
rumi_brain11_test5.js:123 the selectedList []
rumi_brain11_test5.js:947 GetID(); being called
rumi_brain11_test5.js:949 the selectedList []
rumi_brain11_test5.js:121 clear list being called .....
rumi_brain11_test5.js:123 the selectedList []
rumi_brain11_test5.js:121 clear list being called .....
rumi_brain11_test5.js:123 the selectedList []
make_tile_graphic.js:70 APPENDING TILE <  square-10-2 > to slot id < 2.slot.div_container.3 >
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  3  Date.now()=  1612558723167
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-11-1
rumi_brain11_test5.js:656 makeNew = yes newContainerId div_container.3 tile_id square-11-1 i 3
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-11-1 append_to_id = 3.slot.div_container.3
rumi_brain11_test5.js:827 first_empty_slot found =  3 num =  4 new_slot_id =  4.slot.div_container.3
rumi_brain11_test5.js:832 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  4.slot.div_container.3
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:665 for tile id square-11-1 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.3   newSlotId = 4.slot.div_container.3
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 3 length_of_list =  6
rumi_brain11_test5.js:737 making another tile square-11-1
rumi_brain11_test5.js:748  ----------BOTTOM of makeStuffDelayer()-----  i =  4  Date.now()=  1612558723168
make_tile_graphic.js:70 APPENDING TILE <  square-11-1 > to slot id < 3.slot.div_container.3 >
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  4  Date.now()=  1612558724469
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-12-2
rumi_brain11_test5.js:656 makeNew = yes newContainerId div_container.3 tile_id square-12-2 i 4
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-12-2 append_to_id = 4.slot.div_container.3
rumi_brain11_test5.js:827 first_empty_slot found =  4 num =  5 new_slot_id =  5.slot.div_container.3
rumi_brain11_test5.js:832 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  5.slot.div_container.3
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:665 for tile id square-12-2 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.3   newSlotId = 5.slot.div_container.3
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 4 length_of_list =  6
rumi_brain11_test5.js:737 making another tile square-12-2
rumi_brain11_test5.js:748  ----------BOTTOM of makeStuffDelayer()-----  i =  5  Date.now()=  1612558724474
make_tile_graphic.js:70 APPENDING TILE <  square-12-2 > to slot id < 4.slot.div_container.3 >
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  5  Date.now()=  1612558725774
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-13-2
rumi_brain11_test5.js:656 makeNew = yes newContainerId div_container.3 tile_id square-13-2 i 5
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-13-2 append_to_id = 5.slot.div_container.3
rumi_brain11_test5.js:827 first_empty_slot found =  5 num =  6 new_slot_id =  6.slot.div_container.3
rumi_brain11_test5.js:832 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  6.slot.div_container.3
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:665 for tile id square-13-2 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.3   newSlotId = 6.slot.div_container.3
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 5 length_of_list =  6
rumi_brain11_test5.js:737 making another tile square-13-2
rumi_brain11_test5.js:748  ----------BOTTOM of makeStuffDelayer()-----  i =  6  Date.now()=  1612558725775
make_tile_graphic.js:70 APPENDING TILE <  square-13-2 > to slot id < 5.slot.div_container.3 >
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  6  Date.now()=  1612558727076
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 6 length_of_list =  6
rumi_brain11_test5.js:737 making another tile undefined
rumi_brain11_test5.js:748  ----------BOTTOM of makeStuffDelayer()-----  i =  7  Date.now()=  1612558727077
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  7  Date.now()=  1612558728378
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 7 length_of_list =  6
rumi_brain11_test5.js:744 FINISHED MAKING ONE BATCH OF AI TILES
rumi_brain11_test5.js:575 HERE IS THE R E S U L T from AiCreateNewGroup() true
rumi_brain11_test5.js:570 this is new_groups (2) [Array(6), Array(3)] new_groups.length= 2
rumi_brain11_test5.js:572 calling async AiCreateNewGroup()
rumi_brain11_test5.js:631 makeNew == yes typeof(makeNew) string
rumi_brain11_test5.js:632 AiCreateNewGroup receiving this  (6) ["square-8-2", "square-9-2", "square-10-2", "square-11-1", "square-12-2", "square-13-2"]
rumi_brain11_test5.js:637 AiCreateNewGroup This is the length of tile list is 6
rumi_brain11_test5.js:765 line 702  length of list is =  6 Now Calling makeStuffDelayer(); 
rumi_brain11_test5.js:754  i = 0  calling makeAiTilesAndSlots( list_of_tiles[i]  ); square-8-2
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-8-2
rumi_brain11_test5.js:656 makeNew = yes newContainerId  tile_id square-8-2 i 0
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-8-2 append_to_id = undefined
rumi_brain11_test5.js:757 line 697 now calling  makeStuffDelayer(); i =  1
rumi_brain11_test5.js:773 this is < i > = 1
rumi_brain11_test5.js:832 I AM MAKING < 2 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  0.slot.div_container.4
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  1.slot.div_container.4
rumi_brain11_test5.js:858 SLOT MADE , i =  2
rumi_brain11_test5.js:930 left_x 400 top_y 400
rumi_brain11_test5.js:933 bottom of create new container() newContainerId =  div_container.4  newSlotId =  1.slot.div_container.4
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  1  Date.now()=  1612558729683
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-9-2
rumi_brain11_test5.js:656 makeNew = yes newContainerId div_container.4 tile_id square-9-2 i 1
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-9-2 append_to_id = 1.slot.div_container.4
rumi_brain11_test5.js:827 first_empty_slot found =  1 num =  2 new_slot_id =  2.slot.div_container.4
rumi_brain11_test5.js:832 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  2.slot.div_container.4
rumi_brain11_test5.js:858 SLOT MADE , i =  1
rumi_brain11_test5.js:665 for tile id square-9-2 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.4   newSlotId = 2.slot.div_container.4
rumi_brain11_test5.js:736 makeStuffDelayer() running  i = 1 length_of_list =  6
rumi_brain11_test5.js:737 making another tile square-9-2
rumi_brain11_test5.js:748  ----------BOTTOM of makeStuffDelayer()-----  i =  2  Date.now()=  1612558729686
make_tile_graphic.js:70 APPENDING TILE <  square-9-2 > to slot id < 1.slot.div_container.4 >
rumi_brain11_test5.js:734  ----------TOP of makeStuffDelayer()-----  i =  2  Date.now()=  1612558730987
rumi_brain11_test5.js:652  makeAiTilesAndSlots(tile_id) receiving  square-10-2
rumi_brain11_test5.js:656 makeNew = yes newContainerId div_container.4 tile_id square-10-2 i 2
make_tile_graphic.js:11  makeTileGraphic() tileId =  square-10-2 append_to_id = 2.slot.div_container.4
rumi_brain11_test5.js:827 first_empty_slot found =  2 num =  3 new_slot_id =  3.slot.div_container.4
rumi_brain11_test5.js:832 I AM MAKING < 1 > SLOTS
rumi_brain11_test5.js:849 << APPENDING >>- SLOT ID =  3.slot.div_container.4
rumi_brain11_test5.js:858 SLOT MADE , i =  1
​ for tile id square-10-2 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.4   newSlotId = 3.slot.div_container.4
​ makeStuffDelayer() running  i = 2 length_of_list =  6
​ making another tile square-10-2
​  ----------BOTTOM of makeStuffDelayer()-----  i =  3  Date.now()=  1612558730990
​ APPENDING TILE <  square-10-2 > to slot id < 2.slot.div_container.4 >
​  ----------TOP of makeStuffDelayer()-----  i =  3  Date.now()=  1612558732291
​  makeAiTilesAndSlots(tile_id) receiving  square-11-1
​ makeNew = yes newContainerId div_container.4 tile_id square-11-1 i 3
​  makeTileGraphic() tileId =  square-11-1 append_to_id = 3.slot.div_container.4
​ first_empty_slot found =  3 num =  4 new_slot_id =  4.slot.div_container.4
​ I AM MAKING < 1 > SLOTS
​ << APPENDING >>- SLOT ID =  4.slot.div_container.4
​ SLOT MADE , i =  1
​ for tile id square-11-1 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.4   newSlotId = 4.slot.div_container.4
​ makeStuffDelayer() running  i = 3 length_of_list =  6
​ making another tile square-11-1
​  ----------BOTTOM of makeStuffDelayer()-----  i =  4  Date.now()=  1612558732294
​ APPENDING TILE <  square-11-1 > to slot id < 3.slot.div_container.4 >
​  ----------TOP of makeStuffDelayer()-----  i =  4  Date.now()=  1612558733595
​  makeAiTilesAndSlots(tile_id) receiving  square-12-2
​ makeNew = yes newContainerId div_container.4 tile_id square-12-2 i 4
​  makeTileGraphic() tileId =  square-12-2 append_to_id = 4.slot.div_container.4
​ first_empty_slot found =  4 num =  5 new_slot_id =  5.slot.div_container.4
​ I AM MAKING < 1 > SLOTS
​ << APPENDING >>- SLOT ID =  5.slot.div_container.4
​ SLOT MADE , i =  1
​ for tile id square-12-2 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.4   newSlotId = 5.slot.div_container.4
​ makeStuffDelayer() running  i = 4 length_of_list =  6
​ making another tile square-12-2
​  ----------BOTTOM of makeStuffDelayer()-----  i =  5  Date.now()=  1612558733600
​ APPENDING TILE <  square-12-2 > to slot id < 4.slot.div_container.4 >
​  ----------TOP of makeStuffDelayer()-----  i =  5  Date.now()=  1612558734900
​  makeAiTilesAndSlots(tile_id) receiving  square-13-2
​ makeNew = yes newContainerId div_container.4 tile_id square-13-2 i 5
​  makeTileGraphic() tileId =  square-13-2 append_to_id = 5.slot.div_container.4
​ first_empty_slot found =  5 num =  6 new_slot_id =  6.slot.div_container.4
​ I AM MAKING < 1 > SLOTS
​ << APPENDING >>- SLOT ID =  6.slot.div_container.4
​ SLOT MADE , i =  1
​ for tile id square-13-2 makeAiTilesAndSLots the length of the newContainerId > 0 newContainerId =  div_container.4   newSlotId = 6.slot.div_container.4
​ makeStuffDelayer() running  i = 5 length_of_list =  6
​ making another tile square-13-2
​  ----------BOTTOM of makeStuffDelayer()-----  i =  6  Date.now()=  1612558734902
​ APPENDING TILE <  square-13-2 > to slot id < 5.slot.div_container.4 >
*/






/*

(14) ["square-10-2", "square-11-2", "triangle-7-1", "square-4-1", "triangle-13-1", "triangle-6-1", "circle-4-2", "circle-8-1", "diamond-1-1", "triangle-13-2", "diamond-12-2", "triangle-8-2", "square-13-1", "circle-6-2"]
0: "square-10-2"
1: "square-11-2"
2: "triangle-7-1"
3: "square-4-1"
4: "triangle-13-1"
5: "triangle-6-1"
6: "circle-4-2"
7: "circle-8-1"
8: "diamond-1-1"
9: "triangle-13-2"
10: "diamond-12-2"
11: "triangle-8-2"
12: "square-13-1"
13: "circle-6-2"
length: 14

ay(1), 12: Array(1), 13: Array(1)}
ai_moves_decider9.js:359 ai_playable_of_kind = []
ai_moves_decider9.js:465 ai_playable_of_kind = []
ai_moves_decider9.js:466  ai_poss_suits =  [Array(3)]
ai_moves_decider9.js:468 test_string baby
ai_moves_decider9.js:470 test_string baby
ai_moves_decider9.js:502 <<<<<<<<<<<<<<<  BUILDING FINAL OBJ TO PLAY >>>>>>>>>>>>>>>>
ai_moves_decider9.js:503  this is master_ai_playable_list =  [Array(3)] this is its length = 1
ai_moves_decider9.js:518 here is pla ai_tiles_list << BEFORE >> to deletion of tiles we will play (14) ["square-10-2", "square-11-2", "triangle-7-1", "square-4-1", "triangle-13-1", "triangle-6-1", "circle-4-2", "circle-8-1", "diamond-1-1", "triangle-13-2", "diamond-12-2", "triangle-8-2", "square-13-1", "circle-6-2"]
ai_moves_decider9.js:519 here are all playable groups thus far [Array(3)]
ai_moves_decider9.js:520 here is the GROUPS TO BE PLAYED SO FAR , add_ai_tiles_gb_group [{…}]
ai_moves_decider9.js:522 here is the GROUPS TO BE PLAYED SO FAR , add_ai_tiles_gb_group.tiles_to_play = [Array(3)]
ai_moves_decider9.js:538 here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (11) ["square-10-2", "square-11-2", "square-4-1", "triangle-13-1", "circle-4-2", "circle-8-1", "diamond-1-1", "triangle-13-2", "diamond-12-2", "square-13-1", "circle-6-2"]

<< it was going to play triangle-6-1,  triangle-7-1, triangle-8-2 >>> 
    but went into infinite loop - there was a group of triangle 8,9,10 so wonder if it didn't know to play it one existing group or its new group

ai_moves_decider9.js:212 ai_tiles_organized current item being mapped square-10-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped square-11-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped square-4-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped triangle-13-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped circle-4-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped circle-8-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped diamond-1-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped triangle-13-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped diamond-12-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped square-13-1
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped circle-6-2
ai_moves_decider9.js:220 ai_tiles_organized_1 {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:544 here is  ai_tiles_organized_1 rebuilt with loose tiles, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:590 game_board_gp_count 2
ai_moves_decider9.js:595 here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:621 [] "max_suit

eck for new matches calling   checkAiGroupToGameBoardGroup()   ["triangle"]
ai_moves_decider9.js:689 top of  checkAiGroupToGameBoardGroup() here is <<ai_tiles_organized_1>> with TILE GROUP Mapped to it, {circle: Array(14), diamond: Array(14), square: Array(14), triangle: Array(14)}
ai_moves_decider9.js:712 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 circle-4-2 curr obj  {loc: "ai_rack", id: "circle-4-2", num: 4}
ai_moves_decider9.js:713 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  [{…}]
ai_moves_decider9.js:712 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 circle-6-2 curr obj  {loc: "ai_rack", id: "circle-6-2", num: 6}
ai_moves_decider9.js:713 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  [{…}]
ai_moves_decider9.js:712 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 circle-8-1 curr obj  {loc: "ai_rack", id: "circle-8-1", num: 8}
ai_moves_decider9.js:713 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  [{…}]
ai_moves_decider9.js:712 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-1-1 curr obj  {loc: "ai_rack", id: "diamond-1-1", num: 1}
ai_moves_decider9.js:713 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  [{…}]
ai_moves_decider9.js:712 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 diamond-12-2 curr obj  {loc: "ai_rack", id: "diamond-12-2", num: 12}
ai_moves_decider9.js:713 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  [{…}]
ai_moves_decider9.js:712 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 square-4-1 curr obj  {loc: "ai_rack", id: "square-4-1", num: 4}
ai_moves_decider9.js:713 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  [{…}]
ai_moves_decider9.js:712 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 square-10-2 curr obj  {loc: "ai_rack", id: "square-10-2", num: 10}
ai_moves_decider9.js:713 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  [{…}]
ai_moves_decider9.js:712 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 square-11-2 curr obj  {loc: "ai_rack", id: "square-11-2", num: 11}
ai_moves_decider9.js:713 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  [{…}]
ai_moves_decider9.js:712 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 square-13-1 curr obj  {loc: "ai_rack", id: "square-13-1", num: 13}
ai_moves_decider9.js:713 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  [{…}]
ai_moves_decider9.js:720 condition 2 met , curr_grp_id = obj.loc;  div_container.1 curr obj  {loc: "div_container.1", id: "triangle-2-1", num: 2}
ai_moves_decider9.js:712 condition 1 met this obo being pushed temp_poss_group.push( obj.id )  cond1 = 1 cond2 = 0 triangle-13-2 curr obj  {loc: "ai_rack", id: "triangle-13-2", num: 13}
ai_moves_decider9.js:713 in this stmt if ( obj.loc == ai_rack)  this is add_ai_tiles_gb_group  [{…}]
ai_moves_decider9.js:775  +
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            // RE RUN MATCHES --NOW THIS WORKS MAN !
            ///////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////
            
ai_moves_decider9.js:782  <<< REEEE--CURSION!! >>>  - RERUNNING MATCH -- GAME BOARD TILES TO AI RACK
ai_moves_decider9.js:783 all_played_grps_ids ["div_container.1"] game_board_gp_count 2
ai_moves_decider9.js:673 top of clearOutTilesToBePlayedFromAIList() AND tiles_tobe_played =  []
ai_moves_decider9.js:679 clearOutTilesToBePlayedFromAIList() here is playable ai_tiles_list << AFTER >> deletion of tiles we will play (11) ["square-10-2", "square-11-2", "square-4-1", "triangle-13-1", "circle-4-2", "circle-8-1", "diamond-1-1", "triangle-13-2", "diamond-12-2", "square-13-1", "circle-6-2"]
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped square-10-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped square-11-2
ai_moves_decider9.js:212 ai_tiles_organized current item being mapped square-4-1


*/